

Microchip Technology PIC18 LITE Macro Assembler V1.32 build 58300 
                                                                                               Tue Jun 18 16:38:24 2019

Microchip Technology Omniscient Code Generator (Lite mode) build 58300
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1
     8                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    41                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    42                           	psect	text26,global,reloc=2,class=CODE,delta=1
    43                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    46  0000                     
    47 ;; Function _lcd_printi is unused but had its address taken
    48  0000                     
    49 ;; Function _lcd_printc is unused but had its address taken
    50  0000                     
    51                           	psect	idataBANK0
    52  001928                     __pidataBANK0:
    53                           	opt stack 0
    54                           
    55                           ;initializer for lcd_get@F5483
    56  001928  1714               	dw	_lcd_print& (0+65535)
    57  00192A  17E2               	dw	_lcd_printl& (0+65535)
    58  00192C  0000               	dw	0
    59  00192E  0000               	dw	0
    60  001930  18FC               	dw	_lcd_clear& (0+65535)
    61  001932  18B2               	dw	_lcd_set_cursor& (0+65535)
    62  001934  00                 	db	0
    63  001935  00                 	db	0
    64  001936  00                 	db	0
    65                           
    66                           	psect	smallconst
    67  00081C                     __psmallconst:
    68                           	opt stack 0
    69  00081C  00                 	db	0
    70  00081D                     _dpowers:
    71                           	opt stack 0
    72  00081D  0001               	dw	1
    73  00081F  0000               	dw	0
    74  000821  000A               	dw	10
    75  000823  0000               	dw	0
    76  000825  0064               	dw	100
    77  000827  0000               	dw	0
    78  000829  03E8               	dw	1000
    79  00082B  0000               	dw	0
    80  00082D  2710               	dw	10000
    81  00082F  0000               	dw	0
    82  000831  86A0               	dw	34464
    83  000833  0001               	dw	1
    84  000835  4240               	dw	16960
    85  000837  000F               	dw	15
    86  000839  9680               	dw	38528
    87  00083B  0098               	dw	152
    88  00083D  E100               	dw	57600
    89  00083F  05F5               	dw	1525
    90  000841  CA00               	dw	51712
    91  000843  3B9A               	dw	15258
    92  000845                     __end_of_dpowers:
    93                           	opt stack 0
    94  0000                     _ADCON0	set	4034
    95  0000                     _ADCON0bits	set	4034
    96  0000                     _ADCON1	set	4033
    97  0000                     _ADCON2	set	4032
    98  0000                     _ADRESH	set	4036
    99  0000                     _ADRESL	set	4035
   100  0000                     _CCP1CON	set	4029
   101  0000                     _CCPR1L	set	4030
   102  0000                     _INTCON2bits	set	4081
   103  0000                     _INTCON3bits	set	4080
   104  0000                     _INTCONbits	set	4082
   105  0000                     _PIE1bits	set	3997
   106  0000                     _PIR1bits	set	3998
   107  0000                     _PORTA	set	3968
   108  0000                     _PORTAbits	set	3968
   109  0000                     _PORTB	set	3969
   110  0000                     _PORTBbits	set	3969
   111  0000                     _PORTC	set	3970
   112  0000                     _PORTCbits	set	3970
   113  0000                     _PORTD	set	3971
   114  0000                     _PORTDbits	set	3971
   115  0000                     _PORTE	set	3972
   116  0000                     _PORTEbits	set	3972
   117  0000                     _PR2	set	4043
   118  0000                     _T2CONbits	set	4042
   119  0000                     _TRISA	set	3986
   120  0000                     _TRISAbits	set	3986
   121  0000                     _TRISB	set	3987
   122  0000                     _TRISBbits	set	3987
   123  0000                     _TRISC	set	3988
   124  0000                     _TRISCbits	set	3988
   125  0000                     _TRISD	set	3989
   126  0000                     _TRISDbits	set	3989
   127  0000                     _TRISE	set	3990
   128  0000                     _TRISEbits	set	3990
   129  000845                     __stringdata:
   130                           	opt stack 0
   131  000845                     STR_3:
   132  000845  54                 	db	84	;'T'
   133  000846  61                 	db	97	;'a'
   134  000847  63                 	db	99	;'c'
   135  000848  68                 	db	104	;'h'
   136  000849  6F                 	db	111	;'o'
   137  00084A  6D                 	db	109	;'m'
   138  00084B  65                 	db	101	;'e'
   139  00084C  74                 	db	116	;'t'
   140  00084D  65                 	db	101	;'e'
   141  00084E  72                 	db	114	;'r'
   142  00084F  20                 	db	32
   143  000850  28                 	db	40
   144  000851  52                 	db	82	;'R'
   145  000852  50                 	db	80	;'P'
   146  000853  4D                 	db	77	;'M'
   147  000854  29                 	db	41
   148  000855  00                 	db	0
   149  000856                     STR_4:
   150  000856  20                 	db	32
   151  000857  20                 	db	32
   152  000858  20                 	db	32
   153  000859  20                 	db	32
   154  00085A  00                 	db	0
   155  00085B                     STR_1:
   156  00085B  25                 	db	37
   157  00085C  6C                 	db	108	;'l'
   158  00085D  64                 	db	100	;'d'
   159  00085E  00                 	db	0
   160  00085F  25                 	db	37
   161  000860  64                 	db	100	;'d'
   162  000861  00                 	db	0
   163  000862                     __end_of__stringdata:
   164                           	opt stack 0
   165                           
   166                           ; #config settings
   167  000862  00                 	db	0	; dummy byte at the end
   168  0000                     
   169                           	psect	nvCOMRAM
   170  00004D                     __pnvCOMRAM:
   171                           	opt stack 0
   172  00004D                     _lcd_selected:
   173                           	opt stack 0
   174  00004D                     	ds	2
   175                           
   176                           	psect	nvBANK0
   177  0000A2                     __pnvBANK0:
   178                           	opt stack 0
   179  0000A2                     _lcd:
   180                           	opt stack 0
   181  0000A2                     	ds	15
   182                           
   183                           	psect	cinit
   184  001766                     __pcinit:
   185                           	opt stack 0
   186  001766                     start_initialization:
   187                           	opt stack 0
   188  001766                     __initialization:
   189                           	opt stack 0
   190                           
   191                           ; Clear objects allocated to BANK0 (66 bytes)
   192  001766  EE00  F060         	lfsr	0,__pbssBANK0
   193  00176A  0E42               	movlw	66
   194  00176C                     clear_0:
   195  00176C  6AEE               	clrf	postinc0,c
   196  00176E  06E8               	decf	wreg,f,c
   197  001770  E1FD               	bnz	clear_0
   198                           
   199                           ; Clear objects allocated to COMRAM (10 bytes)
   200  001772  EE00  F043         	lfsr	0,__pbssCOMRAM
   201  001776  0E0A               	movlw	10
   202  001778                     clear_1:
   203  001778  6AEE               	clrf	postinc0,c
   204  00177A  06E8               	decf	wreg,f,c
   205  00177C  E1FD               	bnz	clear_1
   206                           
   207                           ; Initialize objects allocated to BANK0 (15 bytes)
   208                           ; load TBLPTR registers with __pidataBANK0
   209  00177E  0E28               	movlw	low __pidataBANK0
   210  001780  6EF6               	movwf	tblptrl,c
   211  001782  0E19               	movlw	high __pidataBANK0
   212  001784  6EF7               	movwf	tblptrh,c
   213  001786  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   214  001788  6EF8               	movwf	tblptru,c
   215  00178A  EE00  F0B1         	lfsr	0,__pdataBANK0
   216  00178E  EE10 F00F          	lfsr	1,15
   217  001792                     copy_data0:
   218  001792  0009               	tblrd		*+
   219  001794  CFF5 FFEE          	movff	tablat,postinc0
   220  001798  50E5               	movf	postdec1,w,c
   221  00179A  50E1               	movf	fsr1l,w,c
   222  00179C  E1FA               	bnz	copy_data0
   223  00179E                     end_of_initialization:
   224                           	opt stack 0
   225  00179E                     __end_of__initialization:
   226                           	opt stack 0
   227  00179E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   228  0017A0  6EF8               	movwf	tblptru,c
   229  0017A2  0100               	movlb	0
   230  0017A4  EFAA  F00C         	goto	_main	;jump to C main() function
   231                           tblptru	equ	0xFF8
   232                           tblptrh	equ	0xFF7
   233                           tblptrl	equ	0xFF6
   234                           tablat	equ	0xFF5
   235                           postinc0	equ	0xFEE
   236                           wreg	equ	0xFE8
   237                           postdec1	equ	0xFE5
   238                           fsr1l	equ	0xFE1
   239                           
   240                           	psect	bssCOMRAM
   241  000043                     __pbssCOMRAM:
   242                           	opt stack 0
   243  000043                     _count:
   244                           	opt stack 0
   245  000043                     	ds	4
   246  000047                     _interrupt_list:
   247                           	opt stack 0
   248  000047                     	ds	4
   249  00004B                     lcd_printc@fmt:
   250                           	opt stack 0
   251  00004B                     	ds	2
   252                           tblptru	equ	0xFF8
   253                           tblptrh	equ	0xFF7
   254                           tblptrl	equ	0xFF6
   255                           tablat	equ	0xFF5
   256                           postinc0	equ	0xFEE
   257                           wreg	equ	0xFE8
   258                           postdec1	equ	0xFE5
   259                           fsr1l	equ	0xFE1
   260                           
   261                           	psect	bssBANK0
   262  000060                     __pbssBANK0:
   263                           	opt stack 0
   264  000060                     lcd_printi@fmt:
   265                           	opt stack 0
   266  000060                     	ds	33
   267  000081                     lcd_printl@fmt:
   268                           	opt stack 0
   269  000081                     	ds	33
   270                           tblptru	equ	0xFF8
   271                           tblptrh	equ	0xFF7
   272                           tblptrl	equ	0xFF6
   273                           tablat	equ	0xFF5
   274                           postinc0	equ	0xFEE
   275                           wreg	equ	0xFE8
   276                           postdec1	equ	0xFE5
   277                           fsr1l	equ	0xFE1
   278                           
   279                           	psect	dataBANK0
   280  0000B1                     __pdataBANK0:
   281                           	opt stack 0
   282  0000B1                     lcd_get@F5483:
   283                           	opt stack 0
   284  0000B1                     	ds	15
   285                           tblptru	equ	0xFF8
   286                           tblptrh	equ	0xFF7
   287                           tblptrl	equ	0xFF6
   288                           tablat	equ	0xFF5
   289                           postinc0	equ	0xFEE
   290                           wreg	equ	0xFE8
   291                           postdec1	equ	0xFE5
   292                           fsr1l	equ	0xFE1
   293                           
   294                           	psect	cstackBANK0
   295  0000C0                     __pcstackBANK0:
   296                           	opt stack 0
   297  0000C0                     sprintf@prec:
   298                           	opt stack 0
   299                           
   300                           ; 2 bytes @ 0x0
   301  0000C0                     	ds	2
   302  0000C2                     sprintf@ap:
   303                           	opt stack 0
   304                           
   305                           ; 2 bytes @ 0x2
   306  0000C2                     	ds	2
   307  0000C4                     sprintf@flag:
   308                           	opt stack 0
   309                           
   310                           ; 1 bytes @ 0x4
   311  0000C4                     	ds	1
   312  0000C5                     sprintf@_val:
   313                           	opt stack 0
   314                           
   315                           ; 5 bytes @ 0x5
   316  0000C5                     	ds	5
   317  0000CA                     sprintf@c:
   318                           	opt stack 0
   319                           
   320                           ; 1 bytes @ 0xA
   321  0000CA                     	ds	1
   322  0000CB                     loop@rpm:
   323                           	opt stack 0
   324                           
   325                           ; 4 bytes @ 0xB
   326  0000CB                     	ds	4
   327                           tblptru	equ	0xFF8
   328                           tblptrh	equ	0xFF7
   329                           tblptrl	equ	0xFF6
   330                           tablat	equ	0xFF5
   331                           postinc0	equ	0xFEE
   332                           wreg	equ	0xFE8
   333                           postdec1	equ	0xFE5
   334                           fsr1l	equ	0xFE1
   335                           
   336                           	psect	cstackCOMRAM
   337  000001                     __pcstackCOMRAM:
   338                           	opt stack 0
   339  000001                     ??_ArduimInterruptHandler:
   340  000001                     
   341                           ; 0 bytes @ 0x0
   342  000001                     	ds	14
   343  00000F                     ?_digitalRead:
   344                           	opt stack 0
   345  00000F                     ?___lmul:
   346                           	opt stack 0
   347  00000F                     ?_lcd_get:
   348                           	opt stack 0
   349  00000F                     pinMode@mode:
   350                           	opt stack 0
   351  00000F                     lcd_get@en:
   352                           	opt stack 0
   353  00000F                     OpenRB0INT@config:
   354                           	opt stack 0
   355  00000F                     OpenRB1INT@config:
   356                           	opt stack 0
   357  00000F                     Delay1KTCYx@unit:
   358                           	opt stack 0
   359  00000F                     delayMicroseconds@time:
   360                           	opt stack 0
   361  00000F                     ___lmul@multiplier:
   362                           	opt stack 0
   363                           
   364                           ; 4 bytes @ 0xE
   365  00000F                     	ds	1
   366  000010                     pinMode@pin:
   367                           	opt stack 0
   368  000010                     lcd_get@port:
   369                           	opt stack 0
   370  000010                     attachInterrupt@callback:
   371                           	opt stack 0
   372  000010                     delay@time:
   373                           	opt stack 0
   374                           
   375                           ; 4 bytes @ 0xF
   376  000010                     	ds	1
   377  000011                     ??_digitalRead:
   378  000011                     delayMicroseconds@i:
   379                           	opt stack 0
   380                           
   381                           ; 2 bytes @ 0x10
   382  000011                     	ds	1
   383  000012                     digitalRead@pin:
   384                           	opt stack 0
   385  000012                     attachInterrupt@mode:
   386                           	opt stack 0
   387                           
   388                           ; 2 bytes @ 0x11
   389  000012                     	ds	1
   390  000013                     digitalWrite@level:
   391                           	opt stack 0
   392  000013                     ___lmul@multiplicand:
   393                           	opt stack 0
   394                           
   395                           ; 4 bytes @ 0x12
   396  000013                     	ds	1
   397  000014                     digitalWrite@pin:
   398                           	opt stack 0
   399  000014                     attachInterrupt@pin:
   400                           	opt stack 0
   401                           
   402                           ; 1 bytes @ 0x13
   403  000014                     	ds	1
   404  000015                     lcd_cmd@cmd:
   405                           	opt stack 0
   406  000015                     lcd_data@data:
   407                           	opt stack 0
   408                           
   409                           ; 1 bytes @ 0x14
   410  000015                     	ds	1
   411  000016                     lcd_set_cursor@line:
   412                           	opt stack 0
   413  000016                     lcd_select@lcd_ptr:
   414                           	opt stack 0
   415  000016                     lcd_print@s:
   416                           	opt stack 0
   417                           
   418                           ; 2 bytes @ 0x15
   419  000016                     	ds	1
   420  000017                     lcd_set_cursor@column:
   421                           	opt stack 0
   422  000017                     ___lmul@product:
   423                           	opt stack 0
   424                           
   425                           ; 4 bytes @ 0x16
   426  000017                     	ds	1
   427  000018                     _lcd_set_cursor$1121:
   428                           	opt stack 0
   429                           
   430                           ; 2 bytes @ 0x17
   431  000018                     	ds	3
   432  00001B                     ?___lldiv:
   433                           	opt stack 0
   434  00001B                     ___lldiv@dividend:
   435                           	opt stack 0
   436                           
   437                           ; 4 bytes @ 0x1A
   438  00001B                     	ds	4
   439  00001F                     lcd_get@rs:
   440                           	opt stack 0
   441  00001F                     ___lldiv@divisor:
   442                           	opt stack 0
   443                           
   444                           ; 4 bytes @ 0x1E
   445  00001F                     	ds	1
   446  000020                     lcd_get@b:
   447                           	opt stack 0
   448                           
   449                           ; 15 bytes @ 0x1F
   450  000020                     	ds	3
   451  000023                     ___lldiv@quotient:
   452                           	opt stack 0
   453                           
   454                           ; 4 bytes @ 0x22
   455  000023                     	ds	4
   456  000027                     ___lldiv@counter:
   457                           	opt stack 0
   458                           
   459                           ; 1 bytes @ 0x26
   460  000027                     	ds	1
   461  000028                     ?___llmod:
   462                           	opt stack 0
   463  000028                     ___llmod@dividend:
   464                           	opt stack 0
   465                           
   466                           ; 4 bytes @ 0x27
   467  000028                     	ds	4
   468  00002C                     ___llmod@divisor:
   469                           	opt stack 0
   470                           
   471                           ; 4 bytes @ 0x2B
   472  00002C                     	ds	3
   473  00002F                     
   474                           ; 0 bytes @ 0x2E
   475  00002F                     	ds	1
   476  000030                     ___llmod@counter:
   477                           	opt stack 0
   478                           
   479                           ; 1 bytes @ 0x2F
   480  000030                     	ds	1
   481  000031                     ?_sprintf:
   482                           	opt stack 0
   483  000031                     sprintf@sp:
   484                           	opt stack 0
   485                           
   486                           ; 2 bytes @ 0x30
   487  000031                     	ds	2
   488  000033                     sprintf@f:
   489                           	opt stack 0
   490                           
   491                           ; 2 bytes @ 0x32
   492  000033                     	ds	6
   493  000039                     ??_sprintf:
   494                           
   495                           ; 0 bytes @ 0x38
   496  000039                     	ds	6
   497  00003F                     lcd_printl@l:
   498                           	opt stack 0
   499                           
   500                           ; 4 bytes @ 0x3E
   501  00003F                     	ds	4
   502  000043                     tblptru	equ	0xFF8
   503                           tblptrh	equ	0xFF7
   504                           tblptrl	equ	0xFF6
   505                           tablat	equ	0xFF5
   506                           postinc0	equ	0xFEE
   507                           wreg	equ	0xFE8
   508                           postdec1	equ	0xFE5
   509                           fsr1l	equ	0xFE1
   510                           
   511                           ; 0 bytes @ 0x42
   512 ;;
   513 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   514 ;;
   515 ;; *************** function _main *****************
   516 ;; Defined at:
   517 ;;		line 6 in file "../test/../include/../src/arduim.c"
   518 ;; Parameters:    Size  Location     Type
   519 ;;		None
   520 ;; Auto vars:     Size  Location     Type
   521 ;;		None
   522 ;; Return value:  Size  Location     Type
   523 ;;		None               void
   524 ;; Registers used:
   525 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, p
      +rodh, cstack
   526 ;; Tracked objects:
   527 ;;		On entry : 0/0
   528 ;;		On exit  : 0/0
   529 ;;		Unchanged: 0/0
   530 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   531 ;;      Params:         0       0       0       0       0       0       0       0       0
   532 ;;      Locals:         0       0       0       0       0       0       0       0       0
   533 ;;      Temps:          0       0       0       0       0       0       0       0       0
   534 ;;      Totals:         0       0       0       0       0       0       0       0       0
   535 ;;Total ram usage:        0 bytes
   536 ;; Hardware stack levels required when called:    8
   537 ;; This function calls:
   538 ;;		_loop
   539 ;;		_setup
   540 ;; This function is called by:
   541 ;;		Startup code after reset
   542 ;; This function uses a non-reentrant model
   543 ;;
   544                           
   545                           	psect	text0
   546  001954                     __ptext0:
   547                           	opt stack 0
   548  001954                     _main:
   549                           	opt stack 23
   550                           
   551                           ;arduim.c: 8: setup();
   552                           
   553                           ;incstack = 0
   554  001954  ECC8  F009         	call	_setup	;wreg free
   555  001958                     l2708:
   556                           
   557                           ;arduim.c: 10: loop();
   558  001958  EC7B  F008         	call	_loop	;wreg free
   559  00195C  D7FD               	goto	l2708
   560  00195E                     __end_of_main:
   561                           	opt stack 0
   562                           tblptru	equ	0xFF8
   563                           tblptrh	equ	0xFF7
   564                           tblptrl	equ	0xFF6
   565                           tablat	equ	0xFF5
   566                           postinc0	equ	0xFEE
   567                           wreg	equ	0xFE8
   568                           postdec1	equ	0xFE5
   569                           fsr1l	equ	0xFE1
   570                           
   571 ;; *************** function _setup *****************
   572 ;; Defined at:
   573 ;;		line 14 in file "../test/test_tachometer.c"
   574 ;; Parameters:    Size  Location     Type
   575 ;;		None
   576 ;; Auto vars:     Size  Location     Type
   577 ;;		None
   578 ;; Return value:  Size  Location     Type
   579 ;;		None               void
   580 ;; Registers used:
   581 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, cstack
   582 ;; Tracked objects:
   583 ;;		On entry : 0/0
   584 ;;		On exit  : 0/0
   585 ;;		Unchanged: 0/0
   586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   587 ;;      Params:         0       0       0       0       0       0       0       0       0
   588 ;;      Locals:         0       0       0       0       0       0       0       0       0
   589 ;;      Temps:          0       0       0       0       0       0       0       0       0
   590 ;;      Totals:         0       0       0       0       0       0       0       0       0
   591 ;;Total ram usage:        0 bytes
   592 ;; Hardware stack levels used:    1
   593 ;; Hardware stack levels required when called:    7
   594 ;; This function calls:
   595 ;;		_attachInterrupt
   596 ;;		_lcd_get
   597 ;;		_lcd_print
   598 ;;		_lcd_select
   599 ;;		_lcd_set_cursor
   600 ;;		_pinMode
   601 ;; This function is called by:
   602 ;;		_main
   603 ;; This function uses a non-reentrant model
   604 ;;
   605                           
   606                           	psect	text1
   607  001390                     __ptext1:
   608                           	opt stack 0
   609  001390                     _setup:
   610                           	opt stack 23
   611                           
   612                           ;test_tachometer.c: 16: lcd = lcd_get(19, 20, 0x03);
   613                           
   614                           ;incstack = 0
   615  001390  0E14               	movlw	20
   616  001392  6E0F               	movwf	lcd_get@en,c
   617  001394  0E03               	movlw	3
   618  001396  6E10               	movwf	lcd_get@port,c
   619  001398  0E13               	movlw	19
   620  00139A  EC0E  F00C         	call	_lcd_get
   621  00139E  EE20  F0A2         	lfsr	2,_lcd
   622  0013A2  0E0F               	movlw	15
   623  0013A4                     u4071:
   624  0013A4  CFEE FFDE          	movff	postinc0,postinc2
   625  0013A8  2EE8               	decfsz	wreg,f,c
   626  0013AA  D7FC               	goto	u4071
   627                           
   628                           ;test_tachometer.c: 17: lcd_select(&lcd);
   629  0013AC  0100               	movlb	0	; () banked
   630  0013AE  0E00               	movlw	high _lcd
   631  0013B0  6E17               	movwf	lcd_select@lcd_ptr+1,c
   632  0013B2  0100               	movlb	0	; () banked
   633  0013B4  0EA2               	movlw	low _lcd
   634  0013B6  6E16               	movwf	lcd_select@lcd_ptr,c
   635  0013B8  EC9C  F00C         	call	_lcd_select	;wreg free
   636                           
   637                           ;test_tachometer.c: 19: pinMode(7, 1);
   638  0013BC  0E01               	movlw	1
   639  0013BE  6E0F               	movwf	pinMode@mode,c
   640  0013C0  0E07               	movlw	7
   641  0013C2  EC90  F006         	call	_pinMode
   642                           
   643                           ;test_tachometer.c: 20: attachInterrupt(7, counter, 2);
   644  0013C6  0E19               	movlw	high _counter
   645  0013C8  6E11               	movwf	attachInterrupt@callback+1,c
   646  0013CA  0E46               	movlw	low _counter
   647  0013CC  6E10               	movwf	attachInterrupt@callback,c
   648  0013CE  0E00               	movlw	0
   649  0013D0  6E13               	movwf	attachInterrupt@mode+1,c
   650  0013D2  0E02               	movlw	2
   651  0013D4  6E12               	movwf	attachInterrupt@mode,c
   652  0013D6  0E07               	movlw	7
   653  0013D8  ECF8  F00A         	call	_attachInterrupt
   654                           
   655                           ;test_tachometer.c: 22: lcd.setCursor(0, 0);
   656  0013DC  0100               	movlb	0	; () banked
   657  0013DE  EE20  F0AC         	lfsr	2,_lcd+10
   658  0013E2  D801               	call	u4088
   659  0013E4  D00D               	goto	u4089
   660  0013E6                     u4088:
   661  0013E6  0005               	push	
   662  0013E8  6EFA               	movwf	pclath,c
   663  0013EA  50DE               	movf	postinc2,w,c
   664  0013EC  6EFD               	movwf	tosl,c
   665  0013EE  50DE               	movf	postinc2,w,c
   666  0013F0  6EFE               	movwf	tosh,c
   667  0013F2  50F8               	movf	tblptru,w,c
   668  0013F4  6EFF               	movwf	tosu,c
   669  0013F6  50FA               	movf	pclath,w,c
   670  0013F8  0E00               	movlw	0
   671  0013FA  6E16               	movwf	lcd_set_cursor@line,c
   672  0013FC  0E00               	movlw	0
   673  0013FE  0012               	return		;indir
   674  001400                     u4089:
   675                           
   676                           ;test_tachometer.c: 23: lcd.prints("Tachometer (RPM)");
   677  001400  0E08               	movlw	high STR_3
   678  001402  6E17               	movwf	lcd_print@s+1,c
   679  001404  0E45               	movlw	low STR_3
   680  001406  6E16               	movwf	lcd_print@s,c
   681  001408  D801               	call	u4098
   682  00140A  D00D               	goto	u4099
   683  00140C                     u4098:
   684  00140C  0005               	push	
   685  00140E  0100               	movlb	0	; () banked
   686  001410  6EFA               	movwf	pclath,c
   687  001412  0100               	movlb	0	; () banked
   688  001414  51A2               	movf	_lcd& (0+255),w,b
   689  001416  6EFD               	movwf	tosl,c
   690  001418  0100               	movlb	0	; () banked
   691  00141A  51A3               	movf	(_lcd+1)& (0+255),w,b
   692  00141C  6EFE               	movwf	tosh,c
   693  00141E  50F8               	movf	tblptru,w,c
   694  001420  6EFF               	movwf	tosu,c
   695  001422  50FA               	movf	pclath,w,c
   696  001424  0012               	return		;indir
   697  001426                     u4099:
   698                           
   699                           ;test_tachometer.c: 25: pinMode(14, 0);
   700  001426  0E00               	movlw	0
   701  001428  6E0F               	movwf	pinMode@mode,c
   702  00142A  0E0E               	movlw	14
   703  00142C  EC90  F006         	call	_pinMode
   704  001430  0012               	return	
   705  001432                     __end_of_setup:
   706                           	opt stack 0
   707                           tosu	equ	0xFFF
   708                           tosh	equ	0xFFE
   709                           tosl	equ	0xFFD
   710                           pclath	equ	0xFFA
   711                           tblptru	equ	0xFF8
   712                           tblptrh	equ	0xFF7
   713                           tblptrl	equ	0xFF6
   714                           tablat	equ	0xFF5
   715                           postinc0	equ	0xFEE
   716                           wreg	equ	0xFE8
   717                           postdec1	equ	0xFE5
   718                           fsr1l	equ	0xFE1
   719                           postinc2	equ	0xFDE
   720                           
   721 ;; *************** function _lcd_select *****************
   722 ;; Defined at:
   723 ;;		line 5 in file "../test/../include/../src/lcd.c"
   724 ;; Parameters:    Size  Location     Type
   725 ;;  lcd_ptr         2   21[COMRAM] PTR struct .
   726 ;;		 -> lcd(15), 
   727 ;; Auto vars:     Size  Location     Type
   728 ;;		None
   729 ;; Return value:  Size  Location     Type
   730 ;;		None               void
   731 ;; Registers used:
   732 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   733 ;; Tracked objects:
   734 ;;		On entry : 0/0
   735 ;;		On exit  : 0/0
   736 ;;		Unchanged: 0/0
   737 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   738 ;;      Params:         2       0       0       0       0       0       0       0       0
   739 ;;      Locals:         0       0       0       0       0       0       0       0       0
   740 ;;      Temps:          0       0       0       0       0       0       0       0       0
   741 ;;      Totals:         2       0       0       0       0       0       0       0       0
   742 ;;Total ram usage:        2 bytes
   743 ;; Hardware stack levels used:    1
   744 ;; Hardware stack levels required when called:    6
   745 ;; This function calls:
   746 ;;		_lcd_init
   747 ;; This function is called by:
   748 ;;		_setup
   749 ;; This function uses a non-reentrant model
   750 ;;
   751                           
   752                           	psect	text2
   753  001938                     __ptext2:
   754                           	opt stack 0
   755  001938                     _lcd_select:
   756                           	opt stack 23
   757                           
   758                           ;lcd.c: 7: lcd_selected = lcd_ptr;
   759                           
   760                           ;incstack = 0
   761  001938  C017  F04E         	movff	lcd_select@lcd_ptr+1,_lcd_selected+1
   762  00193C  C016  F04D         	movff	lcd_select@lcd_ptr,_lcd_selected
   763                           
   764                           ;lcd.c: 8: lcd_init();
   765  001940  EC16  F009         	call	_lcd_init	;wreg free
   766  001944  0012               	return	
   767  001946                     __end_of_lcd_select:
   768                           	opt stack 0
   769                           tosu	equ	0xFFF
   770                           tosh	equ	0xFFE
   771                           tosl	equ	0xFFD
   772                           pclath	equ	0xFFA
   773                           tblptru	equ	0xFF8
   774                           tblptrh	equ	0xFF7
   775                           tblptrl	equ	0xFF6
   776                           tablat	equ	0xFF5
   777                           postinc0	equ	0xFEE
   778                           wreg	equ	0xFE8
   779                           postdec1	equ	0xFE5
   780                           fsr1l	equ	0xFE1
   781                           postinc2	equ	0xFDE
   782                           
   783 ;; *************** function _lcd_init *****************
   784 ;; Defined at:
   785 ;;		line 29 in file "../test/../include/../src/lcd.c"
   786 ;; Parameters:    Size  Location     Type
   787 ;;		None
   788 ;; Auto vars:     Size  Location     Type
   789 ;;		None
   790 ;; Return value:  Size  Location     Type
   791 ;;		None               void
   792 ;; Registers used:
   793 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
   794 ;; Tracked objects:
   795 ;;		On entry : 0/0
   796 ;;		On exit  : 0/0
   797 ;;		Unchanged: 0/0
   798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   799 ;;      Params:         0       0       0       0       0       0       0       0       0
   800 ;;      Locals:         0       0       0       0       0       0       0       0       0
   801 ;;      Temps:          0       0       0       0       0       0       0       0       0
   802 ;;      Totals:         0       0       0       0       0       0       0       0       0
   803 ;;Total ram usage:        0 bytes
   804 ;; Hardware stack levels used:    1
   805 ;; Hardware stack levels required when called:    5
   806 ;; This function calls:
   807 ;;		_digitalWrite
   808 ;;		_lcd_clear
   809 ;;		_lcd_cmd
   810 ;;		_pinMode
   811 ;; This function is called by:
   812 ;;		_lcd_select
   813 ;; This function uses a non-reentrant model
   814 ;;
   815                           
   816                           	psect	text3
   817  00122C                     __ptext3:
   818                           	opt stack 0
   819  00122C                     _lcd_init:
   820                           	opt stack 23
   821                           
   822                           ;lcd.c: 31: pinMode(lcd_selected->pins.rs, 0);
   823                           
   824                           ;incstack = 0
   825  00122C  0E00               	movlw	0
   826  00122E  6E0F               	movwf	pinMode@mode,c
   827  001230  EE20 F00C          	lfsr	2,12
   828  001234  504D               	movf	_lcd_selected,w,c
   829  001236  26D9               	addwf	fsr2l,f,c
   830  001238  504E               	movf	_lcd_selected+1,w,c
   831  00123A  22DA               	addwfc	fsr2h,f,c
   832  00123C  50DF               	movf	indf2,w,c
   833  00123E  EC90  F006         	call	_pinMode
   834                           
   835                           ;lcd.c: 32: pinMode(lcd_selected->pins.en, 0);
   836  001242  0E00               	movlw	0
   837  001244  6E0F               	movwf	pinMode@mode,c
   838  001246  EE20 F00D          	lfsr	2,13
   839  00124A  504D               	movf	_lcd_selected,w,c
   840  00124C  26D9               	addwf	fsr2l,f,c
   841  00124E  504E               	movf	_lcd_selected+1,w,c
   842  001250  22DA               	addwfc	fsr2h,f,c
   843  001252  50DF               	movf	indf2,w,c
   844  001254  EC90  F006         	call	_pinMode
   845                           
   846                           ;lcd.c: 33: digitalWrite(lcd_selected->pins.rs, 0);
   847  001258  0E00               	movlw	0
   848  00125A  6E13               	movwf	digitalWrite@level,c
   849  00125C  EE20 F00C          	lfsr	2,12
   850  001260  504D               	movf	_lcd_selected,w,c
   851  001262  26D9               	addwf	fsr2l,f,c
   852  001264  504E               	movf	_lcd_selected+1,w,c
   853  001266  22DA               	addwfc	fsr2h,f,c
   854  001268  50DF               	movf	indf2,w,c
   855  00126A  EC64  F005         	call	_digitalWrite
   856                           
   857                           ;lcd.c: 34: digitalWrite(lcd_selected->pins.en, 0);
   858  00126E  0E00               	movlw	0
   859  001270  6E13               	movwf	digitalWrite@level,c
   860  001272  EE20 F00D          	lfsr	2,13
   861  001276  504D               	movf	_lcd_selected,w,c
   862  001278  26D9               	addwf	fsr2l,f,c
   863  00127A  504E               	movf	_lcd_selected+1,w,c
   864  00127C  22DA               	addwfc	fsr2h,f,c
   865  00127E  50DF               	movf	indf2,w,c
   866  001280  EC64  F005         	call	_digitalWrite
   867                           
   868                           ;lcd.c: 36: switch (lcd_selected->pins.port)
   869  001284  D00F               	goto	l2434
   870  001286                     l2422:
   871  001286  0E00               	movlw	0
   872  001288  6E92               	movwf	3986,c	;volatile
   873  00128A  D022               	goto	l2436
   874  00128C                     l2424:
   875  00128C  0E00               	movlw	0
   876  00128E  6E93               	movwf	3987,c	;volatile
   877  001290  D01F               	goto	l2436
   878  001292                     l2426:
   879  001292  0E00               	movlw	0
   880  001294  6E94               	movwf	3988,c	;volatile
   881  001296  D01C               	goto	l2436
   882  001298                     l2428:
   883  001298  0E00               	movlw	0
   884  00129A  6E95               	movwf	3989,c	;volatile
   885  00129C  D019               	goto	l2436
   886  00129E                     l2430:
   887  00129E  0E00               	movlw	0
   888  0012A0  6E96               	movwf	3990,c	;volatile
   889  0012A2  D016               	goto	l2436
   890  0012A4                     l2434:
   891  0012A4  EE20 F00E          	lfsr	2,14
   892  0012A8  504D               	movf	_lcd_selected,w,c
   893  0012AA  26D9               	addwf	fsr2l,f,c
   894  0012AC  504E               	movf	_lcd_selected+1,w,c
   895  0012AE  22DA               	addwfc	fsr2h,f,c
   896  0012B0  50DF               	movf	indf2,w,c
   897                           
   898                           ; Switch size 1, requested type "space"
   899                           ; Number of cases is 5, Range of values is 0 to 4
   900                           ; switch strategies available:
   901                           ; Name         Instructions Cycles
   902                           ; simple_byte           16     9 (average)
   903                           ;	Chosen strategy is simple_byte
   904  0012B2  0A00               	xorlw	0	; case 0
   905  0012B4  B4D8               	btfsc	status,2,c
   906  0012B6  D7E7               	goto	l2422
   907  0012B8  0A01               	xorlw	1	; case 1
   908  0012BA  B4D8               	btfsc	status,2,c
   909  0012BC  D7E7               	goto	l2424
   910  0012BE  0A03               	xorlw	3	; case 2
   911  0012C0  B4D8               	btfsc	status,2,c
   912  0012C2  D7E7               	goto	l2426
   913  0012C4  0A01               	xorlw	1	; case 3
   914  0012C6  B4D8               	btfsc	status,2,c
   915  0012C8  D7E7               	goto	l2428
   916  0012CA  0A07               	xorlw	7	; case 4
   917  0012CC  B4D8               	btfsc	status,2,c
   918  0012CE  D7E7               	goto	l2430
   919  0012D0                     l2436:
   920                           
   921                           ;lcd.c: 45: lcd_cmd(0b00111000);
   922  0012D0  0E38               	movlw	56
   923  0012D2  EC19  F00A         	call	_lcd_cmd
   924                           
   925                           ;lcd.c: 46: lcd_cmd(0b00010110);
   926  0012D6  0E16               	movlw	22
   927  0012D8  EC19  F00A         	call	_lcd_cmd
   928                           
   929                           ;lcd.c: 47: lcd_cmd(0b00001100);
   930  0012DC  0E0C               	movlw	12
   931  0012DE  EC19  F00A         	call	_lcd_cmd
   932                           
   933                           ;lcd.c: 48: lcd_clear();
   934  0012E2  EC7E  F00C         	call	_lcd_clear	;wreg free
   935  0012E6  0012               	return	
   936  0012E8                     __end_of_lcd_init:
   937                           	opt stack 0
   938                           tosu	equ	0xFFF
   939                           tosh	equ	0xFFE
   940                           tosl	equ	0xFFD
   941                           pclath	equ	0xFFA
   942                           tblptru	equ	0xFF8
   943                           tblptrh	equ	0xFF7
   944                           tblptrl	equ	0xFF6
   945                           tablat	equ	0xFF5
   946                           postinc0	equ	0xFEE
   947                           wreg	equ	0xFE8
   948                           postdec1	equ	0xFE5
   949                           fsr1l	equ	0xFE1
   950                           indf2	equ	0xFDF
   951                           postinc2	equ	0xFDE
   952                           fsr2h	equ	0xFDA
   953                           fsr2l	equ	0xFD9
   954                           status	equ	0xFD8
   955                           
   956 ;; *************** function _pinMode *****************
   957 ;; Defined at:
   958 ;;		line 13 in file "../test/../include/../src/arduim.c"
   959 ;; Parameters:    Size  Location     Type
   960 ;;  pin             1    wreg     unsigned char 
   961 ;;  mode            1   14[COMRAM] unsigned char 
   962 ;; Auto vars:     Size  Location     Type
   963 ;;  pin             1   15[COMRAM] unsigned char 
   964 ;; Return value:  Size  Location     Type
   965 ;;		None               void
   966 ;; Registers used:
   967 ;;		wreg, status,2, status,0
   968 ;; Tracked objects:
   969 ;;		On entry : 0/0
   970 ;;		On exit  : 0/0
   971 ;;		Unchanged: 0/0
   972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   973 ;;      Params:         1       0       0       0       0       0       0       0       0
   974 ;;      Locals:         1       0       0       0       0       0       0       0       0
   975 ;;      Temps:          0       0       0       0       0       0       0       0       0
   976 ;;      Totals:         2       0       0       0       0       0       0       0       0
   977 ;;Total ram usage:        2 bytes
   978 ;; Hardware stack levels used:    1
   979 ;; Hardware stack levels required when called:    2
   980 ;; This function calls:
   981 ;;		Nothing
   982 ;; This function is called by:
   983 ;;		_lcd_init
   984 ;;		_setup
   985 ;; This function uses a non-reentrant model
   986 ;;
   987                           
   988                           	psect	text4
   989  000D20                     __ptext4:
   990                           	opt stack 0
   991  000D20                     _pinMode:
   992                           	opt stack 27
   993                           
   994                           ;incstack = 0
   995                           ;pinMode@pin stored from wreg
   996  000D20  6E10               	movwf	pinMode@pin,c
   997                           
   998                           ;arduim.c: 15: if ( (mode != 1 && mode != 0) || pin > 31 )
   999  000D22  040F               	decf	pinMode@mode,w,c
  1000  000D24  B4D8               	btfsc	status,2,c
  1001  000D26  D002               	goto	l1858
  1002  000D28  660F               	tstfsz	pinMode@mode,c
  1003  000D2A  D113               	goto	l109
  1004  000D2C                     l1858:
  1005  000D2C  0E1F               	movlw	31
  1006  000D2E  6410               	cpfsgt	pinMode@pin,c
  1007  000D30  D0B5               	goto	l1862
  1008  000D32  D10F               	goto	l109
  1009  000D34                     l111:
  1010  000D34  B00F               	btfsc	pinMode@mode,0,c
  1011  000D36  D002               	bra	u2045
  1012  000D38  9092               	bcf	3986,0,c	;volatile
  1013  000D3A  D001               	bra	u2046
  1014  000D3C                     u2045:
  1015  000D3C  8092               	bsf	3986,0,c	;volatile
  1016  000D3E                     u2046:
  1017  000D3E  D109               	goto	l109
  1018  000D40                     l113:
  1019  000D40  B00F               	btfsc	pinMode@mode,0,c
  1020  000D42  D002               	bra	u2055
  1021  000D44  9292               	bcf	3986,1,c	;volatile
  1022  000D46  D001               	bra	u2056
  1023  000D48                     u2055:
  1024  000D48  8292               	bsf	3986,1,c	;volatile
  1025  000D4A                     u2056:
  1026  000D4A  D103               	goto	l109
  1027  000D4C                     l114:
  1028  000D4C  B00F               	btfsc	pinMode@mode,0,c
  1029  000D4E  D002               	bra	u2065
  1030  000D50  9492               	bcf	3986,2,c	;volatile
  1031  000D52  D001               	bra	u2066
  1032  000D54                     u2065:
  1033  000D54  8492               	bsf	3986,2,c	;volatile
  1034  000D56                     u2066:
  1035  000D56  D0FD               	goto	l109
  1036  000D58                     l115:
  1037  000D58  B00F               	btfsc	pinMode@mode,0,c
  1038  000D5A  D002               	bra	u2075
  1039  000D5C  9692               	bcf	3986,3,c	;volatile
  1040  000D5E  D001               	bra	u2076
  1041  000D60                     u2075:
  1042  000D60  8692               	bsf	3986,3,c	;volatile
  1043  000D62                     u2076:
  1044  000D62  D0F7               	goto	l109
  1045  000D64                     l116:
  1046  000D64  B00F               	btfsc	pinMode@mode,0,c
  1047  000D66  D002               	bra	u2085
  1048  000D68  9892               	bcf	3986,4,c	;volatile
  1049  000D6A  D001               	bra	u2086
  1050  000D6C                     u2085:
  1051  000D6C  8892               	bsf	3986,4,c	;volatile
  1052  000D6E                     u2086:
  1053  000D6E  D0F1               	goto	l109
  1054  000D70                     l117:
  1055  000D70  B00F               	btfsc	pinMode@mode,0,c
  1056  000D72  D002               	bra	u2095
  1057  000D74  9A92               	bcf	3986,5,c	;volatile
  1058  000D76  D001               	bra	u2096
  1059  000D78                     u2095:
  1060  000D78  8A92               	bsf	3986,5,c	;volatile
  1061  000D7A                     u2096:
  1062  000D7A  D0EB               	goto	l109
  1063  000D7C                     l118:
  1064  000D7C  B00F               	btfsc	pinMode@mode,0,c
  1065  000D7E  D002               	bra	u2105
  1066  000D80  9093               	bcf	3987,0,c	;volatile
  1067  000D82  D001               	bra	u2106
  1068  000D84                     u2105:
  1069  000D84  8093               	bsf	3987,0,c	;volatile
  1070  000D86                     u2106:
  1071  000D86  D0E5               	goto	l109
  1072  000D88                     l119:
  1073  000D88  B00F               	btfsc	pinMode@mode,0,c
  1074  000D8A  D002               	bra	u2115
  1075  000D8C  9293               	bcf	3987,1,c	;volatile
  1076  000D8E  D001               	bra	u2116
  1077  000D90                     u2115:
  1078  000D90  8293               	bsf	3987,1,c	;volatile
  1079  000D92                     u2116:
  1080  000D92  D0DF               	goto	l109
  1081  000D94                     l120:
  1082  000D94  B00F               	btfsc	pinMode@mode,0,c
  1083  000D96  D002               	bra	u2125
  1084  000D98  9493               	bcf	3987,2,c	;volatile
  1085  000D9A  D001               	bra	u2126
  1086  000D9C                     u2125:
  1087  000D9C  8493               	bsf	3987,2,c	;volatile
  1088  000D9E                     u2126:
  1089  000D9E  D0D9               	goto	l109
  1090  000DA0                     l121:
  1091  000DA0  B00F               	btfsc	pinMode@mode,0,c
  1092  000DA2  D002               	bra	u2135
  1093  000DA4  9693               	bcf	3987,3,c	;volatile
  1094  000DA6  D001               	bra	u2136
  1095  000DA8                     u2135:
  1096  000DA8  8693               	bsf	3987,3,c	;volatile
  1097  000DAA                     u2136:
  1098  000DAA  D0D3               	goto	l109
  1099  000DAC                     l122:
  1100  000DAC  B00F               	btfsc	pinMode@mode,0,c
  1101  000DAE  D002               	bra	u2145
  1102  000DB0  9893               	bcf	3987,4,c	;volatile
  1103  000DB2  D001               	bra	u2146
  1104  000DB4                     u2145:
  1105  000DB4  8893               	bsf	3987,4,c	;volatile
  1106  000DB6                     u2146:
  1107  000DB6  D0CD               	goto	l109
  1108  000DB8                     l123:
  1109  000DB8  B00F               	btfsc	pinMode@mode,0,c
  1110  000DBA  D002               	bra	u2155
  1111  000DBC  9A93               	bcf	3987,5,c	;volatile
  1112  000DBE  D001               	bra	u2156
  1113  000DC0                     u2155:
  1114  000DC0  8A93               	bsf	3987,5,c	;volatile
  1115  000DC2                     u2156:
  1116  000DC2  D0C7               	goto	l109
  1117  000DC4                     l124:
  1118  000DC4  B00F               	btfsc	pinMode@mode,0,c
  1119  000DC6  D002               	bra	u2165
  1120  000DC8  9C93               	bcf	3987,6,c	;volatile
  1121  000DCA  D001               	bra	u2166
  1122  000DCC                     u2165:
  1123  000DCC  8C93               	bsf	3987,6,c	;volatile
  1124  000DCE                     u2166:
  1125  000DCE  D0C1               	goto	l109
  1126  000DD0                     l125:
  1127  000DD0  B00F               	btfsc	pinMode@mode,0,c
  1128  000DD2  D002               	bra	u2175
  1129  000DD4  9E93               	bcf	3987,7,c	;volatile
  1130  000DD6  D001               	bra	u2176
  1131  000DD8                     u2175:
  1132  000DD8  8E93               	bsf	3987,7,c	;volatile
  1133  000DDA                     u2176:
  1134  000DDA  D0BB               	goto	l109
  1135  000DDC                     l126:
  1136  000DDC  B00F               	btfsc	pinMode@mode,0,c
  1137  000DDE  D002               	bra	u2185
  1138  000DE0  9094               	bcf	3988,0,c	;volatile
  1139  000DE2  D001               	bra	u2186
  1140  000DE4                     u2185:
  1141  000DE4  8094               	bsf	3988,0,c	;volatile
  1142  000DE6                     u2186:
  1143  000DE6  D0B5               	goto	l109
  1144  000DE8                     l127:
  1145  000DE8  B00F               	btfsc	pinMode@mode,0,c
  1146  000DEA  D002               	bra	u2195
  1147  000DEC  9294               	bcf	3988,1,c	;volatile
  1148  000DEE  D001               	bra	u2196
  1149  000DF0                     u2195:
  1150  000DF0  8294               	bsf	3988,1,c	;volatile
  1151  000DF2                     u2196:
  1152  000DF2  D0AF               	goto	l109
  1153  000DF4                     l128:
  1154  000DF4  B00F               	btfsc	pinMode@mode,0,c
  1155  000DF6  D002               	bra	u2205
  1156  000DF8  9494               	bcf	3988,2,c	;volatile
  1157  000DFA  D001               	bra	u2206
  1158  000DFC                     u2205:
  1159  000DFC  8494               	bsf	3988,2,c	;volatile
  1160  000DFE                     u2206:
  1161  000DFE  D0A9               	goto	l109
  1162  000E00                     l129:
  1163  000E00  B00F               	btfsc	pinMode@mode,0,c
  1164  000E02  D002               	bra	u2215
  1165  000E04  9C94               	bcf	3988,6,c	;volatile
  1166  000E06  D001               	bra	u2216
  1167  000E08                     u2215:
  1168  000E08  8C94               	bsf	3988,6,c	;volatile
  1169  000E0A                     u2216:
  1170  000E0A  D0A3               	goto	l109
  1171  000E0C                     l130:
  1172  000E0C  B00F               	btfsc	pinMode@mode,0,c
  1173  000E0E  D002               	bra	u2225
  1174  000E10  9E94               	bcf	3988,7,c	;volatile
  1175  000E12  D001               	bra	u2226
  1176  000E14                     u2225:
  1177  000E14  8E94               	bsf	3988,7,c	;volatile
  1178  000E16                     u2226:
  1179  000E16  D09D               	goto	l109
  1180  000E18                     l131:
  1181  000E18  B00F               	btfsc	pinMode@mode,0,c
  1182  000E1A  D002               	bra	u2235
  1183  000E1C  9095               	bcf	3989,0,c	;volatile
  1184  000E1E  D001               	bra	u2236
  1185  000E20                     u2235:
  1186  000E20  8095               	bsf	3989,0,c	;volatile
  1187  000E22                     u2236:
  1188  000E22  D097               	goto	l109
  1189  000E24                     l132:
  1190  000E24  B00F               	btfsc	pinMode@mode,0,c
  1191  000E26  D002               	bra	u2245
  1192  000E28  9295               	bcf	3989,1,c	;volatile
  1193  000E2A  D001               	bra	u2246
  1194  000E2C                     u2245:
  1195  000E2C  8295               	bsf	3989,1,c	;volatile
  1196  000E2E                     u2246:
  1197  000E2E  D091               	goto	l109
  1198  000E30                     l133:
  1199  000E30  B00F               	btfsc	pinMode@mode,0,c
  1200  000E32  D002               	bra	u2255
  1201  000E34  9495               	bcf	3989,2,c	;volatile
  1202  000E36  D001               	bra	u2256
  1203  000E38                     u2255:
  1204  000E38  8495               	bsf	3989,2,c	;volatile
  1205  000E3A                     u2256:
  1206  000E3A  D08B               	goto	l109
  1207  000E3C                     l134:
  1208  000E3C  B00F               	btfsc	pinMode@mode,0,c
  1209  000E3E  D002               	bra	u2265
  1210  000E40  9695               	bcf	3989,3,c	;volatile
  1211  000E42  D001               	bra	u2266
  1212  000E44                     u2265:
  1213  000E44  8695               	bsf	3989,3,c	;volatile
  1214  000E46                     u2266:
  1215  000E46  D085               	goto	l109
  1216  000E48                     l135:
  1217  000E48  B00F               	btfsc	pinMode@mode,0,c
  1218  000E4A  D002               	bra	u2275
  1219  000E4C  9895               	bcf	3989,4,c	;volatile
  1220  000E4E  D001               	bra	u2276
  1221  000E50                     u2275:
  1222  000E50  8895               	bsf	3989,4,c	;volatile
  1223  000E52                     u2276:
  1224  000E52  D07F               	goto	l109
  1225  000E54                     l136:
  1226  000E54  B00F               	btfsc	pinMode@mode,0,c
  1227  000E56  D002               	bra	u2285
  1228  000E58  9A95               	bcf	3989,5,c	;volatile
  1229  000E5A  D001               	bra	u2286
  1230  000E5C                     u2285:
  1231  000E5C  8A95               	bsf	3989,5,c	;volatile
  1232  000E5E                     u2286:
  1233  000E5E  D079               	goto	l109
  1234  000E60                     l137:
  1235  000E60  B00F               	btfsc	pinMode@mode,0,c
  1236  000E62  D002               	bra	u2295
  1237  000E64  9C95               	bcf	3989,6,c	;volatile
  1238  000E66  D001               	bra	u2296
  1239  000E68                     u2295:
  1240  000E68  8C95               	bsf	3989,6,c	;volatile
  1241  000E6A                     u2296:
  1242  000E6A  D073               	goto	l109
  1243  000E6C                     l138:
  1244  000E6C  B00F               	btfsc	pinMode@mode,0,c
  1245  000E6E  D002               	bra	u2305
  1246  000E70  9E95               	bcf	3989,7,c	;volatile
  1247  000E72  D001               	bra	u2306
  1248  000E74                     u2305:
  1249  000E74  8E95               	bsf	3989,7,c	;volatile
  1250  000E76                     u2306:
  1251  000E76  D06D               	goto	l109
  1252  000E78                     l139:
  1253  000E78  B00F               	btfsc	pinMode@mode,0,c
  1254  000E7A  D002               	bra	u2315
  1255  000E7C  9096               	bcf	3990,0,c	;volatile
  1256  000E7E  D001               	bra	u2316
  1257  000E80                     u2315:
  1258  000E80  8096               	bsf	3990,0,c	;volatile
  1259  000E82                     u2316:
  1260  000E82  D067               	goto	l109
  1261  000E84                     l140:
  1262  000E84  B00F               	btfsc	pinMode@mode,0,c
  1263  000E86  D002               	bra	u2325
  1264  000E88  9296               	bcf	3990,1,c	;volatile
  1265  000E8A  D001               	bra	u2326
  1266  000E8C                     u2325:
  1267  000E8C  8296               	bsf	3990,1,c	;volatile
  1268  000E8E                     u2326:
  1269  000E8E  D061               	goto	l109
  1270  000E90                     l141:
  1271  000E90  B00F               	btfsc	pinMode@mode,0,c
  1272  000E92  D002               	bra	u2335
  1273  000E94  9496               	bcf	3990,2,c	;volatile
  1274  000E96  D001               	bra	u2336
  1275  000E98                     u2335:
  1276  000E98  8496               	bsf	3990,2,c	;volatile
  1277  000E9A                     u2336:
  1278  000E9A  D05B               	goto	l109
  1279  000E9C                     l1862:
  1280  000E9C  5010               	movf	pinMode@pin,w,c
  1281                           
  1282                           ; Switch size 1, requested type "space"
  1283                           ; Number of cases is 30, Range of values is 0 to 31
  1284                           ; switch strategies available:
  1285                           ; Name         Instructions Cycles
  1286                           ; simple_byte           91    46 (average)
  1287                           ;	Chosen strategy is simple_byte
  1288  000E9E  0A00               	xorlw	0	; case 0
  1289  000EA0  B4D8               	btfsc	status,2,c
  1290  000EA2  D748               	goto	l111
  1291  000EA4  0A01               	xorlw	1	; case 1
  1292  000EA6  B4D8               	btfsc	status,2,c
  1293  000EA8  D74B               	goto	l113
  1294  000EAA  0A03               	xorlw	3	; case 2
  1295  000EAC  B4D8               	btfsc	status,2,c
  1296  000EAE  D74E               	goto	l114
  1297  000EB0  0A01               	xorlw	1	; case 3
  1298  000EB2  B4D8               	btfsc	status,2,c
  1299  000EB4  D751               	goto	l115
  1300  000EB6  0A07               	xorlw	7	; case 4
  1301  000EB8  B4D8               	btfsc	status,2,c
  1302  000EBA  D754               	goto	l116
  1303  000EBC  0A01               	xorlw	1	; case 5
  1304  000EBE  B4D8               	btfsc	status,2,c
  1305  000EC0  D757               	goto	l117
  1306  000EC2  0A03               	xorlw	3	; case 6
  1307  000EC4  B4D8               	btfsc	status,2,c
  1308  000EC6  D75A               	goto	l118
  1309  000EC8  0A01               	xorlw	1	; case 7
  1310  000ECA  B4D8               	btfsc	status,2,c
  1311  000ECC  D75D               	goto	l119
  1312  000ECE  0A0F               	xorlw	15	; case 8
  1313  000ED0  B4D8               	btfsc	status,2,c
  1314  000ED2  D760               	goto	l120
  1315  000ED4  0A01               	xorlw	1	; case 9
  1316  000ED6  B4D8               	btfsc	status,2,c
  1317  000ED8  D763               	goto	l121
  1318  000EDA  0A03               	xorlw	3	; case 10
  1319  000EDC  B4D8               	btfsc	status,2,c
  1320  000EDE  D766               	goto	l122
  1321  000EE0  0A01               	xorlw	1	; case 11
  1322  000EE2  B4D8               	btfsc	status,2,c
  1323  000EE4  D769               	goto	l123
  1324  000EE6  0A07               	xorlw	7	; case 12
  1325  000EE8  B4D8               	btfsc	status,2,c
  1326  000EEA  D76C               	goto	l124
  1327  000EEC  0A01               	xorlw	1	; case 13
  1328  000EEE  B4D8               	btfsc	status,2,c
  1329  000EF0  D76F               	goto	l125
  1330  000EF2  0A03               	xorlw	3	; case 14
  1331  000EF4  B4D8               	btfsc	status,2,c
  1332  000EF6  D772               	goto	l126
  1333  000EF8  0A01               	xorlw	1	; case 15
  1334  000EFA  B4D8               	btfsc	status,2,c
  1335  000EFC  D775               	goto	l127
  1336  000EFE  0A1F               	xorlw	31	; case 16
  1337  000F00  B4D8               	btfsc	status,2,c
  1338  000F02  D778               	goto	l128
  1339  000F04  0A03               	xorlw	3	; case 19
  1340  000F06  B4D8               	btfsc	status,2,c
  1341  000F08  D77B               	goto	l129
  1342  000F0A  0A07               	xorlw	7	; case 20
  1343  000F0C  B4D8               	btfsc	status,2,c
  1344  000F0E  D77E               	goto	l130
  1345  000F10  0A01               	xorlw	1	; case 21
  1346  000F12  B4D8               	btfsc	status,2,c
  1347  000F14  D781               	goto	l131
  1348  000F16  0A03               	xorlw	3	; case 22
  1349  000F18  B4D8               	btfsc	status,2,c
  1350  000F1A  D784               	goto	l132
  1351  000F1C  0A01               	xorlw	1	; case 23
  1352  000F1E  B4D8               	btfsc	status,2,c
  1353  000F20  D787               	goto	l133
  1354  000F22  0A0F               	xorlw	15	; case 24
  1355  000F24  B4D8               	btfsc	status,2,c
  1356  000F26  D78A               	goto	l134
  1357  000F28  0A01               	xorlw	1	; case 25
  1358  000F2A  B4D8               	btfsc	status,2,c
  1359  000F2C  D78D               	goto	l135
  1360  000F2E  0A03               	xorlw	3	; case 26
  1361  000F30  B4D8               	btfsc	status,2,c
  1362  000F32  D790               	goto	l136
  1363  000F34  0A01               	xorlw	1	; case 27
  1364  000F36  B4D8               	btfsc	status,2,c
  1365  000F38  D793               	goto	l137
  1366  000F3A  0A07               	xorlw	7	; case 28
  1367  000F3C  B4D8               	btfsc	status,2,c
  1368  000F3E  D796               	goto	l138
  1369  000F40  0A01               	xorlw	1	; case 29
  1370  000F42  B4D8               	btfsc	status,2,c
  1371  000F44  D799               	goto	l139
  1372  000F46  0A03               	xorlw	3	; case 30
  1373  000F48  B4D8               	btfsc	status,2,c
  1374  000F4A  D79C               	goto	l140
  1375  000F4C  0A01               	xorlw	1	; case 31
  1376  000F4E  B4D8               	btfsc	status,2,c
  1377  000F50  D79F               	goto	l141
  1378  000F52                     l109:
  1379  000F52  0012               	return	
  1380  000F54                     __end_of_pinMode:
  1381                           	opt stack 0
  1382                           tosu	equ	0xFFF
  1383                           tosh	equ	0xFFE
  1384                           tosl	equ	0xFFD
  1385                           pclath	equ	0xFFA
  1386                           tblptru	equ	0xFF8
  1387                           tblptrh	equ	0xFF7
  1388                           tblptrl	equ	0xFF6
  1389                           tablat	equ	0xFF5
  1390                           postinc0	equ	0xFEE
  1391                           wreg	equ	0xFE8
  1392                           postdec1	equ	0xFE5
  1393                           fsr1l	equ	0xFE1
  1394                           indf2	equ	0xFDF
  1395                           postinc2	equ	0xFDE
  1396                           fsr2h	equ	0xFDA
  1397                           fsr2l	equ	0xFD9
  1398                           status	equ	0xFD8
  1399                           
  1400 ;; *************** function _lcd_clear *****************
  1401 ;; Defined at:
  1402 ;;		line 114 in file "../test/../include/../src/lcd.c"
  1403 ;; Parameters:    Size  Location     Type
  1404 ;;		None
  1405 ;; Auto vars:     Size  Location     Type
  1406 ;;		None
  1407 ;; Return value:  Size  Location     Type
  1408 ;;		None               void
  1409 ;; Registers used:
  1410 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1411 ;; Tracked objects:
  1412 ;;		On entry : 0/0
  1413 ;;		On exit  : 0/0
  1414 ;;		Unchanged: 0/0
  1415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1416 ;;      Params:         0       0       0       0       0       0       0       0       0
  1417 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1418 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1419 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1420 ;;Total ram usage:        0 bytes
  1421 ;; Hardware stack levels used:    1
  1422 ;; Hardware stack levels required when called:    4
  1423 ;; This function calls:
  1424 ;;		_delay
  1425 ;;		_lcd_cmd
  1426 ;; This function is called by:
  1427 ;;		_lcd_init
  1428 ;; This function uses a non-reentrant model
  1429 ;;
  1430                           
  1431                           	psect	text5
  1432  0018FC                     __ptext5:
  1433                           	opt stack 0
  1434  0018FC                     _lcd_clear:
  1435                           	opt stack 23
  1436                           
  1437                           ;lcd.c: 116: lcd_cmd(0x01);
  1438                           
  1439                           ;incstack = 0
  1440  0018FC  0E01               	movlw	1
  1441  0018FE  EC19  F00A         	call	_lcd_cmd
  1442                           
  1443                           ;lcd.c: 117: delay(3);
  1444  001902  0E03               	movlw	3
  1445  001904  6E10               	movwf	delay@time,c
  1446  001906  0E00               	movlw	0
  1447  001908  6E11               	movwf	delay@time+1,c
  1448  00190A  0E00               	movlw	0
  1449  00190C  6E12               	movwf	delay@time+2,c
  1450  00190E  0E00               	movlw	0
  1451  001910  6E13               	movwf	delay@time+3,c
  1452  001912  EC6E  F00C         	call	_delay	;wreg free
  1453  001916  0012               	return	
  1454  001918                     __end_of_lcd_clear:
  1455                           	opt stack 0
  1456                           tosu	equ	0xFFF
  1457                           tosh	equ	0xFFE
  1458                           tosl	equ	0xFFD
  1459                           pclath	equ	0xFFA
  1460                           tblptru	equ	0xFF8
  1461                           tblptrh	equ	0xFF7
  1462                           tblptrl	equ	0xFF6
  1463                           tablat	equ	0xFF5
  1464                           postinc0	equ	0xFEE
  1465                           wreg	equ	0xFE8
  1466                           postdec1	equ	0xFE5
  1467                           fsr1l	equ	0xFE1
  1468                           indf2	equ	0xFDF
  1469                           postinc2	equ	0xFDE
  1470                           fsr2h	equ	0xFDA
  1471                           fsr2l	equ	0xFD9
  1472                           status	equ	0xFD8
  1473                           
  1474 ;; *************** function _lcd_get *****************
  1475 ;; Defined at:
  1476 ;;		line 11 in file "../test/../include/../src/lcd.c"
  1477 ;; Parameters:    Size  Location     Type
  1478 ;;  rs              1    wreg     unsigned char 
  1479 ;;  en              1   14[COMRAM] unsigned char 
  1480 ;;  port            1   15[COMRAM] unsigned char 
  1481 ;; Auto vars:     Size  Location     Type
  1482 ;;  rs              1   30[COMRAM] unsigned char 
  1483 ;;  b              15   31[COMRAM] struct .
  1484 ;; Return value:  Size  Location     Type
  1485 ;;                  15   14[COMRAM] struct .
  1486 ;; Registers used:
  1487 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0
  1488 ;; Tracked objects:
  1489 ;;		On entry : 0/0
  1490 ;;		On exit  : 0/0
  1491 ;;		Unchanged: 0/0
  1492 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1493 ;;      Params:        16       0       0       0       0       0       0       0       0
  1494 ;;      Locals:        16       0       0       0       0       0       0       0       0
  1495 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1496 ;;      Totals:        32       0       0       0       0       0       0       0       0
  1497 ;;Total ram usage:       32 bytes
  1498 ;; Hardware stack levels used:    1
  1499 ;; Hardware stack levels required when called:    2
  1500 ;; This function calls:
  1501 ;;		Nothing
  1502 ;; This function is called by:
  1503 ;;		_setup
  1504 ;; This function uses a non-reentrant model
  1505 ;;
  1506                           
  1507                           	psect	text6
  1508  00181C                     __ptext6:
  1509                           	opt stack 0
  1510  00181C                     _lcd_get:
  1511                           	opt stack 27
  1512                           
  1513                           ;incstack = 0
  1514                           ;lcd_get@rs stored from wreg
  1515  00181C  6E1F               	movwf	lcd_get@rs,c
  1516                           
  1517                           ;lcd.c: 13: lcd_t b = {
  1518                           ;lcd.c: 14: lcd_print,
  1519                           ;lcd.c: 15: lcd_printl,
  1520                           ;lcd.c: 16: lcd_printi,
  1521                           ;lcd.c: 17: lcd_printc,
  1522                           ;lcd.c: 19: lcd_clear,
  1523                           ;lcd.c: 20: lcd_set_cursor
  1524                           ;lcd.c: 21: };
  1525  00181E  EE20  F0B1         	lfsr	2,lcd_get@F5483
  1526  001822  EE10  F020         	lfsr	1,lcd_get@b
  1527  001826  0E0F               	movlw	15
  1528  001828                     u2971:
  1529  001828  CFDE FFE6          	movff	postinc2,postinc1
  1530  00182C  2EE8               	decfsz	wreg,f,c
  1531  00182E  D7FC               	goto	u2971
  1532                           
  1533                           ;lcd.c: 23: b.pins.rs = rs;
  1534  001830  C01F  F02C         	movff	lcd_get@rs,lcd_get@b+12
  1535                           
  1536                           ;lcd.c: 24: b.pins.en = en;
  1537  001834  C00F  F02D         	movff	lcd_get@en,lcd_get@b+13
  1538                           
  1539                           ;lcd.c: 25: b.pins.port = port;
  1540  001838  C010  F02E         	movff	lcd_get@port,lcd_get@b+14
  1541                           
  1542                           ;lcd.c: 26: return b;
  1543  00183C  EE20  F02E         	lfsr	2,lcd_get@b+14
  1544  001840  EE00  F01D         	lfsr	0,?_lcd_get+14
  1545  001844  0E0F               	movlw	15
  1546  001846                     u2981:
  1547  001846  CFDD FFED          	movff	postdec2,postdec0
  1548  00184A  2EE8               	decfsz	wreg,f,c
  1549  00184C  D7FC               	goto	u2981
  1550  00184E  2AE9               	incf	fsr0l,f,c
  1551  001850  22EA               	addwfc	fsr0h,f,c
  1552  001852  0012               	return	
  1553  001854                     __end_of_lcd_get:
  1554                           	opt stack 0
  1555                           tosu	equ	0xFFF
  1556                           tosh	equ	0xFFE
  1557                           tosl	equ	0xFFD
  1558                           pclath	equ	0xFFA
  1559                           tblptru	equ	0xFF8
  1560                           tblptrh	equ	0xFF7
  1561                           tblptrl	equ	0xFF6
  1562                           tablat	equ	0xFF5
  1563                           postinc0	equ	0xFEE
  1564                           postdec0	equ	0xFED
  1565                           fsr0h	equ	0xFEA
  1566                           fsr0l	equ	0xFE9
  1567                           wreg	equ	0xFE8
  1568                           postinc1	equ	0xFE6
  1569                           postdec1	equ	0xFE5
  1570                           fsr1l	equ	0xFE1
  1571                           indf2	equ	0xFDF
  1572                           postinc2	equ	0xFDE
  1573                           postdec2	equ	0xFDD
  1574                           fsr2h	equ	0xFDA
  1575                           fsr2l	equ	0xFD9
  1576                           status	equ	0xFD8
  1577                           
  1578 ;; *************** function _attachInterrupt *****************
  1579 ;; Defined at:
  1580 ;;		line 255 in file "../test/../include/../src/arduim.c"
  1581 ;; Parameters:    Size  Location     Type
  1582 ;;  pin             1    wreg     unsigned char 
  1583 ;;  callback        2   15[COMRAM] PTR FTN()void 
  1584 ;;		 -> counter(0), 
  1585 ;;  mode            2   17[COMRAM] int 
  1586 ;; Auto vars:     Size  Location     Type
  1587 ;;  pin             1   19[COMRAM] unsigned char 
  1588 ;; Return value:  Size  Location     Type
  1589 ;;		None               void
  1590 ;; Registers used:
  1591 ;;		wreg, status,2, status,0, cstack
  1592 ;; Tracked objects:
  1593 ;;		On entry : 0/0
  1594 ;;		On exit  : 0/0
  1595 ;;		Unchanged: 0/0
  1596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1597 ;;      Params:         4       0       0       0       0       0       0       0       0
  1598 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1599 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1600 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1601 ;;Total ram usage:        5 bytes
  1602 ;; Hardware stack levels used:    1
  1603 ;; Hardware stack levels required when called:    3
  1604 ;; This function calls:
  1605 ;;		_OpenRB0INT
  1606 ;;		_OpenRB1INT
  1607 ;; This function is called by:
  1608 ;;		_setup
  1609 ;; This function uses a non-reentrant model
  1610 ;;
  1611                           
  1612                           	psect	text7
  1613  0015F0                     __ptext7:
  1614                           	opt stack 0
  1615  0015F0                     _attachInterrupt:
  1616                           	opt stack 26
  1617                           
  1618                           ;incstack = 0
  1619                           ;attachInterrupt@pin stored from wreg
  1620  0015F0  6E14               	movwf	attachInterrupt@pin,c
  1621                           
  1622                           ;arduim.c: 257: if (mode != 2 && mode != 3)
  1623  0015F2  5012               	movf	attachInterrupt@mode,w,c
  1624  0015F4  0A02               	xorlw	2
  1625  0015F6  1013               	iorwf	attachInterrupt@mode+1,w,c
  1626  0015F8  B4D8               	btfsc	status,2,c
  1627  0015FA  D005               	goto	l2192
  1628  0015FC  5012               	movf	attachInterrupt@mode,w,c
  1629  0015FE  0A03               	xorlw	3
  1630  001600  1013               	iorwf	attachInterrupt@mode+1,w,c
  1631  001602  A4D8               	btfss	status,2,c
  1632  001604  D028               	goto	l292
  1633  001606                     l2192:
  1634                           
  1635                           ;arduim.c: 260: mode = mode == 2 ? 0b11111101 : 0b11111111;
  1636  001606  5012               	movf	attachInterrupt@mode,w,c
  1637  001608  0A02               	xorlw	2
  1638  00160A  1013               	iorwf	attachInterrupt@mode+1,w,c
  1639  00160C  B4D8               	btfsc	status,2,c
  1640  00160E  D004               	goto	l2196
  1641  001610  0E00               	movlw	0
  1642  001612  6E13               	movwf	attachInterrupt@mode+1,c
  1643  001614  6812               	setf	attachInterrupt@mode,c
  1644  001616  D017               	goto	l2208
  1645  001618                     l2196:
  1646  001618  0E00               	movlw	0
  1647  00161A  6E13               	movwf	attachInterrupt@mode+1,c
  1648  00161C  0EFD               	movlw	253
  1649  00161E  6E12               	movwf	attachInterrupt@mode,c
  1650  001620  D012               	goto	l2208
  1651  001622                     l2198:
  1652                           
  1653                           ;arduim.c: 265: interrupt_list[0] = callback;
  1654  001622  C011  F048         	movff	attachInterrupt@callback+1,_interrupt_list+1
  1655  001626  C010  F047         	movff	attachInterrupt@callback,_interrupt_list
  1656                           
  1657                           ;arduim.c: 266: OpenRB0INT(0b11111111 & mode & 0b11111110);
  1658  00162A  5012               	movf	attachInterrupt@mode,w,c
  1659  00162C  0BFE               	andlw	254
  1660  00162E  EC2A  F00C         	call	_OpenRB0INT
  1661                           
  1662                           ;arduim.c: 267: break;
  1663  001632  D010               	goto	l299
  1664  001634                     l2202:
  1665                           
  1666                           ;arduim.c: 269: interrupt_list[1] = callback;
  1667  001634  C011  F04A         	movff	attachInterrupt@callback+1,_interrupt_list+3
  1668  001638  C010  F049         	movff	attachInterrupt@callback,_interrupt_list+2
  1669                           
  1670                           ;arduim.c: 270: OpenRB1INT(0b11111111 & mode & 0b11111110);
  1671  00163C  5012               	movf	attachInterrupt@mode,w,c
  1672  00163E  0BFE               	andlw	254
  1673  001640  ECD4  F00B         	call	_OpenRB1INT
  1674                           
  1675                           ;arduim.c: 271: break;
  1676  001644  D007               	goto	l299
  1677  001646                     l2208:
  1678  001646  5014               	movf	attachInterrupt@pin,w,c
  1679                           
  1680                           ; Switch size 1, requested type "space"
  1681                           ; Number of cases is 2, Range of values is 6 to 7
  1682                           ; switch strategies available:
  1683                           ; Name         Instructions Cycles
  1684                           ; simple_byte            7     4 (average)
  1685                           ;	Chosen strategy is simple_byte
  1686  001648  0A06               	xorlw	6	; case 6
  1687  00164A  B4D8               	btfsc	status,2,c
  1688  00164C  D7EA               	goto	l2198
  1689  00164E  0A01               	xorlw	1	; case 7
  1690  001650  B4D8               	btfsc	status,2,c
  1691  001652  D7F0               	goto	l2202
  1692  001654                     l299:
  1693                           
  1694                           ;arduim.c: 274: INTCONbits.GIE = 1;
  1695  001654  8EF2               	bsf	intcon,7,c	;volatile
  1696  001656                     l292:
  1697  001656  0012               	return	
  1698  001658                     __end_of_attachInterrupt:
  1699                           	opt stack 0
  1700                           tosu	equ	0xFFF
  1701                           tosh	equ	0xFFE
  1702                           tosl	equ	0xFFD
  1703                           pclath	equ	0xFFA
  1704                           tblptru	equ	0xFF8
  1705                           tblptrh	equ	0xFF7
  1706                           tblptrl	equ	0xFF6
  1707                           tablat	equ	0xFF5
  1708                           intcon	equ	0xFF2
  1709                           postinc0	equ	0xFEE
  1710                           postdec0	equ	0xFED
  1711                           fsr0h	equ	0xFEA
  1712                           fsr0l	equ	0xFE9
  1713                           wreg	equ	0xFE8
  1714                           postinc1	equ	0xFE6
  1715                           postdec1	equ	0xFE5
  1716                           fsr1l	equ	0xFE1
  1717                           indf2	equ	0xFDF
  1718                           postinc2	equ	0xFDE
  1719                           postdec2	equ	0xFDD
  1720                           fsr2h	equ	0xFDA
  1721                           fsr2l	equ	0xFD9
  1722                           status	equ	0xFD8
  1723                           
  1724 ;; *************** function _OpenRB1INT *****************
  1725 ;; Defined at:
  1726 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\PORTB\rb1open.c"
  1727 ;; Parameters:    Size  Location     Type
  1728 ;;  config          1    wreg     unsigned char 
  1729 ;; Auto vars:     Size  Location     Type
  1730 ;;  config          1   14[COMRAM] unsigned char 
  1731 ;; Return value:  Size  Location     Type
  1732 ;;		None               void
  1733 ;; Registers used:
  1734 ;;		wreg
  1735 ;; Tracked objects:
  1736 ;;		On entry : 0/0
  1737 ;;		On exit  : 0/0
  1738 ;;		Unchanged: 0/0
  1739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1740 ;;      Params:         0       0       0       0       0       0       0       0       0
  1741 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1742 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1743 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1744 ;;Total ram usage:        1 bytes
  1745 ;; Hardware stack levels used:    1
  1746 ;; Hardware stack levels required when called:    2
  1747 ;; This function calls:
  1748 ;;		Nothing
  1749 ;; This function is called by:
  1750 ;;		_attachInterrupt
  1751 ;;		_detachInterrupt
  1752 ;; This function uses a non-reentrant model
  1753 ;;
  1754                           
  1755                           	psect	text8
  1756  0017A8                     __ptext8:
  1757                           	opt stack 0
  1758  0017A8                     _OpenRB1INT:
  1759                           	opt stack 26
  1760                           
  1761                           ;incstack = 0
  1762                           ;OpenRB1INT@config stored from wreg
  1763  0017A8  6E0F               	movwf	OpenRB1INT@config,c
  1764  0017AA  90F0               	bcf	intcon3,0,c	;volatile
  1765  0017AC  A20F               	btfss	OpenRB1INT@config,1,c
  1766  0017AE  D002               	goto	l502
  1767  0017B0  8AF1               	bsf	intcon2,5,c	;volatile
  1768  0017B2  D001               	goto	l1942
  1769  0017B4                     l502:
  1770  0017B4  9AF1               	bcf	intcon2,5,c	;volatile
  1771  0017B6                     l1942:
  1772  0017B6  A00F               	btfss	OpenRB1INT@config,0,c
  1773  0017B8  D002               	goto	l504
  1774  0017BA  8EF1               	bsf	intcon2,7,c	;volatile
  1775  0017BC  D001               	goto	l1946
  1776  0017BE                     l504:
  1777  0017BE  9EF1               	bcf	intcon2,7,c	;volatile
  1778  0017C0                     l1946:
  1779  0017C0  AC0F               	btfss	OpenRB1INT@config,6,c
  1780  0017C2  D002               	goto	l506
  1781  0017C4  80F1               	bsf	intcon2,0,c	;volatile
  1782  0017C6  D001               	goto	l1950
  1783  0017C8                     l506:
  1784  0017C8  90F1               	bcf	intcon2,0,c	;volatile
  1785  0017CA                     l1950:
  1786  0017CA  AC0F               	btfss	OpenRB1INT@config,6,c
  1787  0017CC  D002               	goto	l508
  1788  0017CE  8CF0               	bsf	intcon3,6,c	;volatile
  1789  0017D0  D001               	goto	l509
  1790  0017D2                     l508:
  1791  0017D2  9CF0               	bcf	intcon3,6,c	;volatile
  1792  0017D4                     l509:
  1793  0017D4  8293               	bsf	3987,1,c	;volatile
  1794  0017D6  AE0F               	btfss	OpenRB1INT@config,7,c
  1795  0017D8  D002               	goto	l510
  1796  0017DA  86F0               	bsf	intcon3,3,c	;volatile
  1797  0017DC  D001               	goto	l512
  1798  0017DE                     l510:
  1799  0017DE  96F0               	bcf	intcon3,3,c	;volatile
  1800  0017E0                     l512:
  1801  0017E0  0012               	return	
  1802  0017E2                     __end_of_OpenRB1INT:
  1803                           	opt stack 0
  1804                           tosu	equ	0xFFF
  1805                           tosh	equ	0xFFE
  1806                           tosl	equ	0xFFD
  1807                           pclath	equ	0xFFA
  1808                           tblptru	equ	0xFF8
  1809                           tblptrh	equ	0xFF7
  1810                           tblptrl	equ	0xFF6
  1811                           tablat	equ	0xFF5
  1812                           intcon	equ	0xFF2
  1813                           intcon2	equ	0xFF1
  1814                           intcon3	equ	0xFF0
  1815                           postinc0	equ	0xFEE
  1816                           postdec0	equ	0xFED
  1817                           fsr0h	equ	0xFEA
  1818                           fsr0l	equ	0xFE9
  1819                           wreg	equ	0xFE8
  1820                           postinc1	equ	0xFE6
  1821                           postdec1	equ	0xFE5
  1822                           fsr1l	equ	0xFE1
  1823                           indf2	equ	0xFDF
  1824                           postinc2	equ	0xFDE
  1825                           postdec2	equ	0xFDD
  1826                           fsr2h	equ	0xFDA
  1827                           fsr2l	equ	0xFD9
  1828                           status	equ	0xFD8
  1829                           
  1830 ;; *************** function _OpenRB0INT *****************
  1831 ;; Defined at:
  1832 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\plib\PORTB\rb0open.c"
  1833 ;; Parameters:    Size  Location     Type
  1834 ;;  config          1    wreg     unsigned char 
  1835 ;; Auto vars:     Size  Location     Type
  1836 ;;  config          1   14[COMRAM] unsigned char 
  1837 ;; Return value:  Size  Location     Type
  1838 ;;		None               void
  1839 ;; Registers used:
  1840 ;;		wreg
  1841 ;; Tracked objects:
  1842 ;;		On entry : 0/0
  1843 ;;		On exit  : 0/0
  1844 ;;		Unchanged: 0/0
  1845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1846 ;;      Params:         0       0       0       0       0       0       0       0       0
  1847 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1848 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1849 ;;      Totals:         1       0       0       0       0       0       0       0       0
  1850 ;;Total ram usage:        1 bytes
  1851 ;; Hardware stack levels used:    1
  1852 ;; Hardware stack levels required when called:    2
  1853 ;; This function calls:
  1854 ;;		Nothing
  1855 ;; This function is called by:
  1856 ;;		_attachInterrupt
  1857 ;;		_detachInterrupt
  1858 ;; This function uses a non-reentrant model
  1859 ;;
  1860                           
  1861                           	psect	text9
  1862  001854                     __ptext9:
  1863                           	opt stack 0
  1864  001854                     _OpenRB0INT:
  1865                           	opt stack 26
  1866                           
  1867                           ;incstack = 0
  1868                           ;OpenRB0INT@config stored from wreg
  1869  001854  6E0F               	movwf	OpenRB0INT@config,c
  1870  001856  92F2               	bcf	intcon,1,c	;volatile
  1871  001858  A20F               	btfss	OpenRB0INT@config,1,c
  1872  00185A  D002               	goto	l485
  1873  00185C  8CF1               	bsf	intcon2,6,c	;volatile
  1874  00185E  D001               	goto	l1924
  1875  001860                     l485:
  1876  001860  9CF1               	bcf	intcon2,6,c	;volatile
  1877  001862                     l1924:
  1878  001862  A00F               	btfss	OpenRB0INT@config,0,c
  1879  001864  D002               	goto	l487
  1880  001866  8EF1               	bsf	intcon2,7,c	;volatile
  1881  001868  D001               	goto	l488
  1882  00186A                     l487:
  1883  00186A  9EF1               	bcf	intcon2,7,c	;volatile
  1884  00186C                     l488:
  1885  00186C  8093               	bsf	3987,0,c	;volatile
  1886  00186E  AC0F               	btfss	OpenRB0INT@config,6,c
  1887  001870  D002               	goto	l489
  1888  001872  80F1               	bsf	intcon2,0,c	;volatile
  1889  001874  D001               	goto	l1932
  1890  001876                     l489:
  1891  001876  90F1               	bcf	intcon2,0,c	;volatile
  1892  001878                     l1932:
  1893  001878  AE0F               	btfss	OpenRB0INT@config,7,c
  1894  00187A  D002               	goto	l491
  1895  00187C  88F2               	bsf	intcon,4,c	;volatile
  1896  00187E  D001               	goto	l493
  1897  001880                     l491:
  1898  001880  98F2               	bcf	intcon,4,c	;volatile
  1899  001882                     l493:
  1900  001882  0012               	return	
  1901  001884                     __end_of_OpenRB0INT:
  1902                           	opt stack 0
  1903                           tosu	equ	0xFFF
  1904                           tosh	equ	0xFFE
  1905                           tosl	equ	0xFFD
  1906                           pclath	equ	0xFFA
  1907                           tblptru	equ	0xFF8
  1908                           tblptrh	equ	0xFF7
  1909                           tblptrl	equ	0xFF6
  1910                           tablat	equ	0xFF5
  1911                           intcon	equ	0xFF2
  1912                           intcon2	equ	0xFF1
  1913                           intcon3	equ	0xFF0
  1914                           postinc0	equ	0xFEE
  1915                           postdec0	equ	0xFED
  1916                           fsr0h	equ	0xFEA
  1917                           fsr0l	equ	0xFE9
  1918                           wreg	equ	0xFE8
  1919                           postinc1	equ	0xFE6
  1920                           postdec1	equ	0xFE5
  1921                           fsr1l	equ	0xFE1
  1922                           indf2	equ	0xFDF
  1923                           postinc2	equ	0xFDE
  1924                           postdec2	equ	0xFDD
  1925                           fsr2h	equ	0xFDA
  1926                           fsr2l	equ	0xFD9
  1927                           status	equ	0xFD8
  1928                           
  1929 ;; *************** function _loop *****************
  1930 ;; Defined at:
  1931 ;;		line 28 in file "../test/test_tachometer.c"
  1932 ;; Parameters:    Size  Location     Type
  1933 ;;		None
  1934 ;; Auto vars:     Size  Location     Type
  1935 ;;  rpm             4   11[BANK0 ] long 
  1936 ;; Return value:  Size  Location     Type
  1937 ;;		None               void
  1938 ;; Registers used:
  1939 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclat, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1940 ;; Tracked objects:
  1941 ;;		On entry : 0/0
  1942 ;;		On exit  : 0/0
  1943 ;;		Unchanged: 0/0
  1944 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1945 ;;      Params:         0       0       0       0       0       0       0       0       0
  1946 ;;      Locals:         0       4       0       0       0       0       0       0       0
  1947 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1948 ;;      Totals:         0       4       0       0       0       0       0       0       0
  1949 ;;Total ram usage:        4 bytes
  1950 ;; Hardware stack levels used:    1
  1951 ;; Hardware stack levels required when called:    6
  1952 ;; This function calls:
  1953 ;;		___lldiv
  1954 ;;		___lmul
  1955 ;;		_delay
  1956 ;;		_digitalRead
  1957 ;;		_digitalWrite
  1958 ;;		_lcd_print
  1959 ;;		_lcd_printl
  1960 ;;		_lcd_set_cursor
  1961 ;; This function is called by:
  1962 ;;		_main
  1963 ;; This function uses a non-reentrant model
  1964 ;;
  1965                           
  1966                           	psect	text10
  1967  0010F6                     __ptext10:
  1968                           	opt stack 0
  1969  0010F6                     _loop:
  1970                           	opt stack 24
  1971                           
  1972                           ;test_tachometer.c: 30: delay(1000);
  1973                           
  1974                           ;incstack = 0
  1975  0010F6  0EE8               	movlw	232
  1976  0010F8  6E10               	movwf	delay@time,c
  1977  0010FA  0E03               	movlw	3
  1978  0010FC  6E11               	movwf	delay@time+1,c
  1979  0010FE  0E00               	movlw	0
  1980  001100  6E12               	movwf	delay@time+2,c
  1981  001102  0E00               	movlw	0
  1982  001104  6E13               	movwf	delay@time+3,c
  1983  001106  EC6E  F00C         	call	_delay	;wreg free
  1984                           
  1985                           ;test_tachometer.c: 31: long rpm = count * 60 / 58;
  1986  00110A  C043  F00F         	movff	_count,___lmul@multiplier
  1987  00110E  C044  F010         	movff	_count+1,___lmul@multiplier+1
  1988  001112  C045  F011         	movff	_count+2,___lmul@multiplier+2
  1989  001116  C046  F012         	movff	_count+3,___lmul@multiplier+3
  1990  00111A  0E3C               	movlw	60
  1991  00111C  6E13               	movwf	___lmul@multiplicand,c
  1992  00111E  0E00               	movlw	0
  1993  001120  6E14               	movwf	___lmul@multiplicand+1,c
  1994  001122  0E00               	movlw	0
  1995  001124  6E15               	movwf	___lmul@multiplicand+2,c
  1996  001126  0E00               	movlw	0
  1997  001128  6E16               	movwf	___lmul@multiplicand+3,c
  1998  00112A  EC5F  F00B         	call	___lmul	;wreg free
  1999  00112E  C00F  F01B         	movff	?___lmul,___lldiv@dividend
  2000  001132  C010  F01C         	movff	?___lmul+1,___lldiv@dividend+1
  2001  001136  C011  F01D         	movff	?___lmul+2,___lldiv@dividend+2
  2002  00113A  C012  F01E         	movff	?___lmul+3,___lldiv@dividend+3
  2003  00113E  0E3A               	movlw	58
  2004  001140  6E1F               	movwf	___lldiv@divisor,c
  2005  001142  0E00               	movlw	0
  2006  001144  6E20               	movwf	___lldiv@divisor+1,c
  2007  001146  0E00               	movlw	0
  2008  001148  6E21               	movwf	___lldiv@divisor+2,c
  2009  00114A  0E00               	movlw	0
  2010  00114C  6E22               	movwf	___lldiv@divisor+3,c
  2011  00114E  ECB7  F00A         	call	___lldiv	;wreg free
  2012  001152  C01B  F0CB         	movff	?___lldiv,loop@rpm
  2013  001156  C01C  F0CC         	movff	?___lldiv+1,loop@rpm+1
  2014  00115A  C01D  F0CD         	movff	?___lldiv+2,loop@rpm+2
  2015  00115E  C01E  F0CE         	movff	?___lldiv+3,loop@rpm+3
  2016                           
  2017                           ;test_tachometer.c: 32: count = 0;
  2018  001162  0E00               	movlw	0
  2019  001164  6E43               	movwf	_count,c
  2020  001166  0E00               	movlw	0
  2021  001168  6E44               	movwf	_count+1,c
  2022  00116A  0E00               	movlw	0
  2023  00116C  6E45               	movwf	_count+2,c
  2024  00116E  0E00               	movlw	0
  2025  001170  6E46               	movwf	_count+3,c
  2026                           
  2027                           ;test_tachometer.c: 34: lcd.setCursor(6, 1);
  2028  001172  0100               	movlb	0	; () banked
  2029  001174  EE20  F0AC         	lfsr	2,_lcd+10
  2030  001178  D801               	call	u4108
  2031  00117A  D00D               	goto	u4109
  2032  00117C                     u4108:
  2033  00117C  0005               	push	
  2034  00117E  6EFA               	movwf	pclath,c
  2035  001180  50DE               	movf	postinc2,w,c
  2036  001182  6EFD               	movwf	tosl,c
  2037  001184  50DE               	movf	postinc2,w,c
  2038  001186  6EFE               	movwf	tosh,c
  2039  001188  50F8               	movf	tblptru,w,c
  2040  00118A  6EFF               	movwf	tosu,c
  2041  00118C  50FA               	movf	pclath,w,c
  2042  00118E  0E01               	movlw	1
  2043  001190  6E16               	movwf	lcd_set_cursor@line,c
  2044  001192  0E06               	movlw	6
  2045  001194  0012               	return		;indir
  2046  001196                     u4109:
  2047                           
  2048                           ;test_tachometer.c: 35: lcd.prints("    ");
  2049  001196  0E08               	movlw	high STR_4
  2050  001198  6E17               	movwf	lcd_print@s+1,c
  2051  00119A  0E56               	movlw	low STR_4
  2052  00119C  6E16               	movwf	lcd_print@s,c
  2053  00119E  D801               	call	u4118
  2054  0011A0  D00D               	goto	u4119
  2055  0011A2                     u4118:
  2056  0011A2  0005               	push	
  2057  0011A4  0100               	movlb	0	; () banked
  2058  0011A6  6EFA               	movwf	pclath,c
  2059  0011A8  0100               	movlb	0	; () banked
  2060  0011AA  51A2               	movf	_lcd& (0+255),w,b
  2061  0011AC  6EFD               	movwf	tosl,c
  2062  0011AE  0100               	movlb	0	; () banked
  2063  0011B0  51A3               	movf	(_lcd+1)& (0+255),w,b
  2064  0011B2  6EFE               	movwf	tosh,c
  2065  0011B4  50F8               	movf	tblptru,w,c
  2066  0011B6  6EFF               	movwf	tosu,c
  2067  0011B8  50FA               	movf	pclath,w,c
  2068  0011BA  0012               	return		;indir
  2069  0011BC                     u4119:
  2070                           
  2071                           ;test_tachometer.c: 36: lcd.setCursor(6, 1);
  2072  0011BC  0100               	movlb	0	; () banked
  2073  0011BE  EE20  F0AC         	lfsr	2,_lcd+10
  2074  0011C2  D801               	call	u4128
  2075  0011C4  D00D               	goto	u4129
  2076  0011C6                     u4128:
  2077  0011C6  0005               	push	
  2078  0011C8  6EFA               	movwf	pclath,c
  2079  0011CA  50DE               	movf	postinc2,w,c
  2080  0011CC  6EFD               	movwf	tosl,c
  2081  0011CE  50DE               	movf	postinc2,w,c
  2082  0011D0  6EFE               	movwf	tosh,c
  2083  0011D2  50F8               	movf	tblptru,w,c
  2084  0011D4  6EFF               	movwf	tosu,c
  2085  0011D6  50FA               	movf	pclath,w,c
  2086  0011D8  0E01               	movlw	1
  2087  0011DA  6E16               	movwf	lcd_set_cursor@line,c
  2088  0011DC  0E06               	movlw	6
  2089  0011DE  0012               	return		;indir
  2090  0011E0                     u4129:
  2091                           
  2092                           ;test_tachometer.c: 38: lcd.printl(rpm);
  2093  0011E0  C0CB  F03F         	movff	loop@rpm,lcd_printl@l
  2094  0011E4  C0CC  F040         	movff	loop@rpm+1,lcd_printl@l+1
  2095  0011E8  C0CD  F041         	movff	loop@rpm+2,lcd_printl@l+2
  2096  0011EC  C0CE  F042         	movff	loop@rpm+3,lcd_printl@l+3
  2097  0011F0  0100               	movlb	0	; () banked
  2098  0011F2  EE20  F0A4         	lfsr	2,_lcd+2
  2099  0011F6  D801               	call	u4138
  2100  0011F8  D00A               	goto	u4139
  2101  0011FA                     u4138:
  2102  0011FA  0005               	push	
  2103  0011FC  6EFA               	movwf	pclath,c
  2104  0011FE  50DE               	movf	postinc2,w,c
  2105  001200  6EFD               	movwf	tosl,c
  2106  001202  50DE               	movf	postinc2,w,c
  2107  001204  6EFE               	movwf	tosh,c
  2108  001206  50F8               	movf	tblptru,w,c
  2109  001208  6EFF               	movwf	tosu,c
  2110  00120A  50FA               	movf	pclath,w,c
  2111  00120C  0012               	return		;indir
  2112  00120E                     u4139:
  2113                           
  2114                           ;test_tachometer.c: 40: digitalWrite(14, !digitalRead(14));
  2115  00120E  0E0E               	movlw	14
  2116  001210  ECAA  F007         	call	_digitalRead
  2117  001214  5010               	movf	?_digitalRead+1,w,c
  2118  001216  100F               	iorwf	?_digitalRead,w,c
  2119  001218  A4D8               	btfss	status,2,c
  2120  00121A  D002               	goto	u4140
  2121  00121C  0E01               	movlw	1
  2122  00121E  D001               	goto	u4146
  2123  001220                     u4140:
  2124  001220  0E00               	movlw	0
  2125  001222                     u4146:
  2126  001222  6E13               	movwf	digitalWrite@level,c
  2127  001224  0E0E               	movlw	14
  2128  001226  EC64  F005         	call	_digitalWrite
  2129  00122A  0012               	return	
  2130  00122C                     __end_of_loop:
  2131                           	opt stack 0
  2132                           tosu	equ	0xFFF
  2133                           tosh	equ	0xFFE
  2134                           tosl	equ	0xFFD
  2135                           pclath	equ	0xFFA
  2136                           tblptru	equ	0xFF8
  2137                           tblptrh	equ	0xFF7
  2138                           tblptrl	equ	0xFF6
  2139                           tablat	equ	0xFF5
  2140                           intcon	equ	0xFF2
  2141                           intcon2	equ	0xFF1
  2142                           intcon3	equ	0xFF0
  2143                           postinc0	equ	0xFEE
  2144                           postdec0	equ	0xFED
  2145                           fsr0h	equ	0xFEA
  2146                           fsr0l	equ	0xFE9
  2147                           wreg	equ	0xFE8
  2148                           postinc1	equ	0xFE6
  2149                           postdec1	equ	0xFE5
  2150                           fsr1l	equ	0xFE1
  2151                           indf2	equ	0xFDF
  2152                           postinc2	equ	0xFDE
  2153                           postdec2	equ	0xFDD
  2154                           fsr2h	equ	0xFDA
  2155                           fsr2l	equ	0xFD9
  2156                           status	equ	0xFD8
  2157                           
  2158 ;; *************** function _lcd_set_cursor *****************
  2159 ;; Defined at:
  2160 ;;		line 120 in file "../test/../include/../src/lcd.c"
  2161 ;; Parameters:    Size  Location     Type
  2162 ;;  column          1    wreg     unsigned char 
  2163 ;;  line            1   21[COMRAM] unsigned char 
  2164 ;; Auto vars:     Size  Location     Type
  2165 ;;  column          1   22[COMRAM] unsigned char 
  2166 ;; Return value:  Size  Location     Type
  2167 ;;		None               void
  2168 ;; Registers used:
  2169 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2170 ;; Tracked objects:
  2171 ;;		On entry : 0/0
  2172 ;;		On exit  : 0/0
  2173 ;;		Unchanged: 0/0
  2174 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2175 ;;      Params:         1       0       0       0       0       0       0       0       0
  2176 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2177 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2178 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2179 ;;Total ram usage:        4 bytes
  2180 ;; Hardware stack levels used:    1
  2181 ;; Hardware stack levels required when called:    4
  2182 ;; This function calls:
  2183 ;;		_lcd_cmd
  2184 ;; This function is called by:
  2185 ;;		_setup
  2186 ;;		_loop
  2187 ;; This function uses a non-reentrant model
  2188 ;;
  2189                           
  2190                           	psect	text11
  2191  0018B2                     __ptext11:
  2192                           	opt stack 0
  2193  0018B2                     _lcd_set_cursor:
  2194                           	opt stack 25
  2195                           
  2196                           ;incstack = 0
  2197                           ;lcd_set_cursor@column stored from wreg
  2198  0018B2  6E17               	movwf	lcd_set_cursor@column,c
  2199                           
  2200                           ;lcd.c: 122: line = (line == 0) ? 0x80 : 0xC0;
  2201  0018B4  5016               	movf	lcd_set_cursor@line,w,c
  2202  0018B6  B4D8               	btfsc	status,2,c
  2203  0018B8  D004               	goto	l2660
  2204  0018BA  0E00               	movlw	0
  2205  0018BC  6E19               	movwf	_lcd_set_cursor$1121+1,c
  2206  0018BE  0EC0               	movlw	192
  2207  0018C0  D003               	goto	L2
  2208  0018C2                     l2660:
  2209  0018C2  0E00               	movlw	0
  2210  0018C4  6E19               	movwf	_lcd_set_cursor$1121+1,c
  2211  0018C6  0E80               	movlw	128
  2212  0018C8                     L2:
  2213  0018C8  6E18               	movwf	_lcd_set_cursor$1121,c
  2214  0018CA  C018  F016         	movff	_lcd_set_cursor$1121,lcd_set_cursor@line
  2215                           
  2216                           ;lcd.c: 123: column &= 0x0F;
  2217  0018CE  0E0F               	movlw	15
  2218  0018D0  1617               	andwf	lcd_set_cursor@column,f,c
  2219                           
  2220                           ;lcd.c: 124: lcd_cmd(line | column);
  2221  0018D2  5016               	movf	lcd_set_cursor@line,w,c
  2222  0018D4  1017               	iorwf	lcd_set_cursor@column,w,c
  2223  0018D6  EC19  F00A         	call	_lcd_cmd
  2224  0018DA  0012               	return	
  2225  0018DC                     __end_of_lcd_set_cursor:
  2226                           	opt stack 0
  2227                           tosu	equ	0xFFF
  2228                           tosh	equ	0xFFE
  2229                           tosl	equ	0xFFD
  2230                           pclath	equ	0xFFA
  2231                           tblptru	equ	0xFF8
  2232                           tblptrh	equ	0xFF7
  2233                           tblptrl	equ	0xFF6
  2234                           tablat	equ	0xFF5
  2235                           intcon	equ	0xFF2
  2236                           intcon2	equ	0xFF1
  2237                           intcon3	equ	0xFF0
  2238                           postinc0	equ	0xFEE
  2239                           postdec0	equ	0xFED
  2240                           fsr0h	equ	0xFEA
  2241                           fsr0l	equ	0xFE9
  2242                           wreg	equ	0xFE8
  2243                           postinc1	equ	0xFE6
  2244                           postdec1	equ	0xFE5
  2245                           fsr1l	equ	0xFE1
  2246                           indf2	equ	0xFDF
  2247                           postinc2	equ	0xFDE
  2248                           postdec2	equ	0xFDD
  2249                           fsr2h	equ	0xFDA
  2250                           fsr2l	equ	0xFD9
  2251                           status	equ	0xFD8
  2252                           
  2253 ;; *************** function _lcd_cmd *****************
  2254 ;; Defined at:
  2255 ;;		line 51 in file "../test/../include/../src/lcd.c"
  2256 ;; Parameters:    Size  Location     Type
  2257 ;;  cmd             1    wreg     unsigned char 
  2258 ;; Auto vars:     Size  Location     Type
  2259 ;;  cmd             1   20[COMRAM] unsigned char 
  2260 ;; Return value:  Size  Location     Type
  2261 ;;		None               void
  2262 ;; Registers used:
  2263 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2264 ;; Tracked objects:
  2265 ;;		On entry : 0/0
  2266 ;;		On exit  : 0/0
  2267 ;;		Unchanged: 0/0
  2268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2269 ;;      Params:         0       0       0       0       0       0       0       0       0
  2270 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2271 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2272 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2273 ;;Total ram usage:        1 bytes
  2274 ;; Hardware stack levels used:    1
  2275 ;; Hardware stack levels required when called:    3
  2276 ;; This function calls:
  2277 ;;		_delayMicroseconds
  2278 ;;		_digitalWrite
  2279 ;; This function is called by:
  2280 ;;		_lcd_init
  2281 ;;		_lcd_clear
  2282 ;;		_lcd_set_cursor
  2283 ;; This function uses a non-reentrant model
  2284 ;;
  2285                           
  2286                           	psect	text12
  2287  001432                     __ptext12:
  2288                           	opt stack 0
  2289  001432                     _lcd_cmd:
  2290                           	opt stack 25
  2291                           
  2292                           ;incstack = 0
  2293                           ;lcd_cmd@cmd stored from wreg
  2294  001432  6E15               	movwf	lcd_cmd@cmd,c
  2295                           
  2296                           ;lcd.c: 53: digitalWrite(lcd_selected->pins.rs, 0);
  2297  001434  0E00               	movlw	0
  2298  001436  6E13               	movwf	digitalWrite@level,c
  2299  001438  EE20 F00C          	lfsr	2,12
  2300  00143C  504D               	movf	_lcd_selected,w,c
  2301  00143E  26D9               	addwf	fsr2l,f,c
  2302  001440  504E               	movf	_lcd_selected+1,w,c
  2303  001442  22DA               	addwfc	fsr2h,f,c
  2304  001444  50DF               	movf	indf2,w,c
  2305  001446  EC64  F005         	call	_digitalWrite
  2306                           
  2307                           ;lcd.c: 55: switch (lcd_selected->pins.port)
  2308  00144A  D00F               	goto	l2358
  2309  00144C                     l337:
  2310  00144C  C015  FF80         	movff	lcd_cmd@cmd,3968	;volatile
  2311  001450  D022               	goto	l2360
  2312  001452                     l339:
  2313  001452  C015  FF81         	movff	lcd_cmd@cmd,3969	;volatile
  2314  001456  D01F               	goto	l2360
  2315  001458                     l340:
  2316  001458  C015  FF82         	movff	lcd_cmd@cmd,3970	;volatile
  2317  00145C  D01C               	goto	l2360
  2318  00145E                     l341:
  2319  00145E  C015  FF83         	movff	lcd_cmd@cmd,3971	;volatile
  2320  001462  D019               	goto	l2360
  2321  001464                     l342:
  2322  001464  C015  FF84         	movff	lcd_cmd@cmd,3972	;volatile
  2323  001468  D016               	goto	l2360
  2324  00146A                     l2358:
  2325  00146A  EE20 F00E          	lfsr	2,14
  2326  00146E  504D               	movf	_lcd_selected,w,c
  2327  001470  26D9               	addwf	fsr2l,f,c
  2328  001472  504E               	movf	_lcd_selected+1,w,c
  2329  001474  22DA               	addwfc	fsr2h,f,c
  2330  001476  50DF               	movf	indf2,w,c
  2331                           
  2332                           ; Switch size 1, requested type "space"
  2333                           ; Number of cases is 5, Range of values is 0 to 4
  2334                           ; switch strategies available:
  2335                           ; Name         Instructions Cycles
  2336                           ; simple_byte           16     9 (average)
  2337                           ;	Chosen strategy is simple_byte
  2338  001478  0A00               	xorlw	0	; case 0
  2339  00147A  B4D8               	btfsc	status,2,c
  2340  00147C  D7E7               	goto	l337
  2341  00147E  0A01               	xorlw	1	; case 1
  2342  001480  B4D8               	btfsc	status,2,c
  2343  001482  D7E7               	goto	l339
  2344  001484  0A03               	xorlw	3	; case 2
  2345  001486  B4D8               	btfsc	status,2,c
  2346  001488  D7E7               	goto	l340
  2347  00148A  0A01               	xorlw	1	; case 3
  2348  00148C  B4D8               	btfsc	status,2,c
  2349  00148E  D7E7               	goto	l341
  2350  001490  0A07               	xorlw	7	; case 4
  2351  001492  B4D8               	btfsc	status,2,c
  2352  001494  D7E7               	goto	l342
  2353  001496                     l2360:
  2354                           
  2355                           ;lcd.c: 64: digitalWrite(lcd_selected->pins.en, 1);
  2356  001496  0E01               	movlw	1
  2357  001498  6E13               	movwf	digitalWrite@level,c
  2358  00149A  EE20 F00D          	lfsr	2,13
  2359  00149E  504D               	movf	_lcd_selected,w,c
  2360  0014A0  26D9               	addwf	fsr2l,f,c
  2361  0014A2  504E               	movf	_lcd_selected+1,w,c
  2362  0014A4  22DA               	addwfc	fsr2h,f,c
  2363  0014A6  50DF               	movf	indf2,w,c
  2364  0014A8  EC64  F005         	call	_digitalWrite
  2365                           
  2366                           ;lcd.c: 65: delayMicroseconds(80);
  2367  0014AC  0E00               	movlw	0
  2368  0014AE  6E10               	movwf	delayMicroseconds@time+1,c
  2369  0014B0  0E50               	movlw	80
  2370  0014B2  6E0F               	movwf	delayMicroseconds@time,c
  2371  0014B4  EC42  F00C         	call	_delayMicroseconds	;wreg free
  2372                           
  2373                           ;lcd.c: 66: digitalWrite(lcd_selected->pins.en, 0);
  2374  0014B8  0E00               	movlw	0
  2375  0014BA  6E13               	movwf	digitalWrite@level,c
  2376  0014BC  EE20 F00D          	lfsr	2,13
  2377  0014C0  504D               	movf	_lcd_selected,w,c
  2378  0014C2  26D9               	addwf	fsr2l,f,c
  2379  0014C4  504E               	movf	_lcd_selected+1,w,c
  2380  0014C6  22DA               	addwfc	fsr2h,f,c
  2381  0014C8  50DF               	movf	indf2,w,c
  2382  0014CA  EC64  F005         	call	_digitalWrite
  2383  0014CE  0012               	return	
  2384  0014D0                     __end_of_lcd_cmd:
  2385                           	opt stack 0
  2386                           tosu	equ	0xFFF
  2387                           tosh	equ	0xFFE
  2388                           tosl	equ	0xFFD
  2389                           pclath	equ	0xFFA
  2390                           tblptru	equ	0xFF8
  2391                           tblptrh	equ	0xFF7
  2392                           tblptrl	equ	0xFF6
  2393                           tablat	equ	0xFF5
  2394                           intcon	equ	0xFF2
  2395                           intcon2	equ	0xFF1
  2396                           intcon3	equ	0xFF0
  2397                           postinc0	equ	0xFEE
  2398                           postdec0	equ	0xFED
  2399                           fsr0h	equ	0xFEA
  2400                           fsr0l	equ	0xFE9
  2401                           wreg	equ	0xFE8
  2402                           postinc1	equ	0xFE6
  2403                           postdec1	equ	0xFE5
  2404                           fsr1l	equ	0xFE1
  2405                           indf2	equ	0xFDF
  2406                           postinc2	equ	0xFDE
  2407                           postdec2	equ	0xFDD
  2408                           fsr2h	equ	0xFDA
  2409                           fsr2l	equ	0xFD9
  2410                           status	equ	0xFD8
  2411                           
  2412 ;; *************** function _lcd_printl *****************
  2413 ;; Defined at:
  2414 ;;		line 93 in file "../test/../include/../src/lcd.c"
  2415 ;; Parameters:    Size  Location     Type
  2416 ;;  l               4   62[COMRAM] long 
  2417 ;; Auto vars:     Size  Location     Type
  2418 ;;		None
  2419 ;; Return value:  Size  Location     Type
  2420 ;;		None               void
  2421 ;; Registers used:
  2422 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2423 ;; Tracked objects:
  2424 ;;		On entry : 0/0
  2425 ;;		On exit  : 0/0
  2426 ;;		Unchanged: 0/0
  2427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2428 ;;      Params:         4       0       0       0       0       0       0       0       0
  2429 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2430 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2431 ;;      Totals:         4       0       0       0       0       0       0       0       0
  2432 ;;Total ram usage:        4 bytes
  2433 ;; Hardware stack levels used:    1
  2434 ;; Hardware stack levels required when called:    5
  2435 ;; This function calls:
  2436 ;;		_lcd_print
  2437 ;;		_sprintf
  2438 ;; This function is called by:
  2439 ;;		_loop
  2440 ;; This function uses a non-reentrant model
  2441 ;;
  2442                           
  2443                           	psect	text13
  2444  0017E2                     __ptext13:
  2445                           	opt stack 0
  2446  0017E2                     _lcd_printl:
  2447                           	opt stack 24
  2448                           
  2449                           ;lcd.c: 95: static char fmt[33];
  2450                           ;lcd.c: 96: sprintf(fmt, "%ld", l);
  2451                           
  2452                           ;incstack = 0
  2453  0017E2  0100               	movlb	0	; () banked
  2454  0017E4  0E00               	movlw	high lcd_printl@fmt
  2455  0017E6  6E32               	movwf	sprintf@sp+1,c
  2456  0017E8  0100               	movlb	0	; () banked
  2457  0017EA  0E81               	movlw	low lcd_printl@fmt
  2458  0017EC  6E31               	movwf	sprintf@sp,c
  2459  0017EE  0E08               	movlw	high STR_1
  2460  0017F0  6E34               	movwf	sprintf@f+1,c
  2461  0017F2  0E5B               	movlw	low STR_1
  2462  0017F4  6E33               	movwf	sprintf@f,c
  2463  0017F6  C03F  F035         	movff	lcd_printl@l,?_sprintf+4
  2464  0017FA  C040  F036         	movff	lcd_printl@l+1,?_sprintf+5
  2465  0017FE  C041  F037         	movff	lcd_printl@l+2,?_sprintf+6
  2466  001802  C042  F038         	movff	lcd_printl@l+3,?_sprintf+7
  2467  001806  EC32  F004         	call	_sprintf	;wreg free
  2468                           
  2469                           ;lcd.c: 97: lcd_print(fmt);
  2470  00180A  0100               	movlb	0	; () banked
  2471  00180C  0E00               	movlw	high lcd_printl@fmt
  2472  00180E  6E17               	movwf	lcd_print@s+1,c
  2473  001810  0100               	movlb	0	; () banked
  2474  001812  0E81               	movlw	low lcd_printl@fmt
  2475  001814  6E16               	movwf	lcd_print@s,c
  2476  001816  EC8A  F00B         	call	_lcd_print	;wreg free
  2477  00181A  0012               	return	
  2478  00181C                     __end_of_lcd_printl:
  2479                           	opt stack 0
  2480                           tosu	equ	0xFFF
  2481                           tosh	equ	0xFFE
  2482                           tosl	equ	0xFFD
  2483                           pclath	equ	0xFFA
  2484                           tblptru	equ	0xFF8
  2485                           tblptrh	equ	0xFF7
  2486                           tblptrl	equ	0xFF6
  2487                           tablat	equ	0xFF5
  2488                           intcon	equ	0xFF2
  2489                           intcon2	equ	0xFF1
  2490                           intcon3	equ	0xFF0
  2491                           postinc0	equ	0xFEE
  2492                           postdec0	equ	0xFED
  2493                           fsr0h	equ	0xFEA
  2494                           fsr0l	equ	0xFE9
  2495                           wreg	equ	0xFE8
  2496                           postinc1	equ	0xFE6
  2497                           postdec1	equ	0xFE5
  2498                           fsr1l	equ	0xFE1
  2499                           indf2	equ	0xFDF
  2500                           postinc2	equ	0xFDE
  2501                           postdec2	equ	0xFDD
  2502                           fsr2h	equ	0xFDA
  2503                           fsr2l	equ	0xFD9
  2504                           status	equ	0xFD8
  2505                           
  2506 ;; *************** function _sprintf *****************
  2507 ;; Defined at:
  2508 ;;		line 492 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\doprnt.c"
  2509 ;; Parameters:    Size  Location     Type
  2510 ;;  sp              2   48[COMRAM] PTR unsigned char 
  2511 ;;		 -> lcd_printi@fmt(33), lcd_printl@fmt(33), 
  2512 ;;  f               2   50[COMRAM] PTR const unsigned char 
  2513 ;;		 -> STR_2(3), STR_1(4), 
  2514 ;; Auto vars:     Size  Location     Type
  2515 ;;  _val            5    5[BANK0 ] struct .
  2516 ;;  ap              2    2[BANK0 ] PTR void [1]
  2517 ;;		 -> ?_sprintf(2), 
  2518 ;;  prec            2    0[BANK0 ] int 
  2519 ;;  c               1   10[BANK0 ] char 
  2520 ;;  flag            1    4[BANK0 ] unsigned char 
  2521 ;; Return value:  Size  Location     Type
  2522 ;;                  2   48[COMRAM] int 
  2523 ;; Registers used:
  2524 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2525 ;; Tracked objects:
  2526 ;;		On entry : 0/0
  2527 ;;		On exit  : 0/0
  2528 ;;		Unchanged: 0/0
  2529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2530 ;;      Params:         8       0       0       0       0       0       0       0       0
  2531 ;;      Locals:         0      11       0       0       0       0       0       0       0
  2532 ;;      Temps:          6       0       0       0       0       0       0       0       0
  2533 ;;      Totals:        14      11       0       0       0       0       0       0       0
  2534 ;;Total ram usage:       25 bytes
  2535 ;; Hardware stack levels used:    1
  2536 ;; Hardware stack levels required when called:    3
  2537 ;; This function calls:
  2538 ;;		___lldiv
  2539 ;;		___llmod
  2540 ;; This function is called by:
  2541 ;;		_lcd_printl
  2542 ;;		_lcd_printi
  2543 ;; This function uses a non-reentrant model
  2544 ;;
  2545                           
  2546                           	psect	text14
  2547  000864                     __ptext14:
  2548                           	opt stack 0
  2549  000864                     _sprintf:
  2550                           	opt stack 25
  2551                           
  2552                           ;doprnt.c: 494: va_list ap;
  2553                           ;doprnt.c: 499: signed char c;
  2554                           ;doprnt.c: 504: int prec;
  2555                           ;doprnt.c: 508: unsigned char flag;
  2556                           ;doprnt.c: 527: union {
  2557                           ;doprnt.c: 528: unsigned long _val;
  2558                           ;doprnt.c: 529: struct {
  2559                           ;doprnt.c: 530: const char * _cp;
  2560                           ;doprnt.c: 531: unsigned _len;
  2561                           ;doprnt.c: 532: } _str;
  2562                           ;doprnt.c: 533: } _val;
  2563                           ;doprnt.c: 542: *ap = __va_start();
  2564                           
  2565                           ;incstack = 0
  2566  000864  0E00               	movlw	high (?_sprintf+4)
  2567  000866  0100               	movlb	0	; () banked
  2568  000868  6FC3               	movwf	(sprintf@ap+1)& (0+255),b
  2569  00086A  0E35               	movlw	low (?_sprintf+4)
  2570  00086C  0100               	movlb	0	; () banked
  2571  00086E  6FC2               	movwf	sprintf@ap& (0+255),b
  2572                           
  2573                           ;doprnt.c: 545: while(c = *f++) {
  2574  000870  D117               	goto	l2506
  2575  000872                     l2448:
  2576                           
  2577                           ; BSR set to: 0
  2578                           ;doprnt.c: 547: if(c != '%')
  2579  000872  0100               	movlb	0	; () banked
  2580  000874  51CA               	movf	sprintf@c& (0+255),w,b
  2581  000876  0A25               	xorlw	37
  2582  000878  B4D8               	btfsc	status,2,c
  2583  00087A  D00A               	goto	l2454
  2584                           
  2585                           ; BSR set to: 0
  2586                           ;doprnt.c: 549: {
  2587                           ;doprnt.c: 550: ((*sp++ = (c)));
  2588  00087C  C031  FFD9         	movff	sprintf@sp,fsr2l
  2589  000880  C032  FFDA         	movff	sprintf@sp+1,fsr2h
  2590  000884  0100               	movlb	0	; () banked
  2591  000886  C0CA  FFDF         	movff	sprintf@c,indf2
  2592                           
  2593                           ; BSR set to: 0
  2594  00088A  4A31               	infsnz	sprintf@sp,f,c
  2595  00088C  2A32               	incf	sprintf@sp+1,f,c
  2596                           
  2597                           ;doprnt.c: 551: continue;
  2598  00088E  D108               	goto	l2506
  2599  000890                     l2454:
  2600                           
  2601                           ; BSR set to: 0
  2602                           ;doprnt.c: 552: }
  2603                           ;doprnt.c: 557: flag = 0;
  2604  000890  0E00               	movlw	0
  2605  000892  0100               	movlb	0	; () banked
  2606  000894  6FC4               	movwf	sprintf@flag& (0+255),b
  2607  000896  D002               	goto	l2460
  2608  000898                     l2456:
  2609                           
  2610                           ; BSR set to: 0
  2611                           ;doprnt.c: 652: flag |= 0x10;
  2612  000898  0100               	movlb	0	; () banked
  2613  00089A  89C4               	bsf	sprintf@flag& (0+255),4,b
  2614  00089C                     l2460:
  2615                           
  2616                           ; BSR set to: 0
  2617  00089C  C033  FFF6         	movff	sprintf@f,tblptrl
  2618  0008A0  C034  FFF7         	movff	sprintf@f+1,tblptrh
  2619  0008A4  4A33               	infsnz	sprintf@f,f,c
  2620  0008A6  2A34               	incf	sprintf@f+1,f,c
  2621  0008A8                     	if	0	;tblptru may be non-zero
  2622  0008A8                     	endif
  2623  0008A8                     	if	0	;tblptru may be non-zero
  2624  0008A8                     	endif
  2625  0008A8  0008               	tblrd		*
  2626  0008AA  0100               	movlb	0	; () banked
  2627  0008AC  CFF5 F0CA          	movff	tablat,sprintf@c
  2628  0008B0  0100               	movlb	0	; () banked
  2629  0008B2  51CA               	movf	sprintf@c& (0+255),w,b
  2630                           
  2631                           ; Switch size 1, requested type "space"
  2632                           ; Number of cases is 4, Range of values is 0 to 108
  2633                           ; switch strategies available:
  2634                           ; Name         Instructions Cycles
  2635                           ; simple_byte           13     7 (average)
  2636                           ;	Chosen strategy is simple_byte
  2637  0008B4  0A00               	xorlw	0	; case 0
  2638  0008B6  B4D8               	btfsc	status,2,c
  2639  0008B8  D100               	goto	l2508
  2640  0008BA  0A64               	xorlw	100	; case 100
  2641  0008BC  B4D8               	btfsc	status,2,c
  2642  0008BE  D007               	goto	l416
  2643  0008C0  0A0D               	xorlw	13	; case 105
  2644  0008C2  B4D8               	btfsc	status,2,c
  2645  0008C4  D004               	goto	l416
  2646  0008C6  0A05               	xorlw	5	; case 108
  2647  0008C8  B4D8               	btfsc	status,2,c
  2648  0008CA  D7E6               	goto	l2456
  2649  0008CC  D0E9               	goto	l2506
  2650  0008CE                     l416:
  2651                           
  2652                           ; BSR set to: 0
  2653                           ;doprnt.c: 1262: {
  2654                           ;doprnt.c: 1264: if(flag & 0x10)
  2655  0008CE  0100               	movlb	0	; () banked
  2656  0008D0  A9C4               	btfss	sprintf@flag& (0+255),4,b
  2657  0008D2  D012               	goto	l2466
  2658                           
  2659                           ; BSR set to: 0
  2660                           ;doprnt.c: 1265: _val._val = (*(long *)__va_arg((*(long **)ap), (long)0));
  2661  0008D4  C0C2  FFD9         	movff	sprintf@ap,fsr2l
  2662  0008D8  C0C3  FFDA         	movff	sprintf@ap+1,fsr2h
  2663  0008DC  0100               	movlb	0	; () banked
  2664  0008DE  CFDE F0C5          	movff	postinc2,sprintf@_val
  2665  0008E2  0100               	movlb	0	; () banked
  2666  0008E4  CFDE F0C6          	movff	postinc2,sprintf@_val+1
  2667  0008E8  0100               	movlb	0	; () banked
  2668  0008EA  CFDE F0C7          	movff	postinc2,sprintf@_val+2
  2669  0008EE  0100               	movlb	0	; () banked
  2670  0008F0  CFDE F0C8          	movff	postinc2,sprintf@_val+3
  2671                           
  2672                           ; BSR set to: 0
  2673  0008F4  0E04               	movlw	4
  2674  0008F6  D014               	goto	L3
  2675  0008F8                     l2466:
  2676                           
  2677                           ; BSR set to: 0
  2678                           ;doprnt.c: 1266: else
  2679                           ;doprnt.c: 1268: _val._val = (long)(*(int *)__va_arg((*(int **)ap), (int)0));
  2680  0008F8  C0C2  FFD9         	movff	sprintf@ap,fsr2l
  2681  0008FC  C0C3  FFDA         	movff	sprintf@ap+1,fsr2h
  2682  000900  0100               	movlb	0	; () banked
  2683  000902  CFDE F0C5          	movff	postinc2,sprintf@_val
  2684  000906  0100               	movlb	0	; () banked
  2685  000908  CFDD F0C6          	movff	postdec2,sprintf@_val+1
  2686  00090C  0100               	movlb	0	; () banked
  2687  00090E  0E00               	movlw	0
  2688  000910  0100               	movlb	0	; () banked
  2689  000912  BFC6               	btfsc	(sprintf@_val+1)& (0+255),7,b
  2690  000914  0EFF               	movlw	-1
  2691  000916  0100               	movlb	0	; () banked
  2692  000918  6FC7               	movwf	(sprintf@_val+2)& (0+255),b
  2693  00091A  0100               	movlb	0	; () banked
  2694  00091C  6FC8               	movwf	(sprintf@_val+3)& (0+255),b
  2695                           
  2696                           ; BSR set to: 0
  2697  00091E  0E02               	movlw	2
  2698  000920                     L3:
  2699  000920  0100               	movlb	0	; () banked
  2700  000922  27C2               	addwf	sprintf@ap& (0+255),f,b
  2701  000924  0E00               	movlw	0
  2702  000926  0100               	movlb	0	; () banked
  2703  000928  23C3               	addwfc	(sprintf@ap+1)& (0+255),f,b
  2704                           
  2705                           ; BSR set to: 0
  2706                           ;doprnt.c: 1270: if((long)_val._val < 0) {
  2707                           
  2708                           ; BSR set to: 0
  2709  00092A  0100               	movlb	0	; () banked
  2710  00092C  51C8               	movf	(sprintf@_val+3)& (0+255),w,b
  2711  00092E  0A80               	xorlw	128
  2712  000930  0F80               	addlw	128
  2713  000932  E10B               	bnz	u3645
  2714  000934  0E00               	movlw	0
  2715  000936  0100               	movlb	0	; () banked
  2716  000938  5DC7               	subwf	(sprintf@_val+2)& (0+255),w,b
  2717  00093A  E107               	bnz	u3645
  2718  00093C  0E00               	movlw	0
  2719  00093E  0100               	movlb	0	; () banked
  2720  000940  5DC6               	subwf	(sprintf@_val+1)& (0+255),w,b
  2721  000942  E103               	bnz	u3645
  2722  000944  0E00               	movlw	0
  2723  000946  0100               	movlb	0	; () banked
  2724  000948  5DC5               	subwf	sprintf@_val& (0+255),w,b
  2725  00094A                     u3645:
  2726  00094A  B0D8               	btfsc	status,0,c
  2727  00094C  D012               	goto	l2476
  2728                           
  2729                           ; BSR set to: 0
  2730                           ;doprnt.c: 1271: flag |= 0x03;
  2731  00094E  0E03               	movlw	3
  2732  000950  0100               	movlb	0	; () banked
  2733  000952  13C4               	iorwf	sprintf@flag& (0+255),f,b
  2734                           
  2735                           ; BSR set to: 0
  2736                           ;doprnt.c: 1272: _val._val = -_val._val;
  2737  000954  0100               	movlb	0	; () banked
  2738  000956  1FC8               	comf	(sprintf@_val+3)& (0+255),f,b
  2739  000958  0100               	movlb	0	; () banked
  2740  00095A  1FC7               	comf	(sprintf@_val+2)& (0+255),f,b
  2741  00095C  0100               	movlb	0	; () banked
  2742  00095E  1FC6               	comf	(sprintf@_val+1)& (0+255),f,b
  2743  000960  0100               	movlb	0	; () banked
  2744  000962  6DC5               	negf	sprintf@_val& (0+255),b
  2745  000964  0E00               	movlw	0
  2746  000966  0100               	movlb	0	; () banked
  2747  000968  23C6               	addwfc	(sprintf@_val+1)& (0+255),f,b
  2748  00096A  0100               	movlb	0	; () banked
  2749  00096C  23C7               	addwfc	(sprintf@_val+2)& (0+255),f,b
  2750  00096E  0100               	movlb	0	; () banked
  2751  000970  23C8               	addwfc	(sprintf@_val+3)& (0+255),f,b
  2752  000972                     l2476:
  2753                           
  2754                           ; BSR set to: 0
  2755                           ;doprnt.c: 1273: }
  2756                           ;doprnt.c: 1275: }
  2757                           ;doprnt.c: 1314: for(c = 1 ; c != sizeof dpowers/sizeof dpowers[0] ; c++)
  2758  000972  0E01               	movlw	1
  2759  000974  0100               	movlb	0	; () banked
  2760  000976  6FCA               	movwf	sprintf@c& (0+255),b
  2761  000978                     
  2762                           ; BSR set to: 0
  2763  000978  0100               	movlb	0	; () banked
  2764  00097A  51CA               	movf	sprintf@c& (0+255),w,b
  2765  00097C  0A0A               	xorlw	10
  2766  00097E  B4D8               	btfsc	status,2,c
  2767  000980  D01E               	goto	l2490
  2768                           
  2769                           ; BSR set to: 0
  2770                           ;doprnt.c: 1315: if(_val._val < dpowers[c])
  2771                           
  2772                           ; BSR set to: 0
  2773                           
  2774                           ; BSR set to: 0
  2775  000982  0100               	movlb	0	; () banked
  2776  000984  51CA               	movf	sprintf@c& (0+255),w,b
  2777  000986  0D04               	mullw	4
  2778  000988  0E1D               	movlw	low _dpowers
  2779  00098A  24F3               	addwf	prodl,w,c
  2780  00098C  6EF6               	movwf	tblptrl,c
  2781  00098E  0E08               	movlw	high _dpowers
  2782  000990  20F4               	addwfc	prodh,w,c
  2783  000992  6EF7               	movwf	tblptrh,c
  2784  000994                     	if	0	;There are less than 3 active tblptr bytes
  2785  000994                     	endif
  2786  000994  0009               	tblrd		*+
  2787  000996  50F5               	movf	tablat,w,c
  2788  000998  0100               	movlb	0	; () banked
  2789  00099A  5DC5               	subwf	sprintf@_val& (0+255),w,b
  2790  00099C  0009               	tblrd		*+
  2791  00099E  50F5               	movf	tablat,w,c
  2792  0009A0  0100               	movlb	0	; () banked
  2793  0009A2  59C6               	subwfb	(sprintf@_val+1)& (0+255),w,b
  2794  0009A4  0009               	tblrd		*+
  2795  0009A6  50F5               	movf	tablat,w,c
  2796  0009A8  0100               	movlb	0	; () banked
  2797  0009AA  59C7               	subwfb	(sprintf@_val+2)& (0+255),w,b
  2798  0009AC  0009               	tblrd		*+
  2799  0009AE  50F5               	movf	tablat,w,c
  2800  0009B0  0100               	movlb	0	; () banked
  2801  0009B2  59C8               	subwfb	(sprintf@_val+3)& (0+255),w,b
  2802  0009B4  A0D8               	btfss	status,0,c
  2803  0009B6  D003               	goto	l2490
  2804                           
  2805                           ; BSR set to: 0
  2806                           
  2807                           ; BSR set to: 0
  2808                           
  2809                           ; BSR set to: 0
  2810                           ;doprnt.c: 1316: break;
  2811  0009B8  0100               	movlb	0	; () banked
  2812  0009BA  2BCA               	incf	sprintf@c& (0+255),f,b
  2813  0009BC  D7DD               	goto	L4
  2814  0009BE                     l2490:
  2815                           
  2816                           ; BSR set to: 0
  2817                           ;doprnt.c: 1431: {
  2818                           ;doprnt.c: 1447: if(flag & 0x03)
  2819  0009BE  C0C4  F039         	movff	sprintf@flag,??_sprintf
  2820  0009C2  0E03               	movlw	3
  2821  0009C4  1639               	andwf	??_sprintf,f,c
  2822  0009C6  B4D8               	btfsc	status,2,c
  2823  0009C8  D008               	goto	l2496
  2824                           
  2825                           ; BSR set to: 0
  2826                           ;doprnt.c: 1448: ((*sp++ = ('-')));
  2827  0009CA  C031  FFD9         	movff	sprintf@sp,fsr2l
  2828  0009CE  C032  FFDA         	movff	sprintf@sp+1,fsr2h
  2829  0009D2  0E2D               	movlw	45
  2830  0009D4  6EDF               	movwf	indf2,c
  2831                           
  2832                           ; BSR set to: 0
  2833  0009D6  4A31               	infsnz	sprintf@sp,f,c
  2834  0009D8  2A32               	incf	sprintf@sp+1,f,c
  2835  0009DA                     l2496:
  2836                           
  2837                           ; BSR set to: 0
  2838                           ;doprnt.c: 1478: }
  2839                           ;doprnt.c: 1481: prec = c;
  2840  0009DA  0100               	movlb	0	; () banked
  2841  0009DC  51CA               	movf	sprintf@c& (0+255),w,b
  2842  0009DE  0100               	movlb	0	; () banked
  2843  0009E0  6FC0               	movwf	sprintf@prec& (0+255),b
  2844  0009E2  0100               	movlb	0	; () banked
  2845  0009E4  6BC1               	clrf	(sprintf@prec+1)& (0+255),b
  2846  0009E6  0100               	movlb	0	; () banked
  2847  0009E8  BFC0               	btfsc	sprintf@prec& (0+255),7,b
  2848  0009EA  07C1               	decf	(sprintf@prec+1)& (0+255),f,b
  2849                           
  2850                           ;doprnt.c: 1483: while(prec--) {
  2851  0009EC  D04F               	goto	l2504
  2852  0009EE                     l2498:
  2853                           
  2854                           ; BSR set to: 0
  2855                           ;doprnt.c: 1487: {
  2856                           ;doprnt.c: 1498: c = (_val._val / dpowers[prec]) % 10 + '0';
  2857  0009EE  0100               	movlb	0	; () banked
  2858  0009F0  C0C0  F039         	movff	sprintf@prec,??_sprintf
  2859  0009F4  0100               	movlb	0	; () banked
  2860  0009F6  C0C1  F03A         	movff	sprintf@prec+1,??_sprintf+1
  2861  0009FA  90D8               	bcf	status,0,c
  2862  0009FC  3639               	rlcf	??_sprintf,f,c
  2863  0009FE  363A               	rlcf	??_sprintf+1,f,c
  2864  000A00  90D8               	bcf	status,0,c
  2865  000A02  3639               	rlcf	??_sprintf,f,c
  2866  000A04  363A               	rlcf	??_sprintf+1,f,c
  2867  000A06  0E1D               	movlw	low _dpowers
  2868  000A08  2439               	addwf	??_sprintf,w,c
  2869  000A0A  6EF6               	movwf	tblptrl,c
  2870  000A0C  0E08               	movlw	high _dpowers
  2871  000A0E  203A               	addwfc	??_sprintf+1,w,c
  2872  000A10  6EF7               	movwf	tblptrh,c
  2873  000A12                     	if	0	;There are less than 3 active tblptr bytes
  2874  000A12                     	endif
  2875  000A12  0009               	tblrd		*+
  2876  000A14  CFF5 F01F          	movff	tablat,___lldiv@divisor
  2877  000A18  0009               	tblrd		*+
  2878  000A1A  CFF5 F020          	movff	tablat,___lldiv@divisor+1
  2879  000A1E  0009               	tblrd		*+
  2880  000A20  CFF5 F021          	movff	tablat,___lldiv@divisor+2
  2881  000A24  000A               	tblrd		*-
  2882  000A26  CFF5 F022          	movff	tablat,___lldiv@divisor+3
  2883  000A2A  C0C5  F01B         	movff	sprintf@_val,___lldiv@dividend
  2884  000A2E  C0C6  F01C         	movff	sprintf@_val+1,___lldiv@dividend+1
  2885  000A32  C0C7  F01D         	movff	sprintf@_val+2,___lldiv@dividend+2
  2886  000A36  C0C8  F01E         	movff	sprintf@_val+3,___lldiv@dividend+3
  2887  000A3A  ECB7  F00A         	call	___lldiv	;wreg free
  2888  000A3E  C01B  F028         	movff	?___lldiv,___llmod@dividend
  2889  000A42  C01C  F029         	movff	?___lldiv+1,___llmod@dividend+1
  2890  000A46  C01D  F02A         	movff	?___lldiv+2,___llmod@dividend+2
  2891  000A4A  C01E  F02B         	movff	?___lldiv+3,___llmod@dividend+3
  2892  000A4E  0E0A               	movlw	10
  2893  000A50  6E2C               	movwf	___llmod@divisor,c
  2894  000A52  0E00               	movlw	0
  2895  000A54  6E2D               	movwf	___llmod@divisor+1,c
  2896  000A56  0E00               	movlw	0
  2897  000A58  6E2E               	movwf	___llmod@divisor+2,c
  2898  000A5A  0E00               	movlw	0
  2899  000A5C  6E2F               	movwf	___llmod@divisor+3,c
  2900  000A5E  EC2C  F00B         	call	___llmod	;wreg free
  2901  000A62  C028  F03B         	movff	?___llmod,??_sprintf+2
  2902  000A66  C029  F03C         	movff	?___llmod+1,??_sprintf+3
  2903  000A6A  C02A  F03D         	movff	?___llmod+2,??_sprintf+4
  2904  000A6E  C02B  F03E         	movff	?___llmod+3,??_sprintf+5
  2905  000A72  503B               	movf	??_sprintf+2,w,c
  2906  000A74  0F30               	addlw	48
  2907  000A76  0100               	movlb	0	; () banked
  2908  000A78  6FCA               	movwf	sprintf@c& (0+255),b
  2909                           
  2910                           ; BSR set to: 0
  2911                           ;doprnt.c: 1532: }
  2912                           ;doprnt.c: 1533: ((*sp++ = (c)));
  2913  000A7A  C031  FFD9         	movff	sprintf@sp,fsr2l
  2914  000A7E  C032  FFDA         	movff	sprintf@sp+1,fsr2h
  2915  000A82  0100               	movlb	0	; () banked
  2916  000A84  C0CA  FFDF         	movff	sprintf@c,indf2
  2917                           
  2918                           ; BSR set to: 0
  2919  000A88  4A31               	infsnz	sprintf@sp,f,c
  2920  000A8A  2A32               	incf	sprintf@sp+1,f,c
  2921  000A8C                     l2504:
  2922                           
  2923                           ; BSR set to: 0
  2924  000A8C  0100               	movlb	0	; () banked
  2925  000A8E  07C0               	decf	sprintf@prec& (0+255),f,b
  2926  000A90  A0D8               	btfss	status,0,c
  2927  000A92  07C1               	decf	(sprintf@prec+1)& (0+255),f,b
  2928  000A94  0100               	movlb	0	; () banked
  2929  000A96  29C0               	incf	sprintf@prec& (0+255),w,b
  2930  000A98  B4D8               	btfsc	status,2,c
  2931  000A9A  29C1               	incf	(sprintf@prec+1)& (0+255),w,b
  2932  000A9C  A4D8               	btfss	status,2,c
  2933  000A9E  D7A7               	goto	l2498
  2934  000AA0                     l2506:
  2935                           
  2936                           ; BSR set to: 0
  2937  000AA0  C033  FFF6         	movff	sprintf@f,tblptrl
  2938  000AA4  C034  FFF7         	movff	sprintf@f+1,tblptrh
  2939  000AA8  4A33               	infsnz	sprintf@f,f,c
  2940  000AAA  2A34               	incf	sprintf@f+1,f,c
  2941  000AAC                     	if	0	;tblptru may be non-zero
  2942  000AAC                     	endif
  2943  000AAC                     	if	0	;tblptru may be non-zero
  2944  000AAC                     	endif
  2945  000AAC  0008               	tblrd		*
  2946  000AAE  0100               	movlb	0	; () banked
  2947  000AB0  CFF5 F0CA          	movff	tablat,sprintf@c
  2948  000AB4  0100               	movlb	0	; () banked
  2949  000AB6  67CA               	tstfsz	sprintf@c& (0+255),b
  2950  000AB8  D6DC               	goto	l2448
  2951  000ABA                     l2508:
  2952                           
  2953                           ; BSR set to: 0
  2954                           ;doprnt.c: 1547: *sp = 0;
  2955  000ABA  C031  FFD9         	movff	sprintf@sp,fsr2l
  2956  000ABE  C032  FFDA         	movff	sprintf@sp+1,fsr2h
  2957  000AC2  0E00               	movlw	0
  2958  000AC4  6EDF               	movwf	indf2,c
  2959                           
  2960                           ; BSR set to: 0
  2961                           
  2962                           ; BSR set to: 0
  2963                           ;doprnt.c: 1549: return 0;
  2964                           ;	Return value of _sprintf is never used
  2965  000AC6  0012               	return	
  2966  000AC8                     __end_of_sprintf:
  2967                           	opt stack 0
  2968                           tosu	equ	0xFFF
  2969                           tosh	equ	0xFFE
  2970                           tosl	equ	0xFFD
  2971                           pclath	equ	0xFFA
  2972                           tblptru	equ	0xFF8
  2973                           tblptrh	equ	0xFF7
  2974                           tblptrl	equ	0xFF6
  2975                           tablat	equ	0xFF5
  2976                           prodh	equ	0xFF4
  2977                           prodl	equ	0xFF3
  2978                           intcon	equ	0xFF2
  2979                           intcon2	equ	0xFF1
  2980                           intcon3	equ	0xFF0
  2981                           postinc0	equ	0xFEE
  2982                           postdec0	equ	0xFED
  2983                           fsr0h	equ	0xFEA
  2984                           fsr0l	equ	0xFE9
  2985                           wreg	equ	0xFE8
  2986                           postinc1	equ	0xFE6
  2987                           postdec1	equ	0xFE5
  2988                           fsr1l	equ	0xFE1
  2989                           indf2	equ	0xFDF
  2990                           postinc2	equ	0xFDE
  2991                           postdec2	equ	0xFDD
  2992                           fsr2h	equ	0xFDA
  2993                           fsr2l	equ	0xFD9
  2994                           status	equ	0xFD8
  2995                           
  2996 ;; *************** function ___llmod *****************
  2997 ;; Defined at:
  2998 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\llmod.c"
  2999 ;; Parameters:    Size  Location     Type
  3000 ;;  dividend        4   39[COMRAM] unsigned long 
  3001 ;;  divisor         4   43[COMRAM] unsigned long 
  3002 ;; Auto vars:     Size  Location     Type
  3003 ;;  counter         1   47[COMRAM] unsigned char 
  3004 ;; Return value:  Size  Location     Type
  3005 ;;                  4   39[COMRAM] unsigned long 
  3006 ;; Registers used:
  3007 ;;		wreg, status,2, status,0
  3008 ;; Tracked objects:
  3009 ;;		On entry : 0/0
  3010 ;;		On exit  : 0/0
  3011 ;;		Unchanged: 0/0
  3012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3013 ;;      Params:         8       0       0       0       0       0       0       0       0
  3014 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3015 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3016 ;;      Totals:         9       0       0       0       0       0       0       0       0
  3017 ;;Total ram usage:        9 bytes
  3018 ;; Hardware stack levels used:    1
  3019 ;; Hardware stack levels required when called:    2
  3020 ;; This function calls:
  3021 ;;		Nothing
  3022 ;; This function is called by:
  3023 ;;		_sprintf
  3024 ;; This function uses a non-reentrant model
  3025 ;;
  3026                           
  3027                           	psect	text15
  3028  001658                     __ptext15:
  3029                           	opt stack 0
  3030  001658                     ___llmod:
  3031                           	opt stack 25
  3032                           
  3033                           ; BSR set to: 0
  3034                           ;incstack = 0
  3035  001658  502F               	movf	___llmod@divisor+3,w,c
  3036  00165A  102C               	iorwf	___llmod@divisor,w,c
  3037  00165C  102D               	iorwf	___llmod@divisor+1,w,c
  3038  00165E  102E               	iorwf	___llmod@divisor+2,w,c
  3039  001660  B4D8               	btfsc	status,2,c
  3040  001662  D024               	goto	l1018
  3041  001664  0E01               	movlw	1
  3042  001666  6E30               	movwf	___llmod@counter,c
  3043  001668  D006               	goto	l2410
  3044  00166A                     l2408:
  3045  00166A  90D8               	bcf	status,0,c
  3046  00166C  362C               	rlcf	___llmod@divisor,f,c
  3047  00166E  362D               	rlcf	___llmod@divisor+1,f,c
  3048  001670  362E               	rlcf	___llmod@divisor+2,f,c
  3049  001672  362F               	rlcf	___llmod@divisor+3,f,c
  3050  001674  2A30               	incf	___llmod@counter,f,c
  3051  001676                     l2410:
  3052  001676  AE2F               	btfss	___llmod@divisor+3,7,c
  3053  001678  D7F8               	goto	l2408
  3054  00167A                     l2412:
  3055  00167A  502C               	movf	___llmod@divisor,w,c
  3056  00167C  5C28               	subwf	___llmod@dividend,w,c
  3057  00167E  502D               	movf	___llmod@divisor+1,w,c
  3058  001680  5829               	subwfb	___llmod@dividend+1,w,c
  3059  001682  502E               	movf	___llmod@divisor+2,w,c
  3060  001684  582A               	subwfb	___llmod@dividend+2,w,c
  3061  001686  502F               	movf	___llmod@divisor+3,w,c
  3062  001688  582B               	subwfb	___llmod@dividend+3,w,c
  3063  00168A  A0D8               	btfss	status,0,c
  3064  00168C  D008               	goto	l2416
  3065  00168E  502C               	movf	___llmod@divisor,w,c
  3066  001690  5E28               	subwf	___llmod@dividend,f,c
  3067  001692  502D               	movf	___llmod@divisor+1,w,c
  3068  001694  5A29               	subwfb	___llmod@dividend+1,f,c
  3069  001696  502E               	movf	___llmod@divisor+2,w,c
  3070  001698  5A2A               	subwfb	___llmod@dividend+2,f,c
  3071  00169A  502F               	movf	___llmod@divisor+3,w,c
  3072  00169C  5A2B               	subwfb	___llmod@dividend+3,f,c
  3073  00169E                     l2416:
  3074  00169E  90D8               	bcf	status,0,c
  3075  0016A0  322F               	rrcf	___llmod@divisor+3,f,c
  3076  0016A2  322E               	rrcf	___llmod@divisor+2,f,c
  3077  0016A4  322D               	rrcf	___llmod@divisor+1,f,c
  3078  0016A6  322C               	rrcf	___llmod@divisor,f,c
  3079  0016A8  2E30               	decfsz	___llmod@counter,f,c
  3080  0016AA  D7E7               	goto	l2412
  3081  0016AC                     l1018:
  3082  0016AC  C028  F028         	movff	___llmod@dividend,?___llmod
  3083  0016B0  C029  F029         	movff	___llmod@dividend+1,?___llmod+1
  3084  0016B4  C02A  F02A         	movff	___llmod@dividend+2,?___llmod+2
  3085  0016B8  C02B  F02B         	movff	___llmod@dividend+3,?___llmod+3
  3086  0016BC  0012               	return	
  3087  0016BE                     __end_of___llmod:
  3088                           	opt stack 0
  3089                           tosu	equ	0xFFF
  3090                           tosh	equ	0xFFE
  3091                           tosl	equ	0xFFD
  3092                           pclath	equ	0xFFA
  3093                           tblptru	equ	0xFF8
  3094                           tblptrh	equ	0xFF7
  3095                           tblptrl	equ	0xFF6
  3096                           tablat	equ	0xFF5
  3097                           prodh	equ	0xFF4
  3098                           prodl	equ	0xFF3
  3099                           intcon	equ	0xFF2
  3100                           intcon2	equ	0xFF1
  3101                           intcon3	equ	0xFF0
  3102                           postinc0	equ	0xFEE
  3103                           postdec0	equ	0xFED
  3104                           fsr0h	equ	0xFEA
  3105                           fsr0l	equ	0xFE9
  3106                           wreg	equ	0xFE8
  3107                           postinc1	equ	0xFE6
  3108                           postdec1	equ	0xFE5
  3109                           fsr1l	equ	0xFE1
  3110                           indf2	equ	0xFDF
  3111                           postinc2	equ	0xFDE
  3112                           postdec2	equ	0xFDD
  3113                           fsr2h	equ	0xFDA
  3114                           fsr2l	equ	0xFD9
  3115                           status	equ	0xFD8
  3116                           
  3117 ;; *************** function ___lldiv *****************
  3118 ;; Defined at:
  3119 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\lldiv.c"
  3120 ;; Parameters:    Size  Location     Type
  3121 ;;  dividend        4   26[COMRAM] unsigned long 
  3122 ;;  divisor         4   30[COMRAM] unsigned long 
  3123 ;; Auto vars:     Size  Location     Type
  3124 ;;  quotient        4   34[COMRAM] unsigned long 
  3125 ;;  counter         1   38[COMRAM] unsigned char 
  3126 ;; Return value:  Size  Location     Type
  3127 ;;                  4   26[COMRAM] unsigned long 
  3128 ;; Registers used:
  3129 ;;		wreg, status,2, status,0
  3130 ;; Tracked objects:
  3131 ;;		On entry : 0/0
  3132 ;;		On exit  : 0/0
  3133 ;;		Unchanged: 0/0
  3134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3135 ;;      Params:         8       0       0       0       0       0       0       0       0
  3136 ;;      Locals:         5       0       0       0       0       0       0       0       0
  3137 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3138 ;;      Totals:        13       0       0       0       0       0       0       0       0
  3139 ;;Total ram usage:       13 bytes
  3140 ;; Hardware stack levels used:    1
  3141 ;; Hardware stack levels required when called:    2
  3142 ;; This function calls:
  3143 ;;		Nothing
  3144 ;; This function is called by:
  3145 ;;		_loop
  3146 ;;		_sprintf
  3147 ;; This function uses a non-reentrant model
  3148 ;;
  3149                           
  3150                           	psect	text16
  3151  00156E                     __ptext16:
  3152                           	opt stack 0
  3153  00156E                     ___lldiv:
  3154                           	opt stack 25
  3155                           
  3156                           ;incstack = 0
  3157  00156E  0E00               	movlw	0
  3158  001570  6E23               	movwf	___lldiv@quotient,c
  3159  001572  0E00               	movlw	0
  3160  001574  6E24               	movwf	___lldiv@quotient+1,c
  3161  001576  0E00               	movlw	0
  3162  001578  6E25               	movwf	___lldiv@quotient+2,c
  3163  00157A  0E00               	movlw	0
  3164  00157C  6E26               	movwf	___lldiv@quotient+3,c
  3165  00157E  5022               	movf	___lldiv@divisor+3,w,c
  3166  001580  101F               	iorwf	___lldiv@divisor,w,c
  3167  001582  1020               	iorwf	___lldiv@divisor+1,w,c
  3168  001584  1021               	iorwf	___lldiv@divisor+2,w,c
  3169  001586  B4D8               	btfsc	status,2,c
  3170  001588  D02A               	goto	l1008
  3171  00158A  0E01               	movlw	1
  3172  00158C  6E27               	movwf	___lldiv@counter,c
  3173  00158E  D006               	goto	l2390
  3174  001590                     l2388:
  3175  001590  90D8               	bcf	status,0,c
  3176  001592  361F               	rlcf	___lldiv@divisor,f,c
  3177  001594  3620               	rlcf	___lldiv@divisor+1,f,c
  3178  001596  3621               	rlcf	___lldiv@divisor+2,f,c
  3179  001598  3622               	rlcf	___lldiv@divisor+3,f,c
  3180  00159A  2A27               	incf	___lldiv@counter,f,c
  3181  00159C                     l2390:
  3182  00159C  AE22               	btfss	___lldiv@divisor+3,7,c
  3183  00159E  D7F8               	goto	l2388
  3184  0015A0                     l2392:
  3185  0015A0  90D8               	bcf	status,0,c
  3186  0015A2  3623               	rlcf	___lldiv@quotient,f,c
  3187  0015A4  3624               	rlcf	___lldiv@quotient+1,f,c
  3188  0015A6  3625               	rlcf	___lldiv@quotient+2,f,c
  3189  0015A8  3626               	rlcf	___lldiv@quotient+3,f,c
  3190  0015AA  501F               	movf	___lldiv@divisor,w,c
  3191  0015AC  5C1B               	subwf	___lldiv@dividend,w,c
  3192  0015AE  5020               	movf	___lldiv@divisor+1,w,c
  3193  0015B0  581C               	subwfb	___lldiv@dividend+1,w,c
  3194  0015B2  5021               	movf	___lldiv@divisor+2,w,c
  3195  0015B4  581D               	subwfb	___lldiv@dividend+2,w,c
  3196  0015B6  5022               	movf	___lldiv@divisor+3,w,c
  3197  0015B8  581E               	subwfb	___lldiv@dividend+3,w,c
  3198  0015BA  A0D8               	btfss	status,0,c
  3199  0015BC  D009               	goto	l2400
  3200  0015BE  501F               	movf	___lldiv@divisor,w,c
  3201  0015C0  5E1B               	subwf	___lldiv@dividend,f,c
  3202  0015C2  5020               	movf	___lldiv@divisor+1,w,c
  3203  0015C4  5A1C               	subwfb	___lldiv@dividend+1,f,c
  3204  0015C6  5021               	movf	___lldiv@divisor+2,w,c
  3205  0015C8  5A1D               	subwfb	___lldiv@dividend+2,f,c
  3206  0015CA  5022               	movf	___lldiv@divisor+3,w,c
  3207  0015CC  5A1E               	subwfb	___lldiv@dividend+3,f,c
  3208  0015CE  8023               	bsf	___lldiv@quotient,0,c
  3209  0015D0                     l2400:
  3210  0015D0  90D8               	bcf	status,0,c
  3211  0015D2  3222               	rrcf	___lldiv@divisor+3,f,c
  3212  0015D4  3221               	rrcf	___lldiv@divisor+2,f,c
  3213  0015D6  3220               	rrcf	___lldiv@divisor+1,f,c
  3214  0015D8  321F               	rrcf	___lldiv@divisor,f,c
  3215  0015DA  2E27               	decfsz	___lldiv@counter,f,c
  3216  0015DC  D7E1               	goto	l2392
  3217  0015DE                     l1008:
  3218  0015DE  C023  F01B         	movff	___lldiv@quotient,?___lldiv
  3219  0015E2  C024  F01C         	movff	___lldiv@quotient+1,?___lldiv+1
  3220  0015E6  C025  F01D         	movff	___lldiv@quotient+2,?___lldiv+2
  3221  0015EA  C026  F01E         	movff	___lldiv@quotient+3,?___lldiv+3
  3222  0015EE  0012               	return	
  3223  0015F0                     __end_of___lldiv:
  3224                           	opt stack 0
  3225                           tosu	equ	0xFFF
  3226                           tosh	equ	0xFFE
  3227                           tosl	equ	0xFFD
  3228                           pclath	equ	0xFFA
  3229                           tblptru	equ	0xFF8
  3230                           tblptrh	equ	0xFF7
  3231                           tblptrl	equ	0xFF6
  3232                           tablat	equ	0xFF5
  3233                           prodh	equ	0xFF4
  3234                           prodl	equ	0xFF3
  3235                           intcon	equ	0xFF2
  3236                           intcon2	equ	0xFF1
  3237                           intcon3	equ	0xFF0
  3238                           postinc0	equ	0xFEE
  3239                           postdec0	equ	0xFED
  3240                           fsr0h	equ	0xFEA
  3241                           fsr0l	equ	0xFE9
  3242                           wreg	equ	0xFE8
  3243                           postinc1	equ	0xFE6
  3244                           postdec1	equ	0xFE5
  3245                           fsr1l	equ	0xFE1
  3246                           indf2	equ	0xFDF
  3247                           postinc2	equ	0xFDE
  3248                           postdec2	equ	0xFDD
  3249                           fsr2h	equ	0xFDA
  3250                           fsr2l	equ	0xFD9
  3251                           status	equ	0xFD8
  3252                           
  3253 ;; *************** function _lcd_print *****************
  3254 ;; Defined at:
  3255 ;;		line 87 in file "../test/../include/../src/lcd.c"
  3256 ;; Parameters:    Size  Location     Type
  3257 ;;  s               2   21[COMRAM] PTR const unsigned char 
  3258 ;;		 -> STR_4(5), STR_3(17), lcd_printc@fmt(2), lcd_printi@fmt(33), 
  3259 ;;		 -> lcd_printl@fmt(33), 
  3260 ;; Auto vars:     Size  Location     Type
  3261 ;;		None
  3262 ;; Return value:  Size  Location     Type
  3263 ;;		None               void
  3264 ;; Registers used:
  3265 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3266 ;; Tracked objects:
  3267 ;;		On entry : 0/0
  3268 ;;		On exit  : 0/0
  3269 ;;		Unchanged: 0/0
  3270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3271 ;;      Params:         2       0       0       0       0       0       0       0       0
  3272 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3273 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3274 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3275 ;;Total ram usage:        2 bytes
  3276 ;; Hardware stack levels used:    1
  3277 ;; Hardware stack levels required when called:    4
  3278 ;; This function calls:
  3279 ;;		_lcd_data
  3280 ;; This function is called by:
  3281 ;;		_lcd_printl
  3282 ;;		_lcd_printi
  3283 ;;		_lcd_printc
  3284 ;;		_setup
  3285 ;;		_loop
  3286 ;; This function uses a non-reentrant model
  3287 ;;
  3288                           
  3289                           	psect	text17
  3290  001714                     __ptext17:
  3291                           	opt stack 0
  3292  001714                     _lcd_print:
  3293                           	opt stack 25
  3294                           
  3295                           ;lcd.c: 89: for (; *s; s++)
  3296                           
  3297                           ;incstack = 0
  3298  001714  D014               	goto	l2444
  3299  001716                     l2440:
  3300                           
  3301                           ;lcd.c: 90: lcd_data(*s);
  3302  001716  C016  FFF6         	movff	lcd_print@s,tblptrl
  3303  00171A  C017  FFF7         	movff	lcd_print@s+1,tblptrh
  3304  00171E  6AF8               	clrf	tblptru,c
  3305  001720  0E07               	movlw	(high __ramtop+-1)
  3306  001722  64F7               	cpfsgt	tblptrh,c
  3307  001724  D003               	bra	u3597
  3308  001726  0008               	tblrd		*
  3309  001728  50F5               	movf	tablat,w,c
  3310  00172A  D005               	bra	u3590
  3311  00172C                     u3597:
  3312  00172C  CFF6 FFE9          	movff	tblptrl,fsr0l
  3313  001730  CFF7 FFEA          	movff	tblptrh,fsr0h
  3314  001734  50EF               	movf	indf0,w,c
  3315  001736                     u3590:
  3316  001736  EC68  F00A         	call	_lcd_data
  3317  00173A  4A16               	infsnz	lcd_print@s,f,c
  3318  00173C  2A17               	incf	lcd_print@s+1,f,c
  3319  00173E                     l2444:
  3320  00173E  C016  FFF6         	movff	lcd_print@s,tblptrl
  3321  001742  C017  FFF7         	movff	lcd_print@s+1,tblptrh
  3322  001746  6AF8               	clrf	tblptru,c
  3323  001748  0E07               	movlw	(high __ramtop+-1)
  3324  00174A  64F7               	cpfsgt	tblptrh,c
  3325  00174C  D003               	bra	u3607
  3326  00174E  0008               	tblrd		*
  3327  001750  50F5               	movf	tablat,w,c
  3328  001752  D005               	bra	u3600
  3329  001754                     u3607:
  3330  001754  CFF6 FFE9          	movff	tblptrl,fsr0l
  3331  001758  CFF7 FFEA          	movff	tblptrh,fsr0h
  3332  00175C  50EF               	movf	indf0,w,c
  3333  00175E                     u3600:
  3334  00175E  0900               	iorlw	0
  3335  001760  B4D8               	btfsc	status,2,c
  3336  001762  0012               	return	
  3337  001764  D7D8               	goto	l2440
  3338  001766                     __end_of_lcd_print:
  3339                           	opt stack 0
  3340                           tosu	equ	0xFFF
  3341                           tosh	equ	0xFFE
  3342                           tosl	equ	0xFFD
  3343                           pclath	equ	0xFFA
  3344                           tblptru	equ	0xFF8
  3345                           tblptrh	equ	0xFF7
  3346                           tblptrl	equ	0xFF6
  3347                           tablat	equ	0xFF5
  3348                           prodh	equ	0xFF4
  3349                           prodl	equ	0xFF3
  3350                           intcon	equ	0xFF2
  3351                           intcon2	equ	0xFF1
  3352                           intcon3	equ	0xFF0
  3353                           indf0	equ	0xFEF
  3354                           postinc0	equ	0xFEE
  3355                           postdec0	equ	0xFED
  3356                           fsr0h	equ	0xFEA
  3357                           fsr0l	equ	0xFE9
  3358                           wreg	equ	0xFE8
  3359                           postinc1	equ	0xFE6
  3360                           postdec1	equ	0xFE5
  3361                           fsr1l	equ	0xFE1
  3362                           indf2	equ	0xFDF
  3363                           postinc2	equ	0xFDE
  3364                           postdec2	equ	0xFDD
  3365                           fsr2h	equ	0xFDA
  3366                           fsr2l	equ	0xFD9
  3367                           status	equ	0xFD8
  3368                           
  3369 ;; *************** function _lcd_data *****************
  3370 ;; Defined at:
  3371 ;;		line 69 in file "../test/../include/../src/lcd.c"
  3372 ;; Parameters:    Size  Location     Type
  3373 ;;  data            1    wreg     unsigned char 
  3374 ;; Auto vars:     Size  Location     Type
  3375 ;;  data            1   20[COMRAM] unsigned char 
  3376 ;; Return value:  Size  Location     Type
  3377 ;;		None               void
  3378 ;; Registers used:
  3379 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3380 ;; Tracked objects:
  3381 ;;		On entry : 0/0
  3382 ;;		On exit  : 0/0
  3383 ;;		Unchanged: 0/0
  3384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3385 ;;      Params:         0       0       0       0       0       0       0       0       0
  3386 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3387 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3388 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3389 ;;Total ram usage:        1 bytes
  3390 ;; Hardware stack levels used:    1
  3391 ;; Hardware stack levels required when called:    3
  3392 ;; This function calls:
  3393 ;;		_delayMicroseconds
  3394 ;;		_digitalWrite
  3395 ;; This function is called by:
  3396 ;;		_lcd_print
  3397 ;; This function uses a non-reentrant model
  3398 ;;
  3399                           
  3400                           	psect	text18
  3401  0014D0                     __ptext18:
  3402                           	opt stack 0
  3403  0014D0                     _lcd_data:
  3404                           	opt stack 25
  3405                           
  3406                           ;incstack = 0
  3407                           ;lcd_data@data stored from wreg
  3408  0014D0  6E15               	movwf	lcd_data@data,c
  3409                           
  3410                           ;lcd.c: 71: digitalWrite(lcd_selected->pins.rs, 1);
  3411  0014D2  0E01               	movlw	1
  3412  0014D4  6E13               	movwf	digitalWrite@level,c
  3413  0014D6  EE20 F00C          	lfsr	2,12
  3414  0014DA  504D               	movf	_lcd_selected,w,c
  3415  0014DC  26D9               	addwf	fsr2l,f,c
  3416  0014DE  504E               	movf	_lcd_selected+1,w,c
  3417  0014E0  22DA               	addwfc	fsr2h,f,c
  3418  0014E2  50DF               	movf	indf2,w,c
  3419  0014E4  EC64  F005         	call	_digitalWrite
  3420                           
  3421                           ;lcd.c: 73: switch (lcd_selected->pins.port)
  3422  0014E8  D00F               	goto	l2374
  3423  0014EA                     l347:
  3424  0014EA  C015  FF80         	movff	lcd_data@data,3968	;volatile
  3425  0014EE  D022               	goto	l2376
  3426  0014F0                     l349:
  3427  0014F0  C015  FF81         	movff	lcd_data@data,3969	;volatile
  3428  0014F4  D01F               	goto	l2376
  3429  0014F6                     l350:
  3430  0014F6  C015  FF82         	movff	lcd_data@data,3970	;volatile
  3431  0014FA  D01C               	goto	l2376
  3432  0014FC                     l351:
  3433  0014FC  C015  FF83         	movff	lcd_data@data,3971	;volatile
  3434  001500  D019               	goto	l2376
  3435  001502                     l352:
  3436  001502  C015  FF84         	movff	lcd_data@data,3972	;volatile
  3437  001506  D016               	goto	l2376
  3438  001508                     l2374:
  3439  001508  EE20 F00E          	lfsr	2,14
  3440  00150C  504D               	movf	_lcd_selected,w,c
  3441  00150E  26D9               	addwf	fsr2l,f,c
  3442  001510  504E               	movf	_lcd_selected+1,w,c
  3443  001512  22DA               	addwfc	fsr2h,f,c
  3444  001514  50DF               	movf	indf2,w,c
  3445                           
  3446                           ; Switch size 1, requested type "space"
  3447                           ; Number of cases is 5, Range of values is 0 to 4
  3448                           ; switch strategies available:
  3449                           ; Name         Instructions Cycles
  3450                           ; simple_byte           16     9 (average)
  3451                           ;	Chosen strategy is simple_byte
  3452  001516  0A00               	xorlw	0	; case 0
  3453  001518  B4D8               	btfsc	status,2,c
  3454  00151A  D7E7               	goto	l347
  3455  00151C  0A01               	xorlw	1	; case 1
  3456  00151E  B4D8               	btfsc	status,2,c
  3457  001520  D7E7               	goto	l349
  3458  001522  0A03               	xorlw	3	; case 2
  3459  001524  B4D8               	btfsc	status,2,c
  3460  001526  D7E7               	goto	l350
  3461  001528  0A01               	xorlw	1	; case 3
  3462  00152A  B4D8               	btfsc	status,2,c
  3463  00152C  D7E7               	goto	l351
  3464  00152E  0A07               	xorlw	7	; case 4
  3465  001530  B4D8               	btfsc	status,2,c
  3466  001532  D7E7               	goto	l352
  3467  001534                     l2376:
  3468                           
  3469                           ;lcd.c: 82: digitalWrite(lcd_selected->pins.en, 1);
  3470  001534  0E01               	movlw	1
  3471  001536  6E13               	movwf	digitalWrite@level,c
  3472  001538  EE20 F00D          	lfsr	2,13
  3473  00153C  504D               	movf	_lcd_selected,w,c
  3474  00153E  26D9               	addwf	fsr2l,f,c
  3475  001540  504E               	movf	_lcd_selected+1,w,c
  3476  001542  22DA               	addwfc	fsr2h,f,c
  3477  001544  50DF               	movf	indf2,w,c
  3478  001546  EC64  F005         	call	_digitalWrite
  3479                           
  3480                           ;lcd.c: 83: delayMicroseconds(80);
  3481  00154A  0E00               	movlw	0
  3482  00154C  6E10               	movwf	delayMicroseconds@time+1,c
  3483  00154E  0E50               	movlw	80
  3484  001550  6E0F               	movwf	delayMicroseconds@time,c
  3485  001552  EC42  F00C         	call	_delayMicroseconds	;wreg free
  3486                           
  3487                           ;lcd.c: 84: digitalWrite(lcd_selected->pins.en, 0);
  3488  001556  0E00               	movlw	0
  3489  001558  6E13               	movwf	digitalWrite@level,c
  3490  00155A  EE20 F00D          	lfsr	2,13
  3491  00155E  504D               	movf	_lcd_selected,w,c
  3492  001560  26D9               	addwf	fsr2l,f,c
  3493  001562  504E               	movf	_lcd_selected+1,w,c
  3494  001564  22DA               	addwfc	fsr2h,f,c
  3495  001566  50DF               	movf	indf2,w,c
  3496  001568  EC64  F005         	call	_digitalWrite
  3497  00156C  0012               	return	
  3498  00156E                     __end_of_lcd_data:
  3499                           	opt stack 0
  3500                           tosu	equ	0xFFF
  3501                           tosh	equ	0xFFE
  3502                           tosl	equ	0xFFD
  3503                           pclath	equ	0xFFA
  3504                           tblptru	equ	0xFF8
  3505                           tblptrh	equ	0xFF7
  3506                           tblptrl	equ	0xFF6
  3507                           tablat	equ	0xFF5
  3508                           prodh	equ	0xFF4
  3509                           prodl	equ	0xFF3
  3510                           intcon	equ	0xFF2
  3511                           intcon2	equ	0xFF1
  3512                           intcon3	equ	0xFF0
  3513                           indf0	equ	0xFEF
  3514                           postinc0	equ	0xFEE
  3515                           postdec0	equ	0xFED
  3516                           fsr0h	equ	0xFEA
  3517                           fsr0l	equ	0xFE9
  3518                           wreg	equ	0xFE8
  3519                           postinc1	equ	0xFE6
  3520                           postdec1	equ	0xFE5
  3521                           fsr1l	equ	0xFE1
  3522                           indf2	equ	0xFDF
  3523                           postinc2	equ	0xFDE
  3524                           postdec2	equ	0xFDD
  3525                           fsr2h	equ	0xFDA
  3526                           fsr2l	equ	0xFD9
  3527                           status	equ	0xFD8
  3528                           
  3529 ;; *************** function _digitalWrite *****************
  3530 ;; Defined at:
  3531 ;;		line 105 in file "../test/../include/../src/arduim.c"
  3532 ;; Parameters:    Size  Location     Type
  3533 ;;  pin             1    wreg     unsigned char 
  3534 ;;  level           1   18[COMRAM] unsigned char 
  3535 ;; Auto vars:     Size  Location     Type
  3536 ;;  pin             1   19[COMRAM] unsigned char 
  3537 ;; Return value:  Size  Location     Type
  3538 ;;		None               void
  3539 ;; Registers used:
  3540 ;;		wreg, status,2, status,0
  3541 ;; Tracked objects:
  3542 ;;		On entry : 0/0
  3543 ;;		On exit  : 0/0
  3544 ;;		Unchanged: 0/0
  3545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3546 ;;      Params:         1       0       0       0       0       0       0       0       0
  3547 ;;      Locals:         1       0       0       0       0       0       0       0       0
  3548 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3549 ;;      Totals:         2       0       0       0       0       0       0       0       0
  3550 ;;Total ram usage:        2 bytes
  3551 ;; Hardware stack levels used:    1
  3552 ;; Hardware stack levels required when called:    2
  3553 ;; This function calls:
  3554 ;;		Nothing
  3555 ;; This function is called by:
  3556 ;;		_lcd_init
  3557 ;;		_lcd_cmd
  3558 ;;		_lcd_data
  3559 ;;		_loop
  3560 ;; This function uses a non-reentrant model
  3561 ;;
  3562                           
  3563                           	psect	text19
  3564  000AC8                     __ptext19:
  3565                           	opt stack 0
  3566  000AC8                     _digitalWrite:
  3567                           	opt stack 25
  3568                           
  3569                           ;incstack = 0
  3570                           ;digitalWrite@pin stored from wreg
  3571  000AC8  6E14               	movwf	digitalWrite@pin,c
  3572                           
  3573                           ;arduim.c: 107: if ( (level != 1 && level != 0) || pin > 31 )
  3574  000ACA  0413               	decf	digitalWrite@level,w,c
  3575  000ACC  B4D8               	btfsc	status,2,c
  3576  000ACE  D002               	goto	l2316
  3577  000AD0  6613               	tstfsz	digitalWrite@level,c
  3578  000AD2  D125               	goto	l188
  3579  000AD4                     l2316:
  3580  000AD4  0E1F               	movlw	31
  3581  000AD6  6414               	cpfsgt	digitalWrite@pin,c
  3582  000AD8  D0C1               	goto	l2320
  3583  000ADA  D121               	goto	l188
  3584  000ADC                     l190:
  3585  000ADC  B013               	btfsc	digitalWrite@level,0,c
  3586  000ADE  D002               	bra	u3155
  3587  000AE0  9080               	bcf	3968,0,c	;volatile
  3588  000AE2  D001               	bra	u3156
  3589  000AE4                     u3155:
  3590  000AE4  8080               	bsf	3968,0,c	;volatile
  3591  000AE6                     u3156:
  3592  000AE6  D11B               	goto	l188
  3593  000AE8                     l192:
  3594  000AE8  B013               	btfsc	digitalWrite@level,0,c
  3595  000AEA  D002               	bra	u3165
  3596  000AEC  9280               	bcf	3968,1,c	;volatile
  3597  000AEE  D001               	bra	u3166
  3598  000AF0                     u3165:
  3599  000AF0  8280               	bsf	3968,1,c	;volatile
  3600  000AF2                     u3166:
  3601  000AF2  D115               	goto	l188
  3602  000AF4                     l193:
  3603  000AF4  B013               	btfsc	digitalWrite@level,0,c
  3604  000AF6  D002               	bra	u3175
  3605  000AF8  9480               	bcf	3968,2,c	;volatile
  3606  000AFA  D001               	bra	u3176
  3607  000AFC                     u3175:
  3608  000AFC  8480               	bsf	3968,2,c	;volatile
  3609  000AFE                     u3176:
  3610  000AFE  D10F               	goto	l188
  3611  000B00                     l194:
  3612  000B00  B013               	btfsc	digitalWrite@level,0,c
  3613  000B02  D002               	bra	u3185
  3614  000B04  9680               	bcf	3968,3,c	;volatile
  3615  000B06  D001               	bra	u3186
  3616  000B08                     u3185:
  3617  000B08  8680               	bsf	3968,3,c	;volatile
  3618  000B0A                     u3186:
  3619  000B0A  D109               	goto	l188
  3620  000B0C                     l195:
  3621  000B0C  B013               	btfsc	digitalWrite@level,0,c
  3622  000B0E  D002               	bra	u3195
  3623  000B10  9880               	bcf	3968,4,c	;volatile
  3624  000B12  D001               	bra	u3196
  3625  000B14                     u3195:
  3626  000B14  8880               	bsf	3968,4,c	;volatile
  3627  000B16                     u3196:
  3628  000B16  D103               	goto	l188
  3629  000B18                     l196:
  3630  000B18  B013               	btfsc	digitalWrite@level,0,c
  3631  000B1A  D002               	bra	u3205
  3632  000B1C  9A80               	bcf	3968,5,c	;volatile
  3633  000B1E  D001               	bra	u3206
  3634  000B20                     u3205:
  3635  000B20  8A80               	bsf	3968,5,c	;volatile
  3636  000B22                     u3206:
  3637  000B22  D0FD               	goto	l188
  3638  000B24                     l197:
  3639  000B24  B013               	btfsc	digitalWrite@level,0,c
  3640  000B26  D002               	bra	u3215
  3641  000B28  9081               	bcf	3969,0,c	;volatile
  3642  000B2A  D001               	bra	u3216
  3643  000B2C                     u3215:
  3644  000B2C  8081               	bsf	3969,0,c	;volatile
  3645  000B2E                     u3216:
  3646  000B2E  D0F7               	goto	l188
  3647  000B30                     l198:
  3648  000B30  B013               	btfsc	digitalWrite@level,0,c
  3649  000B32  D002               	bra	u3225
  3650  000B34  9281               	bcf	3969,1,c	;volatile
  3651  000B36  D001               	bra	u3226
  3652  000B38                     u3225:
  3653  000B38  8281               	bsf	3969,1,c	;volatile
  3654  000B3A                     u3226:
  3655  000B3A  D0F1               	goto	l188
  3656  000B3C                     l199:
  3657  000B3C  B013               	btfsc	digitalWrite@level,0,c
  3658  000B3E  D002               	bra	u3235
  3659  000B40  9481               	bcf	3969,2,c	;volatile
  3660  000B42  D001               	bra	u3236
  3661  000B44                     u3235:
  3662  000B44  8481               	bsf	3969,2,c	;volatile
  3663  000B46                     u3236:
  3664  000B46  D0EB               	goto	l188
  3665  000B48                     l200:
  3666  000B48  B013               	btfsc	digitalWrite@level,0,c
  3667  000B4A  D002               	bra	u3245
  3668  000B4C  9681               	bcf	3969,3,c	;volatile
  3669  000B4E  D001               	bra	u3246
  3670  000B50                     u3245:
  3671  000B50  8681               	bsf	3969,3,c	;volatile
  3672  000B52                     u3246:
  3673  000B52  D0E5               	goto	l188
  3674  000B54                     l201:
  3675  000B54  B013               	btfsc	digitalWrite@level,0,c
  3676  000B56  D002               	bra	u3255
  3677  000B58  9881               	bcf	3969,4,c	;volatile
  3678  000B5A  D001               	bra	u3256
  3679  000B5C                     u3255:
  3680  000B5C  8881               	bsf	3969,4,c	;volatile
  3681  000B5E                     u3256:
  3682  000B5E  D0DF               	goto	l188
  3683  000B60                     l202:
  3684  000B60  B013               	btfsc	digitalWrite@level,0,c
  3685  000B62  D002               	bra	u3265
  3686  000B64  9A81               	bcf	3969,5,c	;volatile
  3687  000B66  D001               	bra	u3266
  3688  000B68                     u3265:
  3689  000B68  8A81               	bsf	3969,5,c	;volatile
  3690  000B6A                     u3266:
  3691  000B6A  D0D9               	goto	l188
  3692  000B6C                     l203:
  3693  000B6C  B013               	btfsc	digitalWrite@level,0,c
  3694  000B6E  D002               	bra	u3275
  3695  000B70  9C81               	bcf	3969,6,c	;volatile
  3696  000B72  D001               	bra	u3276
  3697  000B74                     u3275:
  3698  000B74  8C81               	bsf	3969,6,c	;volatile
  3699  000B76                     u3276:
  3700  000B76  D0D3               	goto	l188
  3701  000B78                     l204:
  3702  000B78  B013               	btfsc	digitalWrite@level,0,c
  3703  000B7A  D002               	bra	u3285
  3704  000B7C  9E81               	bcf	3969,7,c	;volatile
  3705  000B7E  D001               	bra	u3286
  3706  000B80                     u3285:
  3707  000B80  8E81               	bsf	3969,7,c	;volatile
  3708  000B82                     u3286:
  3709  000B82  D0CD               	goto	l188
  3710  000B84                     l205:
  3711  000B84  B013               	btfsc	digitalWrite@level,0,c
  3712  000B86  D002               	bra	u3295
  3713  000B88  9082               	bcf	3970,0,c	;volatile
  3714  000B8A  D001               	bra	u3296
  3715  000B8C                     u3295:
  3716  000B8C  8082               	bsf	3970,0,c	;volatile
  3717  000B8E                     u3296:
  3718  000B8E  D0C7               	goto	l188
  3719  000B90                     l206:
  3720  000B90  B013               	btfsc	digitalWrite@level,0,c
  3721  000B92  D002               	bra	u3305
  3722  000B94  9282               	bcf	3970,1,c	;volatile
  3723  000B96  D001               	bra	u3306
  3724  000B98                     u3305:
  3725  000B98  8282               	bsf	3970,1,c	;volatile
  3726  000B9A                     u3306:
  3727  000B9A  D0C1               	goto	l188
  3728  000B9C                     l207:
  3729  000B9C  B013               	btfsc	digitalWrite@level,0,c
  3730  000B9E  D002               	bra	u3315
  3731  000BA0  9482               	bcf	3970,2,c	;volatile
  3732  000BA2  D001               	bra	u3316
  3733  000BA4                     u3315:
  3734  000BA4  8482               	bsf	3970,2,c	;volatile
  3735  000BA6                     u3316:
  3736  000BA6  D0BB               	goto	l188
  3737  000BA8                     l208:
  3738  000BA8  B013               	btfsc	digitalWrite@level,0,c
  3739  000BAA  D002               	bra	u3325
  3740  000BAC  9882               	bcf	3970,4,c	;volatile
  3741  000BAE  D001               	bra	u3326
  3742  000BB0                     u3325:
  3743  000BB0  8882               	bsf	3970,4,c	;volatile
  3744  000BB2                     u3326:
  3745  000BB2  D0B5               	goto	l188
  3746  000BB4                     l209:
  3747  000BB4  B013               	btfsc	digitalWrite@level,0,c
  3748  000BB6  D002               	bra	u3335
  3749  000BB8  9A82               	bcf	3970,5,c	;volatile
  3750  000BBA  D001               	bra	u3336
  3751  000BBC                     u3335:
  3752  000BBC  8A82               	bsf	3970,5,c	;volatile
  3753  000BBE                     u3336:
  3754  000BBE  D0AF               	goto	l188
  3755  000BC0                     l210:
  3756  000BC0  B013               	btfsc	digitalWrite@level,0,c
  3757  000BC2  D002               	bra	u3345
  3758  000BC4  9C82               	bcf	3970,6,c	;volatile
  3759  000BC6  D001               	bra	u3346
  3760  000BC8                     u3345:
  3761  000BC8  8C82               	bsf	3970,6,c	;volatile
  3762  000BCA                     u3346:
  3763  000BCA  D0A9               	goto	l188
  3764  000BCC                     l211:
  3765  000BCC  B013               	btfsc	digitalWrite@level,0,c
  3766  000BCE  D002               	bra	u3355
  3767  000BD0  9E82               	bcf	3970,7,c	;volatile
  3768  000BD2  D001               	bra	u3356
  3769  000BD4                     u3355:
  3770  000BD4  8E82               	bsf	3970,7,c	;volatile
  3771  000BD6                     u3356:
  3772  000BD6  D0A3               	goto	l188
  3773  000BD8                     l212:
  3774  000BD8  B013               	btfsc	digitalWrite@level,0,c
  3775  000BDA  D002               	bra	u3365
  3776  000BDC  9083               	bcf	3971,0,c	;volatile
  3777  000BDE  D001               	bra	u3366
  3778  000BE0                     u3365:
  3779  000BE0  8083               	bsf	3971,0,c	;volatile
  3780  000BE2                     u3366:
  3781  000BE2  D09D               	goto	l188
  3782  000BE4                     l213:
  3783  000BE4  B013               	btfsc	digitalWrite@level,0,c
  3784  000BE6  D002               	bra	u3375
  3785  000BE8  9283               	bcf	3971,1,c	;volatile
  3786  000BEA  D001               	bra	u3376
  3787  000BEC                     u3375:
  3788  000BEC  8283               	bsf	3971,1,c	;volatile
  3789  000BEE                     u3376:
  3790  000BEE  D097               	goto	l188
  3791  000BF0                     l214:
  3792  000BF0  B013               	btfsc	digitalWrite@level,0,c
  3793  000BF2  D002               	bra	u3385
  3794  000BF4  9483               	bcf	3971,2,c	;volatile
  3795  000BF6  D001               	bra	u3386
  3796  000BF8                     u3385:
  3797  000BF8  8483               	bsf	3971,2,c	;volatile
  3798  000BFA                     u3386:
  3799  000BFA  D091               	goto	l188
  3800  000BFC                     l215:
  3801  000BFC  B013               	btfsc	digitalWrite@level,0,c
  3802  000BFE  D002               	bra	u3395
  3803  000C00  9683               	bcf	3971,3,c	;volatile
  3804  000C02  D001               	bra	u3396
  3805  000C04                     u3395:
  3806  000C04  8683               	bsf	3971,3,c	;volatile
  3807  000C06                     u3396:
  3808  000C06  D08B               	goto	l188
  3809  000C08                     l216:
  3810  000C08  B013               	btfsc	digitalWrite@level,0,c
  3811  000C0A  D002               	bra	u3405
  3812  000C0C  9883               	bcf	3971,4,c	;volatile
  3813  000C0E  D001               	bra	u3406
  3814  000C10                     u3405:
  3815  000C10  8883               	bsf	3971,4,c	;volatile
  3816  000C12                     u3406:
  3817  000C12  D085               	goto	l188
  3818  000C14                     l217:
  3819  000C14  B013               	btfsc	digitalWrite@level,0,c
  3820  000C16  D002               	bra	u3415
  3821  000C18  9A83               	bcf	3971,5,c	;volatile
  3822  000C1A  D001               	bra	u3416
  3823  000C1C                     u3415:
  3824  000C1C  8A83               	bsf	3971,5,c	;volatile
  3825  000C1E                     u3416:
  3826  000C1E  D07F               	goto	l188
  3827  000C20                     l218:
  3828  000C20  B013               	btfsc	digitalWrite@level,0,c
  3829  000C22  D002               	bra	u3425
  3830  000C24  9C83               	bcf	3971,6,c	;volatile
  3831  000C26  D001               	bra	u3426
  3832  000C28                     u3425:
  3833  000C28  8C83               	bsf	3971,6,c	;volatile
  3834  000C2A                     u3426:
  3835  000C2A  D079               	goto	l188
  3836  000C2C                     l219:
  3837  000C2C  B013               	btfsc	digitalWrite@level,0,c
  3838  000C2E  D002               	bra	u3435
  3839  000C30  9E83               	bcf	3971,7,c	;volatile
  3840  000C32  D001               	bra	u3436
  3841  000C34                     u3435:
  3842  000C34  8E83               	bsf	3971,7,c	;volatile
  3843  000C36                     u3436:
  3844  000C36  D073               	goto	l188
  3845  000C38                     l220:
  3846  000C38  B013               	btfsc	digitalWrite@level,0,c
  3847  000C3A  D002               	bra	u3445
  3848  000C3C  9084               	bcf	3972,0,c	;volatile
  3849  000C3E  D001               	bra	u3446
  3850  000C40                     u3445:
  3851  000C40  8084               	bsf	3972,0,c	;volatile
  3852  000C42                     u3446:
  3853  000C42  D06D               	goto	l188
  3854  000C44                     l221:
  3855  000C44  B013               	btfsc	digitalWrite@level,0,c
  3856  000C46  D002               	bra	u3455
  3857  000C48  9284               	bcf	3972,1,c	;volatile
  3858  000C4A  D001               	bra	u3456
  3859  000C4C                     u3455:
  3860  000C4C  8284               	bsf	3972,1,c	;volatile
  3861  000C4E                     u3456:
  3862  000C4E  D067               	goto	l188
  3863  000C50                     l222:
  3864  000C50  B013               	btfsc	digitalWrite@level,0,c
  3865  000C52  D002               	bra	u3465
  3866  000C54  9484               	bcf	3972,2,c	;volatile
  3867  000C56  D001               	bra	u3466
  3868  000C58                     u3465:
  3869  000C58  8484               	bsf	3972,2,c	;volatile
  3870  000C5A                     u3466:
  3871  000C5A  D061               	goto	l188
  3872  000C5C                     l2320:
  3873  000C5C  5014               	movf	digitalWrite@pin,w,c
  3874                           
  3875                           ; Switch size 1, requested type "space"
  3876                           ; Number of cases is 32, Range of values is 0 to 31
  3877                           ; switch strategies available:
  3878                           ; Name         Instructions Cycles
  3879                           ; simple_byte           97    49 (average)
  3880                           ;	Chosen strategy is simple_byte
  3881  000C5E  0A00               	xorlw	0	; case 0
  3882  000C60  B4D8               	btfsc	status,2,c
  3883  000C62  D73C               	goto	l190
  3884  000C64  0A01               	xorlw	1	; case 1
  3885  000C66  B4D8               	btfsc	status,2,c
  3886  000C68  D73F               	goto	l192
  3887  000C6A  0A03               	xorlw	3	; case 2
  3888  000C6C  B4D8               	btfsc	status,2,c
  3889  000C6E  D742               	goto	l193
  3890  000C70  0A01               	xorlw	1	; case 3
  3891  000C72  B4D8               	btfsc	status,2,c
  3892  000C74  D745               	goto	l194
  3893  000C76  0A07               	xorlw	7	; case 4
  3894  000C78  B4D8               	btfsc	status,2,c
  3895  000C7A  D748               	goto	l195
  3896  000C7C  0A01               	xorlw	1	; case 5
  3897  000C7E  B4D8               	btfsc	status,2,c
  3898  000C80  D74B               	goto	l196
  3899  000C82  0A03               	xorlw	3	; case 6
  3900  000C84  B4D8               	btfsc	status,2,c
  3901  000C86  D74E               	goto	l197
  3902  000C88  0A01               	xorlw	1	; case 7
  3903  000C8A  B4D8               	btfsc	status,2,c
  3904  000C8C  D751               	goto	l198
  3905  000C8E  0A0F               	xorlw	15	; case 8
  3906  000C90  B4D8               	btfsc	status,2,c
  3907  000C92  D754               	goto	l199
  3908  000C94  0A01               	xorlw	1	; case 9
  3909  000C96  B4D8               	btfsc	status,2,c
  3910  000C98  D757               	goto	l200
  3911  000C9A  0A03               	xorlw	3	; case 10
  3912  000C9C  B4D8               	btfsc	status,2,c
  3913  000C9E  D75A               	goto	l201
  3914  000CA0  0A01               	xorlw	1	; case 11
  3915  000CA2  B4D8               	btfsc	status,2,c
  3916  000CA4  D75D               	goto	l202
  3917  000CA6  0A07               	xorlw	7	; case 12
  3918  000CA8  B4D8               	btfsc	status,2,c
  3919  000CAA  D760               	goto	l203
  3920  000CAC  0A01               	xorlw	1	; case 13
  3921  000CAE  B4D8               	btfsc	status,2,c
  3922  000CB0  D763               	goto	l204
  3923  000CB2  0A03               	xorlw	3	; case 14
  3924  000CB4  B4D8               	btfsc	status,2,c
  3925  000CB6  D766               	goto	l205
  3926  000CB8  0A01               	xorlw	1	; case 15
  3927  000CBA  B4D8               	btfsc	status,2,c
  3928  000CBC  D769               	goto	l206
  3929  000CBE  0A1F               	xorlw	31	; case 16
  3930  000CC0  B4D8               	btfsc	status,2,c
  3931  000CC2  D76C               	goto	l207
  3932  000CC4  0A01               	xorlw	1	; case 17
  3933  000CC6  B4D8               	btfsc	status,2,c
  3934  000CC8  D76F               	goto	l208
  3935  000CCA  0A03               	xorlw	3	; case 18
  3936  000CCC  B4D8               	btfsc	status,2,c
  3937  000CCE  D772               	goto	l209
  3938  000CD0  0A01               	xorlw	1	; case 19
  3939  000CD2  B4D8               	btfsc	status,2,c
  3940  000CD4  D775               	goto	l210
  3941  000CD6  0A07               	xorlw	7	; case 20
  3942  000CD8  B4D8               	btfsc	status,2,c
  3943  000CDA  D778               	goto	l211
  3944  000CDC  0A01               	xorlw	1	; case 21
  3945  000CDE  B4D8               	btfsc	status,2,c
  3946  000CE0  D77B               	goto	l212
  3947  000CE2  0A03               	xorlw	3	; case 22
  3948  000CE4  B4D8               	btfsc	status,2,c
  3949  000CE6  D77E               	goto	l213
  3950  000CE8  0A01               	xorlw	1	; case 23
  3951  000CEA  B4D8               	btfsc	status,2,c
  3952  000CEC  D781               	goto	l214
  3953  000CEE  0A0F               	xorlw	15	; case 24
  3954  000CF0  B4D8               	btfsc	status,2,c
  3955  000CF2  D784               	goto	l215
  3956  000CF4  0A01               	xorlw	1	; case 25
  3957  000CF6  B4D8               	btfsc	status,2,c
  3958  000CF8  D787               	goto	l216
  3959  000CFA  0A03               	xorlw	3	; case 26
  3960  000CFC  B4D8               	btfsc	status,2,c
  3961  000CFE  D78A               	goto	l217
  3962  000D00  0A01               	xorlw	1	; case 27
  3963  000D02  B4D8               	btfsc	status,2,c
  3964  000D04  D78D               	goto	l218
  3965  000D06  0A07               	xorlw	7	; case 28
  3966  000D08  B4D8               	btfsc	status,2,c
  3967  000D0A  D790               	goto	l219
  3968  000D0C  0A01               	xorlw	1	; case 29
  3969  000D0E  B4D8               	btfsc	status,2,c
  3970  000D10  D793               	goto	l220
  3971  000D12  0A03               	xorlw	3	; case 30
  3972  000D14  B4D8               	btfsc	status,2,c
  3973  000D16  D796               	goto	l221
  3974  000D18  0A01               	xorlw	1	; case 31
  3975  000D1A  B4D8               	btfsc	status,2,c
  3976  000D1C  D799               	goto	l222
  3977  000D1E                     l188:
  3978  000D1E  0012               	return	
  3979  000D20                     __end_of_digitalWrite:
  3980                           	opt stack 0
  3981                           tosu	equ	0xFFF
  3982                           tosh	equ	0xFFE
  3983                           tosl	equ	0xFFD
  3984                           pclath	equ	0xFFA
  3985                           tblptru	equ	0xFF8
  3986                           tblptrh	equ	0xFF7
  3987                           tblptrl	equ	0xFF6
  3988                           tablat	equ	0xFF5
  3989                           prodh	equ	0xFF4
  3990                           prodl	equ	0xFF3
  3991                           intcon	equ	0xFF2
  3992                           intcon2	equ	0xFF1
  3993                           intcon3	equ	0xFF0
  3994                           indf0	equ	0xFEF
  3995                           postinc0	equ	0xFEE
  3996                           postdec0	equ	0xFED
  3997                           fsr0h	equ	0xFEA
  3998                           fsr0l	equ	0xFE9
  3999                           wreg	equ	0xFE8
  4000                           postinc1	equ	0xFE6
  4001                           postdec1	equ	0xFE5
  4002                           fsr1l	equ	0xFE1
  4003                           indf2	equ	0xFDF
  4004                           postinc2	equ	0xFDE
  4005                           postdec2	equ	0xFDD
  4006                           fsr2h	equ	0xFDA
  4007                           fsr2l	equ	0xFD9
  4008                           status	equ	0xFD8
  4009                           
  4010 ;; *************** function _delayMicroseconds *****************
  4011 ;; Defined at:
  4012 ;;		line 208 in file "../test/../include/../src/arduim.c"
  4013 ;; Parameters:    Size  Location     Type
  4014 ;;  time            2   14[COMRAM] unsigned int 
  4015 ;; Auto vars:     Size  Location     Type
  4016 ;;  i               2   16[COMRAM] unsigned int 
  4017 ;; Return value:  Size  Location     Type
  4018 ;;		None               void
  4019 ;; Registers used:
  4020 ;;		wreg, status,2, status,0
  4021 ;; Tracked objects:
  4022 ;;		On entry : 0/0
  4023 ;;		On exit  : 0/0
  4024 ;;		Unchanged: 0/0
  4025 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4026 ;;      Params:         2       0       0       0       0       0       0       0       0
  4027 ;;      Locals:         2       0       0       0       0       0       0       0       0
  4028 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4029 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4030 ;;Total ram usage:        4 bytes
  4031 ;; Hardware stack levels used:    1
  4032 ;; Hardware stack levels required when called:    2
  4033 ;; This function calls:
  4034 ;;		Nothing
  4035 ;; This function is called by:
  4036 ;;		_lcd_cmd
  4037 ;;		_lcd_data
  4038 ;; This function uses a non-reentrant model
  4039 ;;
  4040                           
  4041                           	psect	text20
  4042  001884                     __ptext20:
  4043                           	opt stack 0
  4044  001884                     _delayMicroseconds:
  4045                           	opt stack 25
  4046                           
  4047                           ;arduim.c: 210: unsigned int i;
  4048                           ;arduim.c: 211: for ( ; time > 0; time--)
  4049                           
  4050                           ;incstack = 0
  4051  001884  5010               	movf	delayMicroseconds@time+1,w,c
  4052  001886  100F               	iorwf	delayMicroseconds@time,w,c
  4053  001888  B4D8               	btfsc	status,2,c
  4054  00188A  D012               	goto	l254
  4055                           
  4056                           ;arduim.c: 212: for (i=0 ; i < ( (unsigned int) ((48000000UL /4.0) /1000000.0 ) ); i++)
  4057  00188C  0E00               	movlw	0
  4058  00188E  6E12               	movwf	delayMicroseconds@i+1,c
  4059  001890  0E00               	movlw	0
  4060  001892  6E11               	movwf	delayMicroseconds@i,c
  4061  001894  0E0C               	movlw	12
  4062  001896  5C11               	subwf	delayMicroseconds@i,w,c
  4063  001898  0E00               	movlw	0
  4064  00189A  5812               	subwfb	delayMicroseconds@i+1,w,c
  4065  00189C  B0D8               	btfsc	status,0,c
  4066  00189E  D004               	goto	l2340
  4067                           
  4068                           ;arduim.c: 213: _delay(1);
  4069  0018A0  F000               	nop	
  4070  0018A2  4A11               	infsnz	delayMicroseconds@i,f,c
  4071  0018A4  2A12               	incf	delayMicroseconds@i+1,f,c
  4072  0018A6  D7F6               	goto	L6
  4073  0018A8                     l2340:
  4074  0018A8  060F               	decf	delayMicroseconds@time,f,c
  4075  0018AA  A0D8               	btfss	status,0,c
  4076  0018AC  0610               	decf	delayMicroseconds@time+1,f,c
  4077  0018AE  D7EA               	goto	_delayMicroseconds
  4078  0018B0                     l254:
  4079  0018B0  0012               	return	
  4080  0018B2                     __end_of_delayMicroseconds:
  4081                           	opt stack 0
  4082                           tosu	equ	0xFFF
  4083                           tosh	equ	0xFFE
  4084                           tosl	equ	0xFFD
  4085                           pclath	equ	0xFFA
  4086                           tblptru	equ	0xFF8
  4087                           tblptrh	equ	0xFF7
  4088                           tblptrl	equ	0xFF6
  4089                           tablat	equ	0xFF5
  4090                           prodh	equ	0xFF4
  4091                           prodl	equ	0xFF3
  4092                           intcon	equ	0xFF2
  4093                           intcon2	equ	0xFF1
  4094                           intcon3	equ	0xFF0
  4095                           indf0	equ	0xFEF
  4096                           postinc0	equ	0xFEE
  4097                           postdec0	equ	0xFED
  4098                           fsr0h	equ	0xFEA
  4099                           fsr0l	equ	0xFE9
  4100                           wreg	equ	0xFE8
  4101                           postinc1	equ	0xFE6
  4102                           postdec1	equ	0xFE5
  4103                           fsr1l	equ	0xFE1
  4104                           indf2	equ	0xFDF
  4105                           postinc2	equ	0xFDE
  4106                           postdec2	equ	0xFDD
  4107                           fsr2h	equ	0xFDA
  4108                           fsr2l	equ	0xFD9
  4109                           status	equ	0xFD8
  4110                           
  4111 ;; *************** function _digitalRead *****************
  4112 ;; Defined at:
  4113 ;;		line 57 in file "../test/../include/../src/arduim.c"
  4114 ;; Parameters:    Size  Location     Type
  4115 ;;  pin             1    wreg     unsigned char 
  4116 ;; Auto vars:     Size  Location     Type
  4117 ;;  pin             1   17[COMRAM] unsigned char 
  4118 ;; Return value:  Size  Location     Type
  4119 ;;                  2   14[COMRAM] int 
  4120 ;; Registers used:
  4121 ;;		wreg, status,2, status,0
  4122 ;; Tracked objects:
  4123 ;;		On entry : 0/0
  4124 ;;		On exit  : 0/0
  4125 ;;		Unchanged: 0/0
  4126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4127 ;;      Params:         2       0       0       0       0       0       0       0       0
  4128 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4129 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4130 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4131 ;;Total ram usage:        4 bytes
  4132 ;; Hardware stack levels used:    1
  4133 ;; Hardware stack levels required when called:    2
  4134 ;; This function calls:
  4135 ;;		Nothing
  4136 ;; This function is called by:
  4137 ;;		_loop
  4138 ;; This function uses a non-reentrant model
  4139 ;;
  4140                           
  4141                           	psect	text21
  4142  000F54                     __ptext21:
  4143                           	opt stack 0
  4144  000F54                     _digitalRead:
  4145                           	opt stack 27
  4146                           
  4147                           ;incstack = 0
  4148                           ;digitalRead@pin stored from wreg
  4149  000F54  6E12               	movwf	digitalRead@pin,c
  4150                           
  4151                           ;arduim.c: 59: if (pin > 31)
  4152  000F56  0E1F               	movlw	31
  4153  000F58  6412               	cpfsgt	digitalRead@pin,c
  4154  000F5A  D06A               	goto	l2646
  4155  000F5C  D066               	goto	l179
  4156  000F5E                     l2516:
  4157  000F5E  A080               	btfss	3968,0,c	;volatile
  4158  000F60  D062               	goto	u4030
  4159  000F62                     L8:
  4160  000F62  6A11               	clrf	??_digitalRead& (0+255),c
  4161  000F64  2A11               	incf	??_digitalRead& (0+255),f,c
  4162  000F66                     u3728:
  4163  000F66  5011               	movf	??_digitalRead,w,c
  4164  000F68  6E0F               	movwf	?_digitalRead,c
  4165  000F6A  6A10               	clrf	?_digitalRead+1,c
  4166  000F6C  D0C3               	goto	l145
  4167  000F6E                     l2520:
  4168  000F6E  A280               	btfss	3968,1,c	;volatile
  4169  000F70  D05A               	goto	u4030
  4170  000F72  D7F7               	goto	L8
  4171  000F74                     l2524:
  4172  000F74  A480               	btfss	3968,2,c	;volatile
  4173  000F76  D057               	goto	u4030
  4174  000F78  D7F4               	goto	L8
  4175  000F7A                     l2528:
  4176  000F7A  A680               	btfss	3968,3,c	;volatile
  4177  000F7C  D054               	goto	u4030
  4178  000F7E  D7F1               	goto	L8
  4179  000F80                     l2532:
  4180  000F80  A880               	btfss	3968,4,c	;volatile
  4181  000F82  D051               	goto	u4030
  4182  000F84  D7EE               	goto	L8
  4183  000F86                     l2536:
  4184  000F86  AA80               	btfss	3968,5,c	;volatile
  4185  000F88  D04E               	goto	u4030
  4186  000F8A  D7EB               	goto	L8
  4187  000F8C                     l2540:
  4188  000F8C  A081               	btfss	3969,0,c	;volatile
  4189  000F8E  D04B               	goto	u4030
  4190  000F90  D7E8               	goto	L8
  4191  000F92                     l2544:
  4192  000F92  A281               	btfss	3969,1,c	;volatile
  4193  000F94  D048               	goto	u4030
  4194  000F96  D7E5               	goto	L8
  4195  000F98                     l2548:
  4196  000F98  A481               	btfss	3969,2,c	;volatile
  4197  000F9A  D045               	goto	u4030
  4198  000F9C  D7E2               	goto	L8
  4199  000F9E                     l2552:
  4200  000F9E  A681               	btfss	3969,3,c	;volatile
  4201  000FA0  D042               	goto	u4030
  4202  000FA2  D7DF               	goto	L8
  4203  000FA4                     l2556:
  4204  000FA4  A881               	btfss	3969,4,c	;volatile
  4205  000FA6  D03F               	goto	u4030
  4206  000FA8  D7DC               	goto	L8
  4207  000FAA                     l2560:
  4208  000FAA  AA81               	btfss	3969,5,c	;volatile
  4209  000FAC  D03C               	goto	u4030
  4210  000FAE  D7D9               	goto	L8
  4211  000FB0                     l2564:
  4212  000FB0  AC81               	btfss	3969,6,c	;volatile
  4213  000FB2  D039               	goto	u4030
  4214  000FB4  D7D6               	goto	L8
  4215  000FB6                     l2568:
  4216  000FB6  AE81               	btfss	3969,7,c	;volatile
  4217  000FB8  D036               	goto	u4030
  4218  000FBA  D7D3               	goto	L8
  4219  000FBC                     l2572:
  4220  000FBC  A082               	btfss	3970,0,c	;volatile
  4221  000FBE  D033               	goto	u4030
  4222  000FC0  D7D0               	goto	L8
  4223  000FC2                     l2576:
  4224  000FC2  A282               	btfss	3970,1,c	;volatile
  4225  000FC4  D030               	goto	u4030
  4226  000FC6  D7CD               	goto	L8
  4227  000FC8                     l2580:
  4228  000FC8  A482               	btfss	3970,2,c	;volatile
  4229  000FCA  D02D               	goto	u4030
  4230  000FCC  D7CA               	goto	L8
  4231  000FCE                     l2584:
  4232  000FCE  A882               	btfss	3970,4,c	;volatile
  4233  000FD0  D02A               	goto	u4030
  4234  000FD2  D7C7               	goto	L8
  4235  000FD4                     l2588:
  4236  000FD4  AA82               	btfss	3970,5,c	;volatile
  4237  000FD6  D027               	goto	u4030
  4238  000FD8  D7C4               	goto	L8
  4239  000FDA                     l2592:
  4240  000FDA  AC82               	btfss	3970,6,c	;volatile
  4241  000FDC  D024               	goto	u4030
  4242  000FDE  D7C1               	goto	L8
  4243  000FE0                     l2596:
  4244  000FE0  AE82               	btfss	3970,7,c	;volatile
  4245  000FE2  D021               	goto	u4030
  4246  000FE4  D7BE               	goto	L8
  4247  000FE6                     l2600:
  4248  000FE6  A083               	btfss	3971,0,c	;volatile
  4249  000FE8  D01E               	goto	u4030
  4250  000FEA  D7BB               	goto	L8
  4251  000FEC                     l2604:
  4252  000FEC  A283               	btfss	3971,1,c	;volatile
  4253  000FEE  D01B               	goto	u4030
  4254  000FF0  D7B8               	goto	L8
  4255  000FF2                     l2608:
  4256  000FF2  A483               	btfss	3971,2,c	;volatile
  4257  000FF4  D018               	goto	u4030
  4258  000FF6  D7B5               	goto	L8
  4259  000FF8                     l2612:
  4260  000FF8  A683               	btfss	3971,3,c	;volatile
  4261  000FFA  D015               	goto	u4030
  4262  000FFC  D7B2               	goto	L8
  4263  000FFE                     l2616:
  4264  000FFE  A883               	btfss	3971,4,c	;volatile
  4265  001000  D012               	goto	u4030
  4266  001002  D7AF               	goto	L8
  4267  001004                     l2620:
  4268  001004  AA83               	btfss	3971,5,c	;volatile
  4269  001006  D00F               	goto	u4030
  4270  001008  D7AC               	goto	L8
  4271  00100A                     l2624:
  4272  00100A  AC83               	btfss	3971,6,c	;volatile
  4273  00100C  D00C               	goto	u4030
  4274  00100E  D7A9               	goto	L8
  4275  001010                     l2628:
  4276  001010  AE83               	btfss	3971,7,c	;volatile
  4277  001012  D009               	goto	u4030
  4278  001014  D7A6               	goto	L8
  4279  001016                     l2632:
  4280  001016  A084               	btfss	3972,0,c	;volatile
  4281  001018  D006               	goto	u4030
  4282  00101A  D7A3               	goto	L8
  4283  00101C                     l2636:
  4284  00101C  A284               	btfss	3972,1,c	;volatile
  4285  00101E  D003               	goto	u4030
  4286  001020  D7A0               	goto	L8
  4287  001022                     l2640:
  4288  001022  B484               	btfsc	3972,2,c	;volatile
  4289  001024  D79E               	goto	L8
  4290  001026                     u4030:
  4291  001026  6A11               	clrf	??_digitalRead& (0+255),c
  4292  001028  D79E               	goto	u3728
  4293  00102A                     l179:
  4294  00102A  680F               	setf	?_digitalRead,c
  4295  00102C  6810               	setf	?_digitalRead+1,c
  4296  00102E  D062               	goto	l145
  4297  001030                     l2646:
  4298  001030  5012               	movf	digitalRead@pin,w,c
  4299                           
  4300                           ; Switch size 1, requested type "space"
  4301                           ; Number of cases is 32, Range of values is 0 to 31
  4302                           ; switch strategies available:
  4303                           ; Name         Instructions Cycles
  4304                           ; simple_byte           97    49 (average)
  4305                           ;	Chosen strategy is simple_byte
  4306  001032  0A00               	xorlw	0	; case 0
  4307  001034  B4D8               	btfsc	status,2,c
  4308  001036  D793               	goto	l2516
  4309  001038  0A01               	xorlw	1	; case 1
  4310  00103A  B4D8               	btfsc	status,2,c
  4311  00103C  D798               	goto	l2520
  4312  00103E  0A03               	xorlw	3	; case 2
  4313  001040  B4D8               	btfsc	status,2,c
  4314  001042  D798               	goto	l2524
  4315  001044  0A01               	xorlw	1	; case 3
  4316  001046  B4D8               	btfsc	status,2,c
  4317  001048  D798               	goto	l2528
  4318  00104A  0A07               	xorlw	7	; case 4
  4319  00104C  B4D8               	btfsc	status,2,c
  4320  00104E  D798               	goto	l2532
  4321  001050  0A01               	xorlw	1	; case 5
  4322  001052  B4D8               	btfsc	status,2,c
  4323  001054  D798               	goto	l2536
  4324  001056  0A03               	xorlw	3	; case 6
  4325  001058  B4D8               	btfsc	status,2,c
  4326  00105A  D798               	goto	l2540
  4327  00105C  0A01               	xorlw	1	; case 7
  4328  00105E  B4D8               	btfsc	status,2,c
  4329  001060  D798               	goto	l2544
  4330  001062  0A0F               	xorlw	15	; case 8
  4331  001064  B4D8               	btfsc	status,2,c
  4332  001066  D798               	goto	l2548
  4333  001068  0A01               	xorlw	1	; case 9
  4334  00106A  B4D8               	btfsc	status,2,c
  4335  00106C  D798               	goto	l2552
  4336  00106E  0A03               	xorlw	3	; case 10
  4337  001070  B4D8               	btfsc	status,2,c
  4338  001072  D798               	goto	l2556
  4339  001074  0A01               	xorlw	1	; case 11
  4340  001076  B4D8               	btfsc	status,2,c
  4341  001078  D798               	goto	l2560
  4342  00107A  0A07               	xorlw	7	; case 12
  4343  00107C  B4D8               	btfsc	status,2,c
  4344  00107E  D798               	goto	l2564
  4345  001080  0A01               	xorlw	1	; case 13
  4346  001082  B4D8               	btfsc	status,2,c
  4347  001084  D798               	goto	l2568
  4348  001086  0A03               	xorlw	3	; case 14
  4349  001088  B4D8               	btfsc	status,2,c
  4350  00108A  D798               	goto	l2572
  4351  00108C  0A01               	xorlw	1	; case 15
  4352  00108E  B4D8               	btfsc	status,2,c
  4353  001090  D798               	goto	l2576
  4354  001092  0A1F               	xorlw	31	; case 16
  4355  001094  B4D8               	btfsc	status,2,c
  4356  001096  D798               	goto	l2580
  4357  001098  0A01               	xorlw	1	; case 17
  4358  00109A  B4D8               	btfsc	status,2,c
  4359  00109C  D798               	goto	l2584
  4360  00109E  0A03               	xorlw	3	; case 18
  4361  0010A0  B4D8               	btfsc	status,2,c
  4362  0010A2  D798               	goto	l2588
  4363  0010A4  0A01               	xorlw	1	; case 19
  4364  0010A6  B4D8               	btfsc	status,2,c
  4365  0010A8  D798               	goto	l2592
  4366  0010AA  0A07               	xorlw	7	; case 20
  4367  0010AC  B4D8               	btfsc	status,2,c
  4368  0010AE  D798               	goto	l2596
  4369  0010B0  0A01               	xorlw	1	; case 21
  4370  0010B2  B4D8               	btfsc	status,2,c
  4371  0010B4  D798               	goto	l2600
  4372  0010B6  0A03               	xorlw	3	; case 22
  4373  0010B8  B4D8               	btfsc	status,2,c
  4374  0010BA  D798               	goto	l2604
  4375  0010BC  0A01               	xorlw	1	; case 23
  4376  0010BE  B4D8               	btfsc	status,2,c
  4377  0010C0  D798               	goto	l2608
  4378  0010C2  0A0F               	xorlw	15	; case 24
  4379  0010C4  B4D8               	btfsc	status,2,c
  4380  0010C6  D798               	goto	l2612
  4381  0010C8  0A01               	xorlw	1	; case 25
  4382  0010CA  B4D8               	btfsc	status,2,c
  4383  0010CC  D798               	goto	l2616
  4384  0010CE  0A03               	xorlw	3	; case 26
  4385  0010D0  B4D8               	btfsc	status,2,c
  4386  0010D2  D798               	goto	l2620
  4387  0010D4  0A01               	xorlw	1	; case 27
  4388  0010D6  B4D8               	btfsc	status,2,c
  4389  0010D8  D798               	goto	l2624
  4390  0010DA  0A07               	xorlw	7	; case 28
  4391  0010DC  B4D8               	btfsc	status,2,c
  4392  0010DE  D798               	goto	l2628
  4393  0010E0  0A01               	xorlw	1	; case 29
  4394  0010E2  B4D8               	btfsc	status,2,c
  4395  0010E4  D798               	goto	l2632
  4396  0010E6  0A03               	xorlw	3	; case 30
  4397  0010E8  B4D8               	btfsc	status,2,c
  4398  0010EA  D798               	goto	l2636
  4399  0010EC  0A01               	xorlw	1	; case 31
  4400  0010EE  B4D8               	btfsc	status,2,c
  4401  0010F0  D798               	goto	l2640
  4402  0010F2  D79B               	goto	l179
  4403  0010F4                     l145:
  4404  0010F4  0012               	return	
  4405  0010F6                     __end_of_digitalRead:
  4406                           	opt stack 0
  4407                           tosu	equ	0xFFF
  4408                           tosh	equ	0xFFE
  4409                           tosl	equ	0xFFD
  4410                           pclath	equ	0xFFA
  4411                           tblptru	equ	0xFF8
  4412                           tblptrh	equ	0xFF7
  4413                           tblptrl	equ	0xFF6
  4414                           tablat	equ	0xFF5
  4415                           prodh	equ	0xFF4
  4416                           prodl	equ	0xFF3
  4417                           intcon	equ	0xFF2
  4418                           intcon2	equ	0xFF1
  4419                           intcon3	equ	0xFF0
  4420                           indf0	equ	0xFEF
  4421                           postinc0	equ	0xFEE
  4422                           postdec0	equ	0xFED
  4423                           fsr0h	equ	0xFEA
  4424                           fsr0l	equ	0xFE9
  4425                           wreg	equ	0xFE8
  4426                           postinc1	equ	0xFE6
  4427                           postdec1	equ	0xFE5
  4428                           fsr1l	equ	0xFE1
  4429                           indf2	equ	0xFDF
  4430                           postinc2	equ	0xFDE
  4431                           postdec2	equ	0xFDD
  4432                           fsr2h	equ	0xFDA
  4433                           fsr2l	equ	0xFD9
  4434                           status	equ	0xFD8
  4435                           
  4436 ;; *************** function _delay *****************
  4437 ;; Defined at:
  4438 ;;		line 202 in file "../test/../include/../src/arduim.c"
  4439 ;; Parameters:    Size  Location     Type
  4440 ;;  time            4   15[COMRAM] unsigned long 
  4441 ;; Auto vars:     Size  Location     Type
  4442 ;;		None
  4443 ;; Return value:  Size  Location     Type
  4444 ;;		None               void
  4445 ;; Registers used:
  4446 ;;		wreg, status,2, status,0, cstack
  4447 ;; Tracked objects:
  4448 ;;		On entry : 0/0
  4449 ;;		On exit  : 0/0
  4450 ;;		Unchanged: 0/0
  4451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4452 ;;      Params:         4       0       0       0       0       0       0       0       0
  4453 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4454 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4455 ;;      Totals:         4       0       0       0       0       0       0       0       0
  4456 ;;Total ram usage:        4 bytes
  4457 ;; Hardware stack levels used:    1
  4458 ;; Hardware stack levels required when called:    3
  4459 ;; This function calls:
  4460 ;;		_Delay1KTCYx
  4461 ;; This function is called by:
  4462 ;;		_lcd_clear
  4463 ;;		_loop
  4464 ;; This function uses a non-reentrant model
  4465 ;;
  4466                           
  4467                           	psect	text22
  4468  0018DC                     __ptext22:
  4469                           	opt stack 0
  4470  0018DC                     _delay:
  4471                           	opt stack 23
  4472                           
  4473                           ;arduim.c: 204: for ( ; time > 0; time--)
  4474                           
  4475                           ;incstack = 0
  4476  0018DC  5013               	movf	delay@time+3,w,c
  4477  0018DE  1010               	iorwf	delay@time,w,c
  4478  0018E0  1011               	iorwf	delay@time+1,w,c
  4479  0018E2  1012               	iorwf	delay@time+2,w,c
  4480  0018E4  B4D8               	btfsc	status,2,c
  4481  0018E6  D009               	goto	l247
  4482                           
  4483                           ;arduim.c: 205: Delay1KTCYx(( (unsigned int) ((48000000UL /4.0) /1000000.0 ) ));
  4484  0018E8  0E0C               	movlw	12
  4485  0018EA  EC8C  F00C         	call	_Delay1KTCYx
  4486  0018EE  0610               	decf	delay@time,f,c
  4487  0018F0  0E00               	movlw	0
  4488  0018F2  5A11               	subwfb	delay@time+1,f,c
  4489  0018F4  5A12               	subwfb	delay@time+2,f,c
  4490  0018F6  5A13               	subwfb	delay@time+3,f,c
  4491  0018F8  D7F1               	goto	_delay
  4492  0018FA                     l247:
  4493  0018FA  0012               	return	
  4494  0018FC                     __end_of_delay:
  4495                           	opt stack 0
  4496                           tosu	equ	0xFFF
  4497                           tosh	equ	0xFFE
  4498                           tosl	equ	0xFFD
  4499                           pclath	equ	0xFFA
  4500                           tblptru	equ	0xFF8
  4501                           tblptrh	equ	0xFF7
  4502                           tblptrl	equ	0xFF6
  4503                           tablat	equ	0xFF5
  4504                           prodh	equ	0xFF4
  4505                           prodl	equ	0xFF3
  4506                           intcon	equ	0xFF2
  4507                           intcon2	equ	0xFF1
  4508                           intcon3	equ	0xFF0
  4509                           indf0	equ	0xFEF
  4510                           postinc0	equ	0xFEE
  4511                           postdec0	equ	0xFED
  4512                           fsr0h	equ	0xFEA
  4513                           fsr0l	equ	0xFE9
  4514                           wreg	equ	0xFE8
  4515                           postinc1	equ	0xFE6
  4516                           postdec1	equ	0xFE5
  4517                           fsr1l	equ	0xFE1
  4518                           indf2	equ	0xFDF
  4519                           postinc2	equ	0xFDE
  4520                           postdec2	equ	0xFDD
  4521                           fsr2h	equ	0xFDA
  4522                           fsr2l	equ	0xFD9
  4523                           status	equ	0xFD8
  4524                           
  4525 ;; *************** function _Delay1KTCYx *****************
  4526 ;; Defined at:
  4527 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\pic18\d1ktcyx.c"
  4528 ;; Parameters:    Size  Location     Type
  4529 ;;  unit            1    wreg     unsigned char 
  4530 ;; Auto vars:     Size  Location     Type
  4531 ;;  unit            1   14[COMRAM] unsigned char 
  4532 ;; Return value:  Size  Location     Type
  4533 ;;		None               void
  4534 ;; Registers used:
  4535 ;;		wreg
  4536 ;; Tracked objects:
  4537 ;;		On entry : 0/0
  4538 ;;		On exit  : 0/0
  4539 ;;		Unchanged: 0/0
  4540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4541 ;;      Params:         0       0       0       0       0       0       0       0       0
  4542 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4543 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4544 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4545 ;;Total ram usage:        1 bytes
  4546 ;; Hardware stack levels used:    1
  4547 ;; Hardware stack levels required when called:    2
  4548 ;; This function calls:
  4549 ;;		Nothing
  4550 ;; This function is called by:
  4551 ;;		_delay
  4552 ;; This function uses a non-reentrant model
  4553 ;;
  4554                           
  4555                           	psect	text23
  4556  001918                     __ptext23:
  4557                           	opt stack 0
  4558  001918                     _Delay1KTCYx:
  4559                           	opt stack 23
  4560                           
  4561                           ;incstack = 0
  4562                           ;Delay1KTCYx@unit stored from wreg
  4563  001918  6E0F               	movwf	Delay1KTCYx@unit,c
  4564  00191A                     l775:
  4565  00191A  0EFA               	movlw	250
  4566  00191C                     u4157:
  4567  00191C  F000               	nop	
  4568  00191E  2EE8               	decfsz	wreg,f,c
  4569  001920  D7FD               	goto	u4157
  4570  001922  2E0F               	decfsz	Delay1KTCYx@unit,f,c
  4571  001924  D7FA               	goto	l775
  4572  001926  0012               	return	
  4573  001928                     __end_of_Delay1KTCYx:
  4574                           	opt stack 0
  4575                           tosu	equ	0xFFF
  4576                           tosh	equ	0xFFE
  4577                           tosl	equ	0xFFD
  4578                           pclath	equ	0xFFA
  4579                           tblptru	equ	0xFF8
  4580                           tblptrh	equ	0xFF7
  4581                           tblptrl	equ	0xFF6
  4582                           tablat	equ	0xFF5
  4583                           prodh	equ	0xFF4
  4584                           prodl	equ	0xFF3
  4585                           intcon	equ	0xFF2
  4586                           intcon2	equ	0xFF1
  4587                           intcon3	equ	0xFF0
  4588                           indf0	equ	0xFEF
  4589                           postinc0	equ	0xFEE
  4590                           postdec0	equ	0xFED
  4591                           fsr0h	equ	0xFEA
  4592                           fsr0l	equ	0xFE9
  4593                           wreg	equ	0xFE8
  4594                           postinc1	equ	0xFE6
  4595                           postdec1	equ	0xFE5
  4596                           fsr1l	equ	0xFE1
  4597                           indf2	equ	0xFDF
  4598                           postinc2	equ	0xFDE
  4599                           postdec2	equ	0xFDD
  4600                           fsr2h	equ	0xFDA
  4601                           fsr2l	equ	0xFD9
  4602                           status	equ	0xFD8
  4603                           
  4604 ;; *************** function ___lmul *****************
  4605 ;; Defined at:
  4606 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.32\sources\common\Umul32.c"
  4607 ;; Parameters:    Size  Location     Type
  4608 ;;  multiplier      4   14[COMRAM] unsigned long 
  4609 ;;  multiplicand    4   18[COMRAM] unsigned long 
  4610 ;; Auto vars:     Size  Location     Type
  4611 ;;  product         4   22[COMRAM] unsigned long 
  4612 ;; Return value:  Size  Location     Type
  4613 ;;                  4   14[COMRAM] unsigned long 
  4614 ;; Registers used:
  4615 ;;		wreg, status,2, status,0
  4616 ;; Tracked objects:
  4617 ;;		On entry : 0/0
  4618 ;;		On exit  : 0/0
  4619 ;;		Unchanged: 0/0
  4620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4621 ;;      Params:         8       0       0       0       0       0       0       0       0
  4622 ;;      Locals:         4       0       0       0       0       0       0       0       0
  4623 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4624 ;;      Totals:        12       0       0       0       0       0       0       0       0
  4625 ;;Total ram usage:       12 bytes
  4626 ;; Hardware stack levels used:    1
  4627 ;; Hardware stack levels required when called:    2
  4628 ;; This function calls:
  4629 ;;		Nothing
  4630 ;; This function is called by:
  4631 ;;		_loop
  4632 ;; This function uses a non-reentrant model
  4633 ;;
  4634                           
  4635                           	psect	text24
  4636  0016BE                     __ptext24:
  4637                           	opt stack 0
  4638  0016BE                     ___lmul:
  4639                           	opt stack 27
  4640                           
  4641                           ;incstack = 0
  4642  0016BE  0E00               	movlw	0
  4643  0016C0  6E17               	movwf	___lmul@product,c
  4644  0016C2  0E00               	movlw	0
  4645  0016C4  6E18               	movwf	___lmul@product+1,c
  4646  0016C6  0E00               	movlw	0
  4647  0016C8  6E19               	movwf	___lmul@product+2,c
  4648  0016CA  0E00               	movlw	0
  4649  0016CC  6E1A               	movwf	___lmul@product+3,c
  4650  0016CE                     l2670:
  4651  0016CE  A00F               	btfss	___lmul@multiplier,0,c
  4652  0016D0  D008               	goto	l2674
  4653  0016D2  5013               	movf	___lmul@multiplicand,w,c
  4654  0016D4  2617               	addwf	___lmul@product,f,c
  4655  0016D6  5014               	movf	___lmul@multiplicand+1,w,c
  4656  0016D8  2218               	addwfc	___lmul@product+1,f,c
  4657  0016DA  5015               	movf	___lmul@multiplicand+2,w,c
  4658  0016DC  2219               	addwfc	___lmul@product+2,f,c
  4659  0016DE  5016               	movf	___lmul@multiplicand+3,w,c
  4660  0016E0  221A               	addwfc	___lmul@product+3,f,c
  4661  0016E2                     l2674:
  4662  0016E2  90D8               	bcf	status,0,c
  4663  0016E4  3613               	rlcf	___lmul@multiplicand,f,c
  4664  0016E6  3614               	rlcf	___lmul@multiplicand+1,f,c
  4665  0016E8  3615               	rlcf	___lmul@multiplicand+2,f,c
  4666  0016EA  3616               	rlcf	___lmul@multiplicand+3,f,c
  4667  0016EC  90D8               	bcf	status,0,c
  4668  0016EE  3212               	rrcf	___lmul@multiplier+3,f,c
  4669  0016F0  3211               	rrcf	___lmul@multiplier+2,f,c
  4670  0016F2  3210               	rrcf	___lmul@multiplier+1,f,c
  4671  0016F4  320F               	rrcf	___lmul@multiplier,f,c
  4672  0016F6  5012               	movf	___lmul@multiplier+3,w,c
  4673  0016F8  100F               	iorwf	___lmul@multiplier,w,c
  4674  0016FA  1010               	iorwf	___lmul@multiplier+1,w,c
  4675  0016FC  1011               	iorwf	___lmul@multiplier+2,w,c
  4676  0016FE  A4D8               	btfss	status,2,c
  4677  001700  D7E6               	goto	l2670
  4678  001702  C017  F00F         	movff	___lmul@product,?___lmul
  4679  001706  C018  F010         	movff	___lmul@product+1,?___lmul+1
  4680  00170A  C019  F011         	movff	___lmul@product+2,?___lmul+2
  4681  00170E  C01A  F012         	movff	___lmul@product+3,?___lmul+3
  4682  001712  0012               	return	
  4683  001714                     __end_of___lmul:
  4684                           	opt stack 0
  4685                           tosu	equ	0xFFF
  4686                           tosh	equ	0xFFE
  4687                           tosl	equ	0xFFD
  4688                           pclath	equ	0xFFA
  4689                           tblptru	equ	0xFF8
  4690                           tblptrh	equ	0xFF7
  4691                           tblptrl	equ	0xFF6
  4692                           tablat	equ	0xFF5
  4693                           prodh	equ	0xFF4
  4694                           prodl	equ	0xFF3
  4695                           intcon	equ	0xFF2
  4696                           intcon2	equ	0xFF1
  4697                           intcon3	equ	0xFF0
  4698                           indf0	equ	0xFEF
  4699                           postinc0	equ	0xFEE
  4700                           postdec0	equ	0xFED
  4701                           fsr0h	equ	0xFEA
  4702                           fsr0l	equ	0xFE9
  4703                           wreg	equ	0xFE8
  4704                           postinc1	equ	0xFE6
  4705                           postdec1	equ	0xFE5
  4706                           fsr1l	equ	0xFE1
  4707                           indf2	equ	0xFDF
  4708                           postinc2	equ	0xFDE
  4709                           postdec2	equ	0xFDD
  4710                           fsr2h	equ	0xFDA
  4711                           fsr2l	equ	0xFD9
  4712                           status	equ	0xFD8
  4713                           
  4714 ;; *************** function _ArduimInterruptHandler *****************
  4715 ;; Defined at:
  4716 ;;		line 295 in file "../test/../include/../src/arduim.c"
  4717 ;; Parameters:    Size  Location     Type
  4718 ;;		None
  4719 ;; Auto vars:     Size  Location     Type
  4720 ;;		None
  4721 ;; Return value:  Size  Location     Type
  4722 ;;		None               void
  4723 ;; Registers used:
  4724 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclat, tosl, cstack
  4725 ;; Tracked objects:
  4726 ;;		On entry : 0/0
  4727 ;;		On exit  : 0/0
  4728 ;;		Unchanged: 0/0
  4729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4730 ;;      Params:         0       0       0       0       0       0       0       0       0
  4731 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4732 ;;      Temps:         14       0       0       0       0       0       0       0       0
  4733 ;;      Totals:        14       0       0       0       0       0       0       0       0
  4734 ;;Total ram usage:       14 bytes
  4735 ;; Hardware stack levels used:    1
  4736 ;; Hardware stack levels required when called:    1
  4737 ;; This function calls:
  4738 ;;		Absolute function
  4739 ;;		_counter
  4740 ;; This function is called by:
  4741 ;;		Interrupt level 2
  4742 ;; This function uses a non-reentrant model
  4743 ;;
  4744                           
  4745                           	psect	intcode
  4746  000808                     __pintcode:
  4747                           	opt stack 0
  4748  000808                     _ArduimInterruptHandler:
  4749                           	opt stack 23
  4750                           
  4751                           ;incstack = 0
  4752  000808  CFFA F001          	movff	pclath,??_ArduimInterruptHandler
  4753  00080C  CFFB F002          	movff	pclatu,??_ArduimInterruptHandler+1
  4754  000810  CFE9 F003          	movff	fsr0l,??_ArduimInterruptHandler+2
  4755  000814  ED74  F009         	call	int_func,f	;refresh shadow registers
  4756                           tosu	equ	0xFFF
  4757                           tosh	equ	0xFFE
  4758                           tosl	equ	0xFFD
  4759                           pclatu	equ	0xFFB
  4760                           pclath	equ	0xFFA
  4761                           tblptru	equ	0xFF8
  4762                           tblptrh	equ	0xFF7
  4763                           tblptrl	equ	0xFF6
  4764                           tablat	equ	0xFF5
  4765                           prodh	equ	0xFF4
  4766                           prodl	equ	0xFF3
  4767                           intcon	equ	0xFF2
  4768                           intcon2	equ	0xFF1
  4769                           intcon3	equ	0xFF0
  4770                           indf0	equ	0xFEF
  4771                           postinc0	equ	0xFEE
  4772                           postdec0	equ	0xFED
  4773                           fsr0h	equ	0xFEA
  4774                           fsr0l	equ	0xFE9
  4775                           wreg	equ	0xFE8
  4776                           postinc1	equ	0xFE6
  4777                           postdec1	equ	0xFE5
  4778                           fsr1l	equ	0xFE1
  4779                           indf2	equ	0xFDF
  4780                           postinc2	equ	0xFDE
  4781                           postdec2	equ	0xFDD
  4782                           fsr2h	equ	0xFDA
  4783                           fsr2l	equ	0xFD9
  4784                           status	equ	0xFD8
  4785                           
  4786                           	psect	intcode_body
  4787  0012E8                     __pintcode_body:
  4788                           	opt stack 23
  4789  0012E8                     int_func:
  4790                           	opt stack 23
  4791  0012E8  0006               	pop		; remove dummy address from shadow register refresh
  4792  0012EA  CFEA F004          	movff	fsr0h,??_ArduimInterruptHandler+3
  4793  0012EE  CFE1 F005          	movff	fsr1l,??_ArduimInterruptHandler+4
  4794  0012F2  CFE2 F006          	movff	fsr1h,??_ArduimInterruptHandler+5
  4795  0012F6  CFD9 F007          	movff	fsr2l,??_ArduimInterruptHandler+6
  4796  0012FA  CFDA F008          	movff	fsr2h,??_ArduimInterruptHandler+7
  4797  0012FE  CFF3 F009          	movff	prodl,??_ArduimInterruptHandler+8
  4798  001302  CFF4 F00A          	movff	prodh,??_ArduimInterruptHandler+9
  4799  001306  CFF6 F00B          	movff	tblptrl,??_ArduimInterruptHandler+10
  4800  00130A  CFF7 F00C          	movff	tblptrh,??_ArduimInterruptHandler+11
  4801  00130E  CFF8 F00D          	movff	tblptru,??_ArduimInterruptHandler+12
  4802  001312  CFF5 F00E          	movff	tablat,??_ArduimInterruptHandler+13
  4803                           
  4804                           ;arduim.c: 297: if (INTCONbits.INT0IF)
  4805  001316  A2F2               	btfss	intcon,1,c	;volatile
  4806  001318  D00D               	goto	i2l1786
  4807                           
  4808                           ;arduim.c: 298: {
  4809                           ;arduim.c: 299: INTCONbits.INT0IF = 0;
  4810  00131A  92F2               	bcf	intcon,1,c	;volatile
  4811                           
  4812                           ;arduim.c: 300: interrupt_list[0]();
  4813  00131C  D801               	call	i2u157_48
  4814  00131E  D00A               	goto	i2l1786
  4815  001320                     i2u157_48:
  4816  001320  0005               	push	
  4817  001322  6EFA               	movwf	pclath,c
  4818  001324  5047               	movf	_interrupt_list,w,c
  4819  001326  6EFD               	movwf	tosl,c
  4820  001328  5048               	movf	_interrupt_list+1,w,c
  4821  00132A  6EFE               	movwf	tosh,c
  4822  00132C  50F8               	movf	tblptru,w,c
  4823  00132E  6EFF               	movwf	tosu,c
  4824  001330  50FA               	movf	pclath,w,c
  4825  001332  0012               	return		;indir
  4826  001334                     i2l1786:
  4827                           
  4828                           ;arduim.c: 301: }
  4829                           ;arduim.c: 303: if (INTCON3bits.INT1IF)
  4830  001334  A0F0               	btfss	intcon3,0,c	;volatile
  4831  001336  D00F               	goto	i2l313
  4832                           
  4833                           ;arduim.c: 304: {
  4834                           ;arduim.c: 305: INTCON3bits.INT1IF = 0;
  4835  001338  90F0               	bcf	intcon3,0,c	;volatile
  4836                           
  4837                           ;arduim.c: 306: interrupt_list[1]();
  4838  00133A  EE20  F049         	lfsr	2,_interrupt_list+2
  4839  00133E  D801               	call	i2u159_48
  4840  001340  D00A               	goto	i2l313
  4841  001342                     i2u159_48:
  4842  001342  0005               	push	
  4843  001344  6EFA               	movwf	pclath,c
  4844  001346  50DE               	movf	postinc2,w,c
  4845  001348  6EFD               	movwf	tosl,c
  4846  00134A  50DE               	movf	postinc2,w,c
  4847  00134C  6EFE               	movwf	tosh,c
  4848  00134E  50F8               	movf	tblptru,w,c
  4849  001350  6EFF               	movwf	tosu,c
  4850  001352  50FA               	movf	pclath,w,c
  4851  001354  0012               	return		;indir
  4852  001356                     i2l313:
  4853  001356  C00E  FFF5         	movff	??_ArduimInterruptHandler+13,tablat
  4854  00135A  C00D  FFF8         	movff	??_ArduimInterruptHandler+12,tblptru
  4855  00135E  C00C  FFF7         	movff	??_ArduimInterruptHandler+11,tblptrh
  4856  001362  C00B  FFF6         	movff	??_ArduimInterruptHandler+10,tblptrl
  4857  001366  C00A  FFF4         	movff	??_ArduimInterruptHandler+9,prodh
  4858  00136A  C009  FFF3         	movff	??_ArduimInterruptHandler+8,prodl
  4859  00136E  C008  FFDA         	movff	??_ArduimInterruptHandler+7,fsr2h
  4860  001372  C007  FFD9         	movff	??_ArduimInterruptHandler+6,fsr2l
  4861  001376  C006  FFE2         	movff	??_ArduimInterruptHandler+5,fsr1h
  4862  00137A  C005  FFE1         	movff	??_ArduimInterruptHandler+4,fsr1l
  4863  00137E  C004  FFEA         	movff	??_ArduimInterruptHandler+3,fsr0h
  4864  001382  C003  FFE9         	movff	??_ArduimInterruptHandler+2,fsr0l
  4865  001386  C002  FFFB         	movff	??_ArduimInterruptHandler+1,pclatu
  4866  00138A  C001  FFFA         	movff	??_ArduimInterruptHandler,pclath
  4867  00138E  0011               	retfie		f
  4868  001390                     __end_of_ArduimInterruptHandler:
  4869                           	opt stack 0
  4870                           tosu	equ	0xFFF
  4871                           tosh	equ	0xFFE
  4872                           tosl	equ	0xFFD
  4873                           pclatu	equ	0xFFB
  4874                           pclath	equ	0xFFA
  4875                           tblptru	equ	0xFF8
  4876                           tblptrh	equ	0xFF7
  4877                           tblptrl	equ	0xFF6
  4878                           tablat	equ	0xFF5
  4879                           prodh	equ	0xFF4
  4880                           prodl	equ	0xFF3
  4881                           intcon	equ	0xFF2
  4882                           intcon2	equ	0xFF1
  4883                           intcon3	equ	0xFF0
  4884                           indf0	equ	0xFEF
  4885                           postinc0	equ	0xFEE
  4886                           postdec0	equ	0xFED
  4887                           fsr0h	equ	0xFEA
  4888                           fsr0l	equ	0xFE9
  4889                           wreg	equ	0xFE8
  4890                           postinc1	equ	0xFE6
  4891                           postdec1	equ	0xFE5
  4892                           fsr1h	equ	0xFE2
  4893                           fsr1l	equ	0xFE1
  4894                           indf2	equ	0xFDF
  4895                           postinc2	equ	0xFDE
  4896                           postdec2	equ	0xFDD
  4897                           fsr2h	equ	0xFDA
  4898                           fsr2l	equ	0xFD9
  4899                           status	equ	0xFD8
  4900                           
  4901 ;; *************** function _counter *****************
  4902 ;; Defined at:
  4903 ;;		line 9 in file "../test/test_tachometer.c"
  4904 ;; Parameters:    Size  Location     Type
  4905 ;;		None
  4906 ;; Auto vars:     Size  Location     Type
  4907 ;;		None
  4908 ;; Return value:  Size  Location     Type
  4909 ;;		None               void
  4910 ;; Registers used:
  4911 ;;		wreg, status,2, status,0
  4912 ;; Tracked objects:
  4913 ;;		On entry : 0/0
  4914 ;;		On exit  : 0/0
  4915 ;;		Unchanged: 0/0
  4916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4917 ;;      Params:         0       0       0       0       0       0       0       0       0
  4918 ;;      Locals:         0       0       0       0       0       0       0       0       0
  4919 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4920 ;;      Totals:         0       0       0       0       0       0       0       0       0
  4921 ;;Total ram usage:        0 bytes
  4922 ;; Hardware stack levels used:    1
  4923 ;; This function calls:
  4924 ;;		Nothing
  4925 ;; This function is called by:
  4926 ;;		_setup
  4927 ;;		_ArduimInterruptHandler
  4928 ;; This function uses a non-reentrant model
  4929 ;;
  4930                           
  4931                           	psect	text26
  4932  001946                     __ptext26:
  4933                           	opt stack 0
  4934  001946                     _counter:
  4935                           	opt stack 23
  4936                           
  4937                           ;test_tachometer.c: 11: count++;
  4938                           
  4939                           ;incstack = 0
  4940  001946  0E01               	movlw	1
  4941  001948  2643               	addwf	_count,f,c
  4942  00194A  0E00               	movlw	0
  4943  00194C  2244               	addwfc	_count+1,f,c
  4944  00194E  2245               	addwfc	_count+2,f,c
  4945  001950  2246               	addwfc	_count+3,f,c
  4946  001952  0012               	return	
  4947  001954                     __end_of_counter:
  4948                           	opt stack 0
  4949                           tosu	equ	0xFFF
  4950                           tosh	equ	0xFFE
  4951                           tosl	equ	0xFFD
  4952                           pclatu	equ	0xFFB
  4953                           pclath	equ	0xFFA
  4954                           tblptru	equ	0xFF8
  4955                           tblptrh	equ	0xFF7
  4956                           tblptrl	equ	0xFF6
  4957                           tablat	equ	0xFF5
  4958                           prodh	equ	0xFF4
  4959                           prodl	equ	0xFF3
  4960                           intcon	equ	0xFF2
  4961                           intcon2	equ	0xFF1
  4962                           intcon3	equ	0xFF0
  4963                           indf0	equ	0xFEF
  4964                           postinc0	equ	0xFEE
  4965                           postdec0	equ	0xFED
  4966                           fsr0h	equ	0xFEA
  4967                           fsr0l	equ	0xFE9
  4968                           wreg	equ	0xFE8
  4969                           postinc1	equ	0xFE6
  4970                           postdec1	equ	0xFE5
  4971                           fsr1h	equ	0xFE2
  4972                           fsr1l	equ	0xFE1
  4973                           indf2	equ	0xFDF
  4974                           postinc2	equ	0xFDE
  4975                           postdec2	equ	0xFDD
  4976                           fsr2h	equ	0xFDA
  4977                           fsr2l	equ	0xFD9
  4978                           status	equ	0xFD8
  4979                           tosu	equ	0xFFF
  4980                           tosh	equ	0xFFE
  4981                           tosl	equ	0xFFD
  4982                           pclatu	equ	0xFFB
  4983                           pclath	equ	0xFFA
  4984                           tblptru	equ	0xFF8
  4985                           tblptrh	equ	0xFF7
  4986                           tblptrl	equ	0xFF6
  4987                           tablat	equ	0xFF5
  4988                           prodh	equ	0xFF4
  4989                           prodl	equ	0xFF3
  4990                           intcon	equ	0xFF2
  4991                           intcon2	equ	0xFF1
  4992                           intcon3	equ	0xFF0
  4993                           indf0	equ	0xFEF
  4994                           postinc0	equ	0xFEE
  4995                           postdec0	equ	0xFED
  4996                           fsr0h	equ	0xFEA
  4997                           fsr0l	equ	0xFE9
  4998                           wreg	equ	0xFE8
  4999                           postinc1	equ	0xFE6
  5000                           postdec1	equ	0xFE5
  5001                           fsr1h	equ	0xFE2
  5002                           fsr1l	equ	0xFE1
  5003                           indf2	equ	0xFDF
  5004                           postinc2	equ	0xFDE
  5005                           postdec2	equ	0xFDD
  5006                           fsr2h	equ	0xFDA
  5007                           fsr2l	equ	0xFD9
  5008                           status	equ	0xFD8
  5009                           
  5010                           	psect	text27
  5011  000000                     __ptext27:
  5012                           	opt stack 0
  5013                           tosu	equ	0xFFF
  5014                           tosh	equ	0xFFE
  5015                           tosl	equ	0xFFD
  5016                           pclatu	equ	0xFFB
  5017                           pclath	equ	0xFFA
  5018                           tblptru	equ	0xFF8
  5019                           tblptrh	equ	0xFF7
  5020                           tblptrl	equ	0xFF6
  5021                           tablat	equ	0xFF5
  5022                           prodh	equ	0xFF4
  5023                           prodl	equ	0xFF3
  5024                           intcon	equ	0xFF2
  5025                           intcon2	equ	0xFF1
  5026                           intcon3	equ	0xFF0
  5027                           indf0	equ	0xFEF
  5028                           postinc0	equ	0xFEE
  5029                           postdec0	equ	0xFED
  5030                           fsr0h	equ	0xFEA
  5031                           fsr0l	equ	0xFE9
  5032                           wreg	equ	0xFE8
  5033                           postinc1	equ	0xFE6
  5034                           postdec1	equ	0xFE5
  5035                           fsr1h	equ	0xFE2
  5036                           fsr1l	equ	0xFE1
  5037                           indf2	equ	0xFDF
  5038                           postinc2	equ	0xFDE
  5039                           postdec2	equ	0xFDD
  5040                           fsr2h	equ	0xFDA
  5041                           fsr2l	equ	0xFD9
  5042                           status	equ	0xFD8
  5043                           
  5044                           	psect	rparam
  5045  0000                     tosu	equ	0xFFF
  5046                           tosh	equ	0xFFE
  5047                           tosl	equ	0xFFD
  5048                           pclatu	equ	0xFFB
  5049                           pclath	equ	0xFFA
  5050                           tblptru	equ	0xFF8
  5051                           tblptrh	equ	0xFF7
  5052                           tblptrl	equ	0xFF6
  5053                           tablat	equ	0xFF5
  5054                           prodh	equ	0xFF4
  5055                           prodl	equ	0xFF3
  5056                           intcon	equ	0xFF2
  5057                           intcon2	equ	0xFF1
  5058                           intcon3	equ	0xFF0
  5059                           indf0	equ	0xFEF
  5060                           postinc0	equ	0xFEE
  5061                           postdec0	equ	0xFED
  5062                           fsr0h	equ	0xFEA
  5063                           fsr0l	equ	0xFE9
  5064                           wreg	equ	0xFE8
  5065                           postinc1	equ	0xFE6
  5066                           postdec1	equ	0xFE5
  5067                           fsr1h	equ	0xFE2
  5068                           fsr1l	equ	0xFE1
  5069                           indf2	equ	0xFDF
  5070                           postinc2	equ	0xFDE
  5071                           postdec2	equ	0xFDD
  5072                           fsr2h	equ	0xFDA
  5073                           fsr2l	equ	0xFD9
  5074                           status	equ	0xFD8


Data Sizes:
    Strings     29
    Constant    40
    Data        15
    BSS         76
    Persistent  17
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     66      78
    BANK0           160     15     111
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    S833$0$0	PTR const unsigned char  size(2) Largest target is 33
		 -> STR_4(CODE[5]), STR_3(CODE[17]), lcd_printc@fmt(COMRAM[2]), lcd_printi@fmt(BANK0[33]), 
		 -> lcd_printl@fmt(BANK0[33]), 

    ?_lcd_get.setCursor	PTR FTN(unsigned char ,unsigned char ,)void  size(2) Largest target is 0
		 -> lcd_set_cursor(), 

    ?_lcd_get.clear	PTR FTN()void  size(2) Largest target is 0
		 -> lcd_clear(), 

    ?_lcd_get.printc	PTR FTN(unsigned char ,)void  size(2) Largest target is 0
		 -> lcd_printc(), 

    ?_lcd_get.printi	PTR FTN(int ,)void  size(2) Largest target is 0
		 -> lcd_printi(), 

    ?_lcd_get.printl	PTR FTN(long ,)void  size(2) Largest target is 0
		 -> lcd_printl(), 

    ?_lcd_get.prints	PTR FTN(PTR const unsigned char ,)void  size(2) Largest target is 0
		 -> lcd_print(), 

    sprintf@f	PTR const unsigned char  size(2) Largest target is 4
		 -> STR_2(CODE[3]), STR_1(CODE[4]), 

    sprintf@sp	PTR unsigned char  size(2) Largest target is 33
		 -> lcd_printi@fmt(BANK0[33]), lcd_printl@fmt(BANK0[33]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(COMRAM[2]), 

    S1161$_cp	PTR const unsigned char  size(2) Largest target is 0

    _val._str._cp	PTR const unsigned char  size(2) Largest target is 0

    lcd.setCursor	PTR FTN(unsigned char ,unsigned char ,)void  size(2) Largest target is 0
		 -> lcd_set_cursor(), 

    lcd.clear	PTR FTN()void  size(2) Largest target is 0
		 -> lcd_clear(), 

    lcd.printc	PTR FTN(unsigned char ,)void  size(2) Largest target is 0
		 -> lcd_printc(), 

    lcd.printi	PTR FTN(int ,)void  size(2) Largest target is 0
		 -> lcd_printi(), 

    lcd.printl	PTR FTN(long ,)void  size(2) Largest target is 0
		 -> lcd_printl(), 

    lcd.prints	PTR FTN(PTR const unsigned char ,)void  size(2) Largest target is 0
		 -> lcd_print(), 

    lcd_print@s	PTR const unsigned char  size(2) Largest target is 33
		 -> STR_4(CODE[5]), STR_3(CODE[17]), lcd_printc@fmt(COMRAM[2]), lcd_printi@fmt(BANK0[33]), 
		 -> lcd_printl@fmt(BANK0[33]), 

    F5483.setCursor	PTR FTN(unsigned char ,unsigned char ,)void  size(2) Largest target is 0
		 -> lcd_set_cursor(), 

    F5483.clear	PTR FTN()void  size(2) Largest target is 0
		 -> lcd_clear(), 

    F5483.printc	PTR FTN(unsigned char ,)void  size(2) Largest target is 0
		 -> lcd_printc(), 

    F5483.printi	PTR FTN(int ,)void  size(2) Largest target is 0
		 -> lcd_printi(), 

    F5483.printl	PTR FTN(long ,)void  size(2) Largest target is 0
		 -> lcd_printl(), 

    F5483.prints	PTR FTN(PTR const unsigned char ,)void  size(2) Largest target is 0
		 -> lcd_print(), 

    b.setCursor	PTR FTN(unsigned char ,unsigned char ,)void  size(2) Largest target is 0
		 -> lcd_set_cursor(), 

    b.clear	PTR FTN()void  size(2) Largest target is 0
		 -> lcd_clear(), 

    b.printc	PTR FTN(unsigned char ,)void  size(2) Largest target is 0
		 -> lcd_printc(), 

    b.printi	PTR FTN(int ,)void  size(2) Largest target is 0
		 -> lcd_printi(), 

    b.printl	PTR FTN(long ,)void  size(2) Largest target is 0
		 -> lcd_printl(), 

    b.prints	PTR FTN(PTR const unsigned char ,)void  size(2) Largest target is 0
		 -> lcd_print(), 

    S833$setCursor	PTR FTN(unsigned char ,unsigned char ,)void  size(2) Largest target is 0
		 -> lcd_set_cursor(), 

    lcd_selected.setCursor	PTR FTN(unsigned char ,unsigned char ,)void  size(2) Largest target is 0
		 -> lcd_set_cursor(), 

    S833$clear	PTR FTN()void  size(2) Largest target is 0
		 -> lcd_clear(), 

    lcd_selected.clear	PTR FTN()void  size(2) Largest target is 0
		 -> lcd_clear(), 

    S833$printc	PTR FTN(unsigned char ,)void  size(2) Largest target is 0
		 -> lcd_printc(), 

    lcd_selected.printc	PTR FTN(unsigned char ,)void  size(2) Largest target is 0
		 -> lcd_printc(), 

    S833$printi	PTR FTN(int ,)void  size(2) Largest target is 0
		 -> lcd_printi(), 

    lcd_selected.printi	PTR FTN(int ,)void  size(2) Largest target is 0
		 -> lcd_printi(), 

    S833$printl	PTR FTN(long ,)void  size(2) Largest target is 0
		 -> lcd_printl(), 

    lcd_selected.printl	PTR FTN(long ,)void  size(2) Largest target is 0
		 -> lcd_printl(), 

    S833$prints	PTR FTN(PTR const unsigned char ,)void  size(2) Largest target is 0
		 -> lcd_print(), 

    lcd_selected.prints	PTR FTN(PTR const unsigned char ,)void  size(2) Largest target is 0
		 -> lcd_print(), 

    lcd_select@lcd_ptr	PTR struct . size(2) Largest target is 15
		 -> lcd(BANK0[15]), 

    lcd_selected	PTR struct . size(2) Largest target is 15
		 -> lcd(BANK0[15]), NULL(NULL[0]), 

    attachInterrupt@callback	PTR FTN()void  size(2) Largest target is 0
		 -> counter(), 

    interrupt_list	PTR FTN()void [2] size(2) Largest target is 0
		 -> counter(), Absolute function(), 


Critical Paths under _main in COMRAM

    _setup->_lcd_get
    _lcd_init->_lcd_cmd
    _lcd_clear->_lcd_cmd
    _attachInterrupt->_OpenRB0INT
    _attachInterrupt->_OpenRB1INT
    _loop->_lcd_printl
    _lcd_set_cursor->_lcd_cmd
    _lcd_cmd->_digitalWrite
    _lcd_printl->_sprintf
    _sprintf->___llmod
    ___llmod->___lldiv
    ___lldiv->___lmul
    _lcd_print->_lcd_data
    _lcd_data->_digitalWrite
    _digitalWrite->_digitalRead
    _delay->_Delay1KTCYx

Critical Paths under _ArduimInterruptHandler in COMRAM

    None.

Critical Paths under _main in BANK0

    _main->_loop
    _lcd_printl->_sprintf

Critical Paths under _ArduimInterruptHandler in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ArduimInterruptHandler in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ArduimInterruptHandler in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ArduimInterruptHandler in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _ArduimInterruptHandler in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _ArduimInterruptHandler in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _ArduimInterruptHandler in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _ArduimInterruptHandler in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   27736
                               _loop
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0   14674
                    _attachInterrupt
                            _lcd_get
                          _lcd_print *
                         _lcd_select
                     _lcd_set_cursor *
                            _pinMode
 ---------------------------------------------------------------------------------
 (2) _lcd_select                                           2     0      2    7673
                                             21 COMRAM     2     0      2
                           _lcd_init
 ---------------------------------------------------------------------------------
 (3) _lcd_init                                             0     0      0    7565
                       _digitalWrite
                          _lcd_clear
                            _lcd_cmd
                            _pinMode
 ---------------------------------------------------------------------------------
 (2) _pinMode                                              2     1      1    1004
                                             14 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (4) _lcd_clear                                            0     0      0    2501
                              _delay
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (2) _lcd_get                                             32    16     16     289
                                             14 COMRAM    32    16     16
 ---------------------------------------------------------------------------------
 (2) _attachInterrupt                                      5     1      4     504
                                             15 COMRAM     5     1      4
                         _OpenRB0INT
                         _OpenRB1INT
 ---------------------------------------------------------------------------------
 (3) _OpenRB1INT                                           1     1      0     110
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _OpenRB0INT                                           1     1      0      88
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _loop                                                 4     4      0   13062
                                             11 BANK0      4     4      0
                            ___lldiv
                             ___lmul
                              _delay
                        _digitalRead
                       _digitalWrite
                          _lcd_print *
                         _lcd_printl *
                     _lcd_set_cursor *
 ---------------------------------------------------------------------------------
 (2) _lcd_set_cursor                                       4     3      1    2549
                                             21 COMRAM     4     3      1
                            _lcd_cmd
 ---------------------------------------------------------------------------------
 (3) _lcd_cmd                                              1     1      0    2251
                                             20 COMRAM     1     1      0
                  _delayMicroseconds
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (2) _lcd_printl                                           4     0      4    4750
                                             62 COMRAM     4     0      4
                          _lcd_print
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             25    17      8    2010
                                             48 COMRAM    14     6      8
                                              0 BANK0     11    11      0
                            ___lldiv
                            ___llmod
 ---------------------------------------------------------------------------------
 (4) ___llmod                                              9     1      8     386
                                             39 COMRAM     9     1      8
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             13     5      8     549
                                             26 COMRAM    13     5      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 (2) _lcd_print                                            2     0      2    2655
                                             21 COMRAM     2     0      2
                           _lcd_data
 ---------------------------------------------------------------------------------
 (3) _lcd_data                                             1     1      0    2251
                                             20 COMRAM     1     1      0
                  _delayMicroseconds
                       _digitalWrite
 ---------------------------------------------------------------------------------
 (4) _digitalWrite                                         2     1      1    1809
                                             18 COMRAM     2     1      1
                        _digitalRead (ARG)
 ---------------------------------------------------------------------------------
 (4) _delayMicroseconds                                    4     2      2     287
                                             14 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (2) _digitalRead                                          4     2      2      62
                                             14 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (5) _delay                                                4     0      4     250
                                             15 COMRAM     4     0      4
                        _Delay1KTCYx
 ---------------------------------------------------------------------------------
 (6) _Delay1KTCYx                                          1     1      0      31
                                             14 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) ___lmul                                              12     4      8     404
                                             14 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _ArduimInterruptHandler                              14    14      0       0
                                              0 COMRAM    14    14      0
                   Absolute function *
                            _counter *
 ---------------------------------------------------------------------------------
 (8) _counter                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (8) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _loop
     ___lldiv
       ___lmul (ARG)
     ___lmul
     _delay
       _Delay1KTCYx
     _digitalRead
     _digitalWrite
       _digitalRead (ARG)
     _lcd_print *
       _lcd_data
         _delayMicroseconds
         _digitalWrite
           _digitalRead (ARG)
     _lcd_printl *
       _lcd_print
         _lcd_data
           _delayMicroseconds
           _digitalWrite
             _digitalRead (ARG)
       _sprintf
         ___lldiv
           ___lmul (ARG)
         ___llmod
           ___lldiv (ARG)
             ___lmul (ARG)
     _lcd_set_cursor *
       _lcd_cmd
         _delayMicroseconds
         _digitalWrite
           _digitalRead (ARG)
   _setup
     _attachInterrupt
       _OpenRB0INT
       _OpenRB1INT
     _lcd_get
     _lcd_print *
       _lcd_data
         _delayMicroseconds
         _digitalWrite
           _digitalRead (ARG)
     _lcd_select *
       _lcd_init
         _digitalWrite
           _digitalRead (ARG)
         _lcd_clear
           _delay
             _Delay1KTCYx
           _lcd_cmd
             _delayMicroseconds
             _digitalWrite
               _digitalRead (ARG)
         _lcd_cmd
           _delayMicroseconds
           _digitalWrite
             _digitalRead (ARG)
         _pinMode
     _lcd_set_cursor *
       _lcd_cmd
         _delayMicroseconds
         _digitalWrite
           _digitalRead (ARG)
     _pinMode *

 _ArduimInterruptHandler (ROOT)
   Absolute function(Fake) *
   _counter *

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      F      6F       5       69.4%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     42      4E       1       82.1%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      BD      20        0.0%
DATA                 0      0      BD       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.32 build 58300 
Symbol Table                                                                                   Tue Jun 18 16:38:24 2019

                   lcd_data@data 0015                      lcd_get@port 0010  
                            l111 0D34                              l200 0B48  
                            l120 0D94                              l201 0B54  
                            l121 0DA0                              l113 0D40  
                            l210 0BC0                              l202 0B60  
                            l130 0E0C                              l122 0DAC  
                            l114 0D4C                              l211 0BCC  
                            l203 0B6C                              l131 0E18  
                            l123 0DB8                              l115 0D58  
                            l220 0C38                              l212 0BD8  
                            l204 0B78                              l140 0E84  
                            l132 0E24                              l124 0DC4  
                            l116 0D64                              l221 0C44  
                            l213 0BE4                              l205 0B84  
                            l141 0E90                              l133 0E30  
                            l125 0DD0                              l117 0D70  
                            l109 0F52                              l222 0C50  
                            l214 0BF0                              l206 0B90  
                            l134 0E3C                              l126 0DDC  
                            l118 0D7C                              l215 0BFC  
                            l207 0B9C                              l135 0E48  
                            l127 0DE8                              l119 0D88  
                            l216 0C08                              l208 0BA8  
                            l136 0E54                              l128 0DF4  
                            l145 10F4                              l217 0C14  
                            l209 0BB4                              l137 0E60  
                            l129 0E00                              l218 0C20  
                            l138 0E6C                              l219 0C2C  
                            l139 0E78                              l340 1458  
                            l341 145E                              l254 18B0  
                            l190 0ADC                              l350 14F6  
                            l342 1464                              l510 17DE  
                            l502 17B4                              l247 18FA  
                            l351 14FC                              l192 0AE8  
                            l352 1502                              l416 08CE  
                            l512 17E0                              l504 17BE  
                            l193 0AF4                              l337 144C  
                            l194 0B00                              l506 17C8  
                            l179 102A                              l195 0B0C  
                            l347 14EA                              l339 1452  
                            l196 0B18                              l188 0D1E  
                            l508 17D2                              l292 1656  
                            l197 0B24                              l349 14F0  
                            l509 17D4                              l198 0B30  
                            l199 0B3C                              l491 1880  
                            l299 1654                              l493 1882  
                            l485 1860                              l487 186A  
                            l488 186C                              l489 1876  
                            l775 191A                              _PR2 000FCB  
                            _lcd 00A2                              fsr0 000FE9  
        __end_of_attachInterrupt 1658                              tosl 000FFD  
                            wreg 000FE8                  ?_lcd_set_cursor 0016  
                   __CFG_LVP$OFF 000000                     __CFG_WDT$OFF 000000  
                           l1008 15DE                             l1018 16AC  
                           l2202 1634                             l2320 0C5C  
                           l2400 15D0                             l2208 1646  
                           l2410 1676                             l2340 18A8  
                           l2316 0AD4                             l2412 167A  
                           l2430 129E                             l2422 1286  
                           l2600 0FE6                             l2520 0F6E  
                           l2440 1716                             l2416 169E  
                           l2408 166A                             l2504 0A8C  
                           l2360 1496                             l2192 1606  
                           l2424 128C                             l2506 0AA0  
                           l2426 1292                             l2434 12A4  
                           l2620 1004                             l2612 0FF8  
                           l2604 0FEC                             l2540 0F8C  
                           l2532 0F80                             l2524 0F74  
                           l2516 0F5E                             l2444 173E  
                           l2508 0ABA                             l2460 089C  
                           l2196 1618                             l2428 1298  
                           l2436 12D0                             l2374 1508  
                           l2390 159C                             l2454 0890  
                           l2358 146A                             l2198 1622  
                           l2640 1022                             l2632 1016  
                           l2624 100A                             l2616 0FFE  
                           l2608 0FF2                             l2560 0FAA  
                           l2552 0F9E                             l2544 0F92  
                           l2536 0F86                             l2528 0F7A  
                           l2376 1534                             l2392 15A0  
                           l2456 0898                             l2448 0872  
                           l2490 09BE                             l2466 08F8  
                           l2636 101C                             l2628 1010  
                           l2580 0FC8                             l2572 0FBC  
                           l2564 0FB0                             l2556 0FA4  
                           l2548 0F98                             l2388 1590  
                           l2476 0972                             l2660 18C2  
                           l1932 1878                             l1924 1862  
                           l2708 1958                             l2670 16CE  
                           l2646 1030                             l1950 17CA  
                           l1942 17B6                             l1862 0E9C  
                           l2592 0FDA                             l2584 0FCE  
                           l2576 0FC2                             l2568 0FB6  
                           l2496 09DA                             l2674 16E2  
                           l2498 09EE                             l1946 17C0  
                           l1858 0D2C                             l2596 0FE0  
                           l2588 0FD4                             STR_1 085B  
                           STR_2 085F                             STR_3 0845  
                           STR_4 0856                             u2105 0D84  
                           u2106 0D86                             u2115 0D90  
                           u2116 0D92                             u2205 0DFC  
                           u2125 0D9C                             u2045 0D3C  
                           u2206 0DFE                             u2126 0D9E  
                           u2046 0D3E                             u2215 0E08  
                           u2135 0DA8                             u2055 0D48  
                           u2216 0E0A                             u2136 0DAA  
                           u2056 0D4A                             u2305 0E74  
                           u2225 0E14                             u2145 0DB4  
                           u2065 0D54                             u2306 0E76  
                           u2226 0E16                             u2146 0DB6  
                           u2066 0D56                             u2315 0E80  
                           u2235 0E20                             u2155 0DC0  
                           u2075 0D60                             u2316 0E82  
                           u2236 0E22                             u2156 0DC2  
                           u2076 0D62                             u3205 0B20  
                           u2325 0E8C                             u2245 0E2C  
                           u2165 0DCC                             u2085 0D6C  
                           u4030 1026                             u3206 0B22  
                           u2326 0E8E                             u2246 0E2E  
                           u2166 0DCE                             u2086 0D6E  
                           u3215 0B2C                             u2335 0E98  
                           u2255 0E38                             u2175 0DD8  
                           u2095 0D78                             u3216 0B2E  
                           u2336 0E9A                             u2256 0E3A  
                           u2176 0DDA                             u2096 0D7A  
                           u3305 0B98                             u3225 0B38  
                           u2265 0E44                             u2185 0DE4  
                           u3306 0B9A                             u3226 0B3A  
                           u2266 0E46                             u2186 0DE6  
                           u3315 0BA4                             u3235 0B44  
                           u3155 0AE4                             u2275 0E50  
                           u2195 0DF0                             u3316 0BA6  
                           u3236 0B46                             u3156 0AE6  
                           u4140 1220                             u4108 117C  
                           u2276 0E52                             u2196 0DF2  
                           u3405 0C10                             u3325 0BB0  
                           u3245 0B50                             u3165 0AF0  
                           u4109 1196                             u2285 0E5C  
                           u3406 0C12                             u3326 0BB2  
                           u3246 0B52                             u3166 0AF2  
                           u4118 11A2                             u2286 0E5E  
                           u3415 0C1C                             u3335 0BBC  
                           u3255 0B5C                             u3175 0AFC  
                           u4119 11BC                             u2295 0E68  
                           u4071 13A4                             u3416 0C1E  
                           u3336 0BBE                             u3256 0B5E  
                           u3176 0AFE                             u3600 175E  
                           u4128 11C6                             u2296 0E6A  
                           u3425 0C28                             u3345 0BC8  
                           u3265 0B68                             u3185 0B08  
                           u4129 11E0                             u3426 0C2A  
                           u3346 0BCA                             u3266 0B6A  
                           u3186 0B0A                             u4146 1222  
                           u4138 11FA                             u3435 0C34  
                           u3355 0BD4                             u3275 0B74  
                           u3195 0B14                             u4139 120E  
                           u3436 0C36                             u3356 0BD6  
                           u3276 0B76                             u3196 0B16  
                           u4157 191C                             u3445 0C40  
                           u3365 0BE0                             u3285 0B80  
                           u3446 0C42                             u3366 0BE2  
                           u3286 0B82                             u3455 0C4C  
                           u3375 0BEC                             u3295 0B8C  
                           u3607 1754                             u3456 0C4E  
                           u3376 0BEE                             u3296 0B8E  
                           u4088 13E6                             u3465 0C58  
                           u3385 0BF8                             u4089 1400  
                           u3466 0C5A                             u3386 0BFA  
                           u4098 140C                             u3395 0C04  
                           u4099 1426                             u3396 0C06  
                           u3645 094A                             u3590 1736  
                           u3728 0F66                             u2971 1828  
                           u3597 172C                             u2981 1846  
                    lcd_printl@l 003F                     __CFG_WRTB$ON 000000  
                           _main 1954                             _loop 10F6  
                           fsr0h 000FEA                             fsr1h 000FE2  
                           indf0 000FEF                             fsr0l 000FE9  
                           fsr2h 000FDA                             fsr1l 000FE1  
                           indf2 000FDF                             fsr2l 000FD9  
                           pclat 000FFA                             prodh 000FF4  
                           prodl 000FF3                             start 0818  
                    _Delay1KTCYx 1918                    __CFG_PLLDIV$5 000000  
__size_of_ArduimInterruptHandler 0B88                            ?_main 0001  
                          ?_loop 0001                  __end_of___lldiv 15F0  
                __end_of___llmod 16BE                            i2l313 1356  
                          _PORTA 000F80                            _PORTB 000F81  
                          _PORTC 000F82                            _PORTD 000F83  
                          _PORTE 000F84                    __CFG_USBDIV$2 000000  
                          _TRISA 000F92                            _TRISB 000F93  
                          _TRISC 000F94                            _TRISD 000F95  
                          _TRISE 000F96              ___lmul@multiplicand 0013  
                __end_of_lcd_cmd 14D0                  __end_of_lcd_get 1854  
                          _delay 18DC                  __end_of_counter 1954  
                __end_of_dpowers 0845                            _count 0043  
                __end_of_pinMode 0F54                            _setup 1390  
                          pclath 000FFA                            tablat 000FF5  
                          status 000FD8                  __end_of_sprintf 0AC8  
           __end_of_digitalWrite 0D20                  __initialization 1766  
                   __end_of_main 195E                     __end_of_loop 122C  
                         ??_main 0043                           ??_loop 0043  
                  __activetblptr 000002             __size_of_digitalRead 01A2  
                     _OpenRB0INT 1854                       _OpenRB1INT 17A8  
            _lcd_set_cursor$1121 0018                 ?_attachInterrupt 0010  
                         ?_delay 0010                           _ADCON0 000FC2  
                         _ADCON1 000FC1                           _ADCON2 000FC0  
               ___llmod@dividend 0028                           _ADRESH 000FC4  
                         _ADRESL 000FC3                           _CCPR1L 000FBE  
                         ?_setup 0001                           i2l1786 1334  
             delayMicroseconds@i 0011           _ArduimInterruptHandler 0808  
                 __CFG_VREGEN$ON 000000                 __end_of_lcd_data 156E  
                  lcd_printc@fmt 004B                 __end_of_lcd_init 12E8  
                  lcd_printi@fmt 0060                    lcd_printl@fmt 0081  
                         ___lmul 16BE                        ??___lldiv 0023  
                      ??___llmod 0030                           clear_0 176C  
                         clear_1 1778                        ??_lcd_cmd 0015  
                      ??_lcd_get 001F                        ??_counter 0001  
                      ??_pinMode 0010                     __mediumconst 0000  
                         tblptrh 000FF7                           tblptrl 000FF6  
                         tblptru 000FF8                        ??_sprintf 0039  
             attachInterrupt@pin 0014                       __accesstop 0060  
        __end_of__initialization 179E                  __CFG_PBADEN$OFF 000000  
                    pinMode@mode 000F                   __pcstackCOMRAM 0001  
                   __pidataBANK0 1928                    __end_of_delay 18FC  
                  __end_of_setup 1432                 ??_lcd_set_cursor 0017  
                    ?_OpenRB0INT 0001                      ?_OpenRB1INT 0001  
             __size_of_lcd_clear 001C             lcd_set_cursor@column 0017  
                        ??_delay 0014               __size_of_lcd_print 0052  
                        ??_setup 002F                       __pbssBANK0 0060  
          __size_of_digitalWrite 0258                       __pnvCOMRAM 004D  
                        ?___lmul 000F                          _CCP1CON 000FBD  
                   ?_Delay1KTCYx 0001                   ___lmul@product 0017  
                     _lcd_select 1938                     _digitalWrite 0AC8  
                     _lcd_printc 000000                       _lcd_printi 000000  
                     _lcd_printl 17E2                        ?_lcd_data 0001  
                      ?_lcd_init 0001              __size_of_OpenRB0INT 0030  
            __size_of_OpenRB1INT 003A                          __Hparam 0000  
                        __Lparam 0000                __end_of_lcd_clear 1918  
              __end_of_lcd_print 1766                  __size_of___lmul 0056  
               OpenRB0INT@config 000F                          ___lldiv 156E  
                        ___llmod 1658                     __psmallconst 081C  
                        __pcinit 1766                          __ramtop 0800  
                        __ptext0 1954                          __ptext1 1390  
                        __ptext2 1938                          __ptext3 122C  
                        __ptext4 0D20                          __ptext5 18FC  
                        __ptext6 181C                          __ptext7 15F0  
                        __ptext8 17A8                          __ptext9 1854  
                        _lcd_cmd 1432                          _lcd_get 181C  
                        _counter 1946                 OpenRB1INT@config 000F  
                        _dpowers 081D                        _T2CONbits 000FCA  
                        _pinMode 0D20          ?_ArduimInterruptHandler 0001  
                     ??_lcd_data 0015                          _sprintf 0864  
                     ??_lcd_init 0016                   __pintcode_body 12E8  
           end_of_initialization 179E            delayMicroseconds@time 000F  
                  __Lmediumconst 0000                          int_func 12E8  
                 digitalRead@pin 0012                          loop@rpm 00CB  
                ___lldiv@divisor 001F                  ___lldiv@counter 0027  
                        postdec0 000FED                          postdec1 000FE5  
                        postdec2 000FDD                          postinc0 000FEE  
                        postinc1 000FE6                          postinc2 000FDE  
                   _lcd_selected 004D                    ??_digitalRead 0011  
            attachInterrupt@mode 0012                        _PORTAbits 000F80  
                      _PORTBbits 000F81                        _PORTCbits 000F82  
                      _PORTDbits 000F83                        _PORTEbits 000F84  
 __end_of_ArduimInterruptHandler 1390                        _TRISAbits 000F92  
                      _TRISBbits 000F93                        _TRISCbits 000F94  
                      _TRISDbits 000F95                        _TRISEbits 000F96  
                     lcd_cmd@cmd 0015                      ?_lcd_select 0016  
                    ?_lcd_printl 003F         __size_of_attachInterrupt 0068  
                     lcd_print@s 0016                   __end_of___lmul 1714  
           __size_of_Delay1KTCYx 0010                     ??_OpenRB0INT 000F  
                   ??_OpenRB1INT 000F              start_initialization 1766  
            __end_of_digitalRead 10F6                  ___llmod@divisor 002C  
                ___llmod@counter 0030               __end_of_OpenRB0INT 1884  
             __end_of_OpenRB1INT 17E2                         ??___lmul 0017  
            __size_of_lcd_select 000E              __size_of_lcd_printl 003A  
                    __pdataBANK0 00B1                lcd_select@lcd_ptr 0016  
                    __pbssCOMRAM 0043                    __pcstackBANK0 00C0  
                     pinMode@pin 0010                _delayMicroseconds 1884  
            __end_of__stringdata 0862               ?_delayMicroseconds 000F  
                Delay1KTCYx@unit 000F                __size_of_lcd_data 009E  
              __size_of_lcd_init 00BC                      sprintf@_val 00C5  
                    sprintf@flag 00C4                      sprintf@prec 00C0  
                      __pnvBANK0 00A2              ??_delayMicroseconds 0011  
              ??_attachInterrupt 0014                        __pintcode 0808  
                       ?___lldiv 001B                         ?___llmod 0028  
                      _lcd_clear 18FC                      _digitalRead 0F54  
                      _lcd_print 1714                         ?_lcd_cmd 0001  
                       ?_lcd_get 000F                      __smallconst 081C  
                       ?_counter 0001        __end_of_delayMicroseconds 18B2  
                       ?_pinMode 000F                   __size_of_delay 0020  
                       ?_sprintf 0031                   __size_of_setup 00A2  
        __size_of_lcd_set_cursor 002A                        delay@time 0010  
        attachInterrupt@callback 0010                         _PIE1bits 000F9D  
                       i2u157_48 1320                         i2u159_48 1342  
                       _PIR1bits 000F9E                       ?_lcd_clear 0001  
                     ?_lcd_print 0016                       _ADCON0bits 000FC2  
                      lcd_get@en 000F                      __stringdata 0845  
                      lcd_get@rs 001F                     ??_lcd_select 0018  
                   ??_lcd_printl 0043                ___lmul@multiplier 000F  
                    _INTCON2bits 000FF1                      _INTCON3bits 000FF0  
                      copy_data0 1792                         __Hrparam 0000  
                       __Lrparam 0000               __end_of_lcd_select 1946  
             __end_of_lcd_printl 181C                 __size_of___lldiv 0082  
               __size_of___llmod 0066                 __size_of_lcd_cmd 009E  
               __size_of_lcd_get 0038               lcd_set_cursor@line 0016  
     __size_of_delayMicroseconds 002E                 __size_of_counter 000E  
               __size_of_pinMode 0234                         __ptext10 10F6  
                       __ptext11 18B2                         __ptext20 1884  
                       __ptext12 1432                         __ptext21 0F54  
                       __ptext13 17E2                         __ptext22 18DC  
                       __ptext14 0864                         __ptext23 1918  
                       __ptext15 1658                         __ptext24 16BE  
                       __ptext16 156E                         __ptext17 1714  
                       __ptext26 1946                         __ptext18 14D0  
                       __ptext27 0000                         __ptext19 0AC8  
                       _lcd_data 14D0                         _lcd_init 122C  
               __size_of_sprintf 0264                    __size_of_main 000A  
                  __size_of_loop 0136                         lcd_get@b 0020  
                  ??_Delay1KTCYx 000F                      ??_lcd_clear 0016  
                    ??_lcd_print 0018                       _INTCONbits 000FF2  
                  ?_digitalWrite 0013                         intlevel2 0000  
                 _lcd_set_cursor 18B2                  _attachInterrupt 15F0  
                      sprintf@ap 00C2                        sprintf@sp 0031  
              digitalWrite@level 0013                 ___lldiv@dividend 001B  
                   ?_digitalRead 000F         ??_ArduimInterruptHandler 0001  
                       sprintf@c 00CA                         sprintf@f 0033  
               ___lldiv@quotient 0023                   _interrupt_list 0047  
            __end_of_Delay1KTCYx 1928                   ??_digitalWrite 0014  
         __end_of_lcd_set_cursor 18DC               __CFG_FOSC$HSPLL_HS 000000  
                digitalWrite@pin 0014                     lcd_get@F5483 00B1  
